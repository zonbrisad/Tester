   1              		.file	"jcarith.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.start_pass,"ax",@progbits
   5              		.p2align 4
   7              	start_pass:
   8              	.LVL0:
   9              	.LFB60:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jcarith.c"
   1:fltk-1.3.4-1/jpeg/jcarith.c **** /*
   2:fltk-1.3.4-1/jpeg/jcarith.c ****  * jcarith.c
   3:fltk-1.3.4-1/jpeg/jcarith.c ****  *
   4:fltk-1.3.4-1/jpeg/jcarith.c ****  * Developed 1997-2013 by Guido Vollbeding.
   5:fltk-1.3.4-1/jpeg/jcarith.c ****  * This file is part of the Independent JPEG Group's software.
   6:fltk-1.3.4-1/jpeg/jcarith.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:fltk-1.3.4-1/jpeg/jcarith.c ****  *
   8:fltk-1.3.4-1/jpeg/jcarith.c ****  * This file contains portable arithmetic entropy encoding routines for JPEG
   9:fltk-1.3.4-1/jpeg/jcarith.c ****  * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).
  10:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  11:fltk-1.3.4-1/jpeg/jcarith.c ****  * Both sequential and progressive modes are supported in this single module.
  12:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  13:fltk-1.3.4-1/jpeg/jcarith.c ****  * Suspension is not currently supported in this module.
  14:fltk-1.3.4-1/jpeg/jcarith.c ****  */
  15:fltk-1.3.4-1/jpeg/jcarith.c **** 
  16:fltk-1.3.4-1/jpeg/jcarith.c **** #define JPEG_INTERNALS
  17:fltk-1.3.4-1/jpeg/jcarith.c **** #include "jinclude.h"
  18:fltk-1.3.4-1/jpeg/jcarith.c **** #include "jpeglib.h"
  19:fltk-1.3.4-1/jpeg/jcarith.c **** 
  20:fltk-1.3.4-1/jpeg/jcarith.c **** 
  21:fltk-1.3.4-1/jpeg/jcarith.c **** /* Expanded entropy encoder object for arithmetic encoding. */
  22:fltk-1.3.4-1/jpeg/jcarith.c **** 
  23:fltk-1.3.4-1/jpeg/jcarith.c **** typedef struct {
  24:fltk-1.3.4-1/jpeg/jcarith.c ****   struct jpeg_entropy_encoder pub; /* public fields */
  25:fltk-1.3.4-1/jpeg/jcarith.c **** 
  26:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 c; /* C register, base of coding interval, layout as in sec. D.1.3 */
  27:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 a;               /* A register, normalized size of coding interval */
  28:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 sc;        /* counter for stacked 0xFF values which might overflow */
  29:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 zc;          /* counter for pending 0x00 output values which might *
  30:fltk-1.3.4-1/jpeg/jcarith.c ****                           * be discarded at the end ("Pacman" termination) */
  31:fltk-1.3.4-1/jpeg/jcarith.c ****   int ct;  /* bit shift counter, determines when next byte will be written */
  32:fltk-1.3.4-1/jpeg/jcarith.c ****   int buffer;                /* buffer for most recent output byte != 0xFF */
  33:fltk-1.3.4-1/jpeg/jcarith.c **** 
  34:fltk-1.3.4-1/jpeg/jcarith.c ****   int last_dc_val[MAX_COMPS_IN_SCAN]; /* last DC coef for each component */
  35:fltk-1.3.4-1/jpeg/jcarith.c ****   int dc_context[MAX_COMPS_IN_SCAN]; /* context index for DC conditioning */
  36:fltk-1.3.4-1/jpeg/jcarith.c **** 
  37:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned int restarts_to_go;	/* MCUs left in this restart interval */
  38:fltk-1.3.4-1/jpeg/jcarith.c ****   int next_restart_num;		/* next restart number to write (0-7) */
  39:fltk-1.3.4-1/jpeg/jcarith.c **** 
  40:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Pointers to statistics areas (these workspaces have image lifespan) */
  41:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char * dc_stats[NUM_ARITH_TBLS];
  42:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char * ac_stats[NUM_ARITH_TBLS];
  43:fltk-1.3.4-1/jpeg/jcarith.c **** 
  44:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Statistics bin for coding with fixed probability 0.5 */
  45:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char fixed_bin[4];
  46:fltk-1.3.4-1/jpeg/jcarith.c **** } arith_entropy_encoder;
  47:fltk-1.3.4-1/jpeg/jcarith.c **** 
  48:fltk-1.3.4-1/jpeg/jcarith.c **** typedef arith_entropy_encoder * arith_entropy_ptr;
  49:fltk-1.3.4-1/jpeg/jcarith.c **** 
  50:fltk-1.3.4-1/jpeg/jcarith.c **** /* The following two definitions specify the allocation chunk size
  51:fltk-1.3.4-1/jpeg/jcarith.c ****  * for the statistics area.
  52:fltk-1.3.4-1/jpeg/jcarith.c ****  * According to sections F.1.4.4.1.3 and F.1.4.4.2, we need at least
  53:fltk-1.3.4-1/jpeg/jcarith.c ****  * 49 statistics bins for DC, and 245 statistics bins for AC coding.
  54:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  55:fltk-1.3.4-1/jpeg/jcarith.c ****  * We use a compact representation with 1 byte per statistics bin,
  56:fltk-1.3.4-1/jpeg/jcarith.c ****  * thus the numbers directly represent byte sizes.
  57:fltk-1.3.4-1/jpeg/jcarith.c ****  * This 1 byte per statistics bin contains the meaning of the MPS
  58:fltk-1.3.4-1/jpeg/jcarith.c ****  * (more probable symbol) in the highest bit (mask 0x80), and the
  59:fltk-1.3.4-1/jpeg/jcarith.c ****  * index into the probability estimation state machine table
  60:fltk-1.3.4-1/jpeg/jcarith.c ****  * in the lower bits (mask 0x7F).
  61:fltk-1.3.4-1/jpeg/jcarith.c ****  */
  62:fltk-1.3.4-1/jpeg/jcarith.c **** 
  63:fltk-1.3.4-1/jpeg/jcarith.c **** #define DC_STAT_BINS 64
  64:fltk-1.3.4-1/jpeg/jcarith.c **** #define AC_STAT_BINS 256
  65:fltk-1.3.4-1/jpeg/jcarith.c **** 
  66:fltk-1.3.4-1/jpeg/jcarith.c **** /* NOTE: Uncomment the following #define if you want to use the
  67:fltk-1.3.4-1/jpeg/jcarith.c ****  * given formula for calculating the AC conditioning parameter Kx
  68:fltk-1.3.4-1/jpeg/jcarith.c ****  * for spectral selection progressive coding in section G.1.3.2
  69:fltk-1.3.4-1/jpeg/jcarith.c ****  * of the spec (Kx = Kmin + SRL (8 + Se - Kmin) 4).
  70:fltk-1.3.4-1/jpeg/jcarith.c ****  * Although the spec and P&M authors claim that this "has proven
  71:fltk-1.3.4-1/jpeg/jcarith.c ****  * to give good results for 8 bit precision samples", I'm not
  72:fltk-1.3.4-1/jpeg/jcarith.c ****  * convinced yet that this is really beneficial.
  73:fltk-1.3.4-1/jpeg/jcarith.c ****  * Early tests gave only very marginal compression enhancements
  74:fltk-1.3.4-1/jpeg/jcarith.c ****  * (a few - around 5 or so - bytes even for very large files),
  75:fltk-1.3.4-1/jpeg/jcarith.c ****  * which would turn out rather negative if we'd suppress the
  76:fltk-1.3.4-1/jpeg/jcarith.c ****  * DAC (Define Arithmetic Conditioning) marker segments for
  77:fltk-1.3.4-1/jpeg/jcarith.c ****  * the default parameters in the future.
  78:fltk-1.3.4-1/jpeg/jcarith.c ****  * Note that currently the marker writing module emits 12-byte
  79:fltk-1.3.4-1/jpeg/jcarith.c ****  * DAC segments for a full-component scan in a color image.
  80:fltk-1.3.4-1/jpeg/jcarith.c ****  * This is not worth worrying about IMHO. However, since the
  81:fltk-1.3.4-1/jpeg/jcarith.c ****  * spec defines the default values to be used if the tables
  82:fltk-1.3.4-1/jpeg/jcarith.c ****  * are omitted (unlike Huffman tables, which are required
  83:fltk-1.3.4-1/jpeg/jcarith.c ****  * anyway), one might optimize this behaviour in the future,
  84:fltk-1.3.4-1/jpeg/jcarith.c ****  * and then it would be disadvantageous to use custom tables if
  85:fltk-1.3.4-1/jpeg/jcarith.c ****  * they don't provide sufficient gain to exceed the DAC size.
  86:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  87:fltk-1.3.4-1/jpeg/jcarith.c ****  * On the other hand, I'd consider it as a reasonable result
  88:fltk-1.3.4-1/jpeg/jcarith.c ****  * that the conditioning has no significant influence on the
  89:fltk-1.3.4-1/jpeg/jcarith.c ****  * compression performance. This means that the basic
  90:fltk-1.3.4-1/jpeg/jcarith.c ****  * statistical model is already rather stable.
  91:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  92:fltk-1.3.4-1/jpeg/jcarith.c ****  * Thus, at the moment, we use the default conditioning values
  93:fltk-1.3.4-1/jpeg/jcarith.c ****  * anyway, and do not use the custom formula.
  94:fltk-1.3.4-1/jpeg/jcarith.c ****  *
  95:fltk-1.3.4-1/jpeg/jcarith.c **** #define CALCULATE_SPECTRAL_CONDITIONING
  96:fltk-1.3.4-1/jpeg/jcarith.c ****  */
  97:fltk-1.3.4-1/jpeg/jcarith.c **** 
  98:fltk-1.3.4-1/jpeg/jcarith.c **** /* IRIGHT_SHIFT is like RIGHT_SHIFT, but works on int rather than INT32.
  99:fltk-1.3.4-1/jpeg/jcarith.c ****  * We assume that int right shift is unsigned if INT32 right shift is,
 100:fltk-1.3.4-1/jpeg/jcarith.c ****  * which should be safe.
 101:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 102:fltk-1.3.4-1/jpeg/jcarith.c **** 
 103:fltk-1.3.4-1/jpeg/jcarith.c **** #ifdef RIGHT_SHIFT_IS_UNSIGNED
 104:fltk-1.3.4-1/jpeg/jcarith.c **** #define ISHIFT_TEMPS	int ishift_temp;
 105:fltk-1.3.4-1/jpeg/jcarith.c **** #define IRIGHT_SHIFT(x,shft)  \
 106:fltk-1.3.4-1/jpeg/jcarith.c **** 	((ishift_temp = (x)) < 0 ? \
 107:fltk-1.3.4-1/jpeg/jcarith.c **** 	 (ishift_temp >> (shft)) | ((~0) << (16-(shft))) : \
 108:fltk-1.3.4-1/jpeg/jcarith.c **** 	 (ishift_temp >> (shft)))
 109:fltk-1.3.4-1/jpeg/jcarith.c **** #else
 110:fltk-1.3.4-1/jpeg/jcarith.c **** #define ISHIFT_TEMPS
 111:fltk-1.3.4-1/jpeg/jcarith.c **** #define IRIGHT_SHIFT(x,shft)	((x) >> (shft))
 112:fltk-1.3.4-1/jpeg/jcarith.c **** #endif
 113:fltk-1.3.4-1/jpeg/jcarith.c **** 
 114:fltk-1.3.4-1/jpeg/jcarith.c **** 
 115:fltk-1.3.4-1/jpeg/jcarith.c **** LOCAL(void)
 116:fltk-1.3.4-1/jpeg/jcarith.c **** emit_byte (int val, j_compress_ptr cinfo)
 117:fltk-1.3.4-1/jpeg/jcarith.c **** /* Write next output byte; we do not support suspension in this module. */
 118:fltk-1.3.4-1/jpeg/jcarith.c **** {
 119:fltk-1.3.4-1/jpeg/jcarith.c ****   struct jpeg_destination_mgr * dest = cinfo->dest;
 120:fltk-1.3.4-1/jpeg/jcarith.c **** 
 121:fltk-1.3.4-1/jpeg/jcarith.c ****   *dest->next_output_byte++ = (JOCTET) val;
 122:fltk-1.3.4-1/jpeg/jcarith.c ****   if (--dest->free_in_buffer == 0)
 123:fltk-1.3.4-1/jpeg/jcarith.c ****     if (! (*dest->empty_output_buffer) (cinfo))
 124:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 125:fltk-1.3.4-1/jpeg/jcarith.c **** }
 126:fltk-1.3.4-1/jpeg/jcarith.c **** 
 127:fltk-1.3.4-1/jpeg/jcarith.c **** 
 128:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 129:fltk-1.3.4-1/jpeg/jcarith.c ****  * Finish up at the end of an arithmetic-compressed scan.
 130:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 131:fltk-1.3.4-1/jpeg/jcarith.c **** 
 132:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(void)
 133:fltk-1.3.4-1/jpeg/jcarith.c **** finish_pass (j_compress_ptr cinfo)
 134:fltk-1.3.4-1/jpeg/jcarith.c **** {
 135:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 136:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 temp;
 137:fltk-1.3.4-1/jpeg/jcarith.c **** 
 138:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Section D.1.8: Termination of encoding */
 139:fltk-1.3.4-1/jpeg/jcarith.c **** 
 140:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Find the e->c in the coding interval with the largest
 141:fltk-1.3.4-1/jpeg/jcarith.c ****    * number of trailing zero bits */
 142:fltk-1.3.4-1/jpeg/jcarith.c ****   if ((temp = (e->a - 1 + e->c) & 0xFFFF0000L) < e->c)
 143:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 144:fltk-1.3.4-1/jpeg/jcarith.c ****   else
 145:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp;
 146:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Send remaining bytes to output */
 147:fltk-1.3.4-1/jpeg/jcarith.c ****   e->c <<= e->ct;
 148:fltk-1.3.4-1/jpeg/jcarith.c ****   if (e->c & 0xF8000000L) {
 149:fltk-1.3.4-1/jpeg/jcarith.c ****     /* One final overflow has to be handled */
 150:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->buffer >= 0) {
 151:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 152:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 153:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 154:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer + 1, cinfo);
 155:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->buffer + 1 == 0xFF)
 156:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 157:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 158:fltk-1.3.4-1/jpeg/jcarith.c ****     e->zc += e->sc;  /* carry-over converts stacked 0xFF bytes to 0x00 */
 159:fltk-1.3.4-1/jpeg/jcarith.c ****     e->sc = 0;
 160:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 161:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->buffer == 0)
 162:fltk-1.3.4-1/jpeg/jcarith.c ****       ++e->zc;
 163:fltk-1.3.4-1/jpeg/jcarith.c ****     else if (e->buffer >= 0) {
 164:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 165:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 166:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 167:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer, cinfo);
 168:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 169:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->sc) {
 170:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 171:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 172:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 173:fltk-1.3.4-1/jpeg/jcarith.c ****       do {
 174:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0xFF, cinfo);
 175:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 176:fltk-1.3.4-1/jpeg/jcarith.c ****       } while (--e->sc);
 177:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 178:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 179:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Output final bytes only if they are not 0x00 */
 180:fltk-1.3.4-1/jpeg/jcarith.c ****   if (e->c & 0x7FFF800L) {
 181:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->zc)  /* output final pending zero bytes */
 182:fltk-1.3.4-1/jpeg/jcarith.c ****       do emit_byte(0x00, cinfo);
 183:fltk-1.3.4-1/jpeg/jcarith.c ****       while (--e->zc);
 184:fltk-1.3.4-1/jpeg/jcarith.c ****     emit_byte((e->c >> 19) & 0xFF, cinfo);
 185:fltk-1.3.4-1/jpeg/jcarith.c ****     if (((e->c >> 19) & 0xFF) == 0xFF)
 186:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 187:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->c & 0x7F800L) {
 188:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte((e->c >> 11) & 0xFF, cinfo);
 189:fltk-1.3.4-1/jpeg/jcarith.c ****       if (((e->c >> 11) & 0xFF) == 0xFF)
 190:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 191:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 192:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 193:fltk-1.3.4-1/jpeg/jcarith.c **** }
 194:fltk-1.3.4-1/jpeg/jcarith.c **** 
 195:fltk-1.3.4-1/jpeg/jcarith.c **** 
 196:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 197:fltk-1.3.4-1/jpeg/jcarith.c ****  * The core arithmetic encoding routine (common in JPEG and JBIG).
 198:fltk-1.3.4-1/jpeg/jcarith.c ****  * This needs to go as fast as possible.
 199:fltk-1.3.4-1/jpeg/jcarith.c ****  * Machine-dependent optimization facilities
 200:fltk-1.3.4-1/jpeg/jcarith.c ****  * are not utilized in this portable implementation.
 201:fltk-1.3.4-1/jpeg/jcarith.c ****  * However, this code should be fairly efficient and
 202:fltk-1.3.4-1/jpeg/jcarith.c ****  * may be a good base for further optimizations anyway.
 203:fltk-1.3.4-1/jpeg/jcarith.c ****  *
 204:fltk-1.3.4-1/jpeg/jcarith.c ****  * Parameter 'val' to be encoded may be 0 or 1 (binary decision).
 205:fltk-1.3.4-1/jpeg/jcarith.c ****  *
 206:fltk-1.3.4-1/jpeg/jcarith.c ****  * Note: I've added full "Pacman" termination support to the
 207:fltk-1.3.4-1/jpeg/jcarith.c ****  * byte output routines, which is equivalent to the optional
 208:fltk-1.3.4-1/jpeg/jcarith.c ****  * Discard_final_zeros procedure (Figure D.15) in the spec.
 209:fltk-1.3.4-1/jpeg/jcarith.c ****  * Thus, we always produce the shortest possible output
 210:fltk-1.3.4-1/jpeg/jcarith.c ****  * stream compliant to the spec (no trailing zero bytes,
 211:fltk-1.3.4-1/jpeg/jcarith.c ****  * except for FF stuffing).
 212:fltk-1.3.4-1/jpeg/jcarith.c ****  *
 213:fltk-1.3.4-1/jpeg/jcarith.c ****  * I've also introduced a new scheme for accessing
 214:fltk-1.3.4-1/jpeg/jcarith.c ****  * the probability estimation state machine table,
 215:fltk-1.3.4-1/jpeg/jcarith.c ****  * derived from Markus Kuhn's JBIG implementation.
 216:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 217:fltk-1.3.4-1/jpeg/jcarith.c **** 
 218:fltk-1.3.4-1/jpeg/jcarith.c **** LOCAL(void)
 219:fltk-1.3.4-1/jpeg/jcarith.c **** arith_encode (j_compress_ptr cinfo, unsigned char *st, int val) 
 220:fltk-1.3.4-1/jpeg/jcarith.c **** {
 221:fltk-1.3.4-1/jpeg/jcarith.c ****   register arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 222:fltk-1.3.4-1/jpeg/jcarith.c ****   register unsigned char nl, nm;
 223:fltk-1.3.4-1/jpeg/jcarith.c ****   register INT32 qe, temp;
 224:fltk-1.3.4-1/jpeg/jcarith.c ****   register int sv;
 225:fltk-1.3.4-1/jpeg/jcarith.c **** 
 226:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Fetch values from our compact representation of Table D.3(D.2):
 227:fltk-1.3.4-1/jpeg/jcarith.c ****    * Qe values and probability estimation state machine
 228:fltk-1.3.4-1/jpeg/jcarith.c ****    */
 229:fltk-1.3.4-1/jpeg/jcarith.c ****   sv = *st;
 230:fltk-1.3.4-1/jpeg/jcarith.c ****   qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
 231:fltk-1.3.4-1/jpeg/jcarith.c ****   nl = qe & 0xFF; qe >>= 8;	/* Next_Index_LPS + Switch_MPS */
 232:fltk-1.3.4-1/jpeg/jcarith.c ****   nm = qe & 0xFF; qe >>= 8;	/* Next_Index_MPS */
 233:fltk-1.3.4-1/jpeg/jcarith.c **** 
 234:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode & estimation procedures per sections D.1.4 & D.1.5 */
 235:fltk-1.3.4-1/jpeg/jcarith.c ****   e->a -= qe;
 236:fltk-1.3.4-1/jpeg/jcarith.c ****   if (val != (sv >> 7)) {
 237:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode the less probable symbol */
 238:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->a >= qe) {
 239:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 240:fltk-1.3.4-1/jpeg/jcarith.c ****        * is larger than the interval size for the MPS, then exchange
 241:fltk-1.3.4-1/jpeg/jcarith.c ****        * the two symbols for coding efficiency, otherwise code the LPS
 242:fltk-1.3.4-1/jpeg/jcarith.c ****        * as usual: */
 243:fltk-1.3.4-1/jpeg/jcarith.c ****       e->c += e->a;
 244:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 245:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 246:fltk-1.3.4-1/jpeg/jcarith.c ****     *st = (sv & 0x80) ^ nl;	/* Estimate_after_LPS */
 247:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 248:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode the more probable symbol */
 249:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->a >= 0x8000L)
 250:fltk-1.3.4-1/jpeg/jcarith.c ****       return;  /* A >= 0x8000 -> ready, no renormalization required */
 251:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->a < qe) {
 252:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 253:fltk-1.3.4-1/jpeg/jcarith.c ****        * is larger than the interval size for the MPS, then exchange
 254:fltk-1.3.4-1/jpeg/jcarith.c ****        * the two symbols for coding efficiency: */
 255:fltk-1.3.4-1/jpeg/jcarith.c ****       e->c += e->a;
 256:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 257:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 258:fltk-1.3.4-1/jpeg/jcarith.c ****     *st = (sv & 0x80) ^ nm;	/* Estimate_after_MPS */
 259:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 260:fltk-1.3.4-1/jpeg/jcarith.c **** 
 261:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Renormalization & data output per section D.1.6 */
 262:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 263:fltk-1.3.4-1/jpeg/jcarith.c ****     e->a <<= 1;
 264:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c <<= 1;
 265:fltk-1.3.4-1/jpeg/jcarith.c ****     if (--e->ct == 0) {
 266:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Another byte is ready for output */
 267:fltk-1.3.4-1/jpeg/jcarith.c ****       temp = e->c >> 19;
 268:fltk-1.3.4-1/jpeg/jcarith.c ****       if (temp > 0xFF) {
 269:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Handle overflow over all stacked 0xFF bytes */
 270:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (e->buffer >= 0) {
 271:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 272:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 273:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 274:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer + 1, cinfo);
 275:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->buffer + 1 == 0xFF)
 276:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0x00, cinfo);
 277:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 278:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->zc += e->sc;  /* carry-over converts stacked 0xFF bytes to 0x00 */
 279:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->sc = 0;
 280:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Note: The 3 spacer bits in the C register guarantee
 281:fltk-1.3.4-1/jpeg/jcarith.c **** 	 * that the new buffer byte can't be 0xFF here
 282:fltk-1.3.4-1/jpeg/jcarith.c **** 	 * (see page 160 in the P&M JPEG book). */
 283:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->buffer = temp & 0xFF;  /* new output byte, might overflow later */
 284:fltk-1.3.4-1/jpeg/jcarith.c ****       } else if (temp == 0xFF) {
 285:fltk-1.3.4-1/jpeg/jcarith.c **** 	++e->sc;  /* stack 0xFF byte (which might overflow later) */
 286:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 287:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Output all stacked 0xFF bytes, they will not overflow any more */
 288:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (e->buffer == 0)
 289:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ++e->zc;
 290:fltk-1.3.4-1/jpeg/jcarith.c **** 	else if (e->buffer >= 0) {
 291:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 292:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 293:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 294:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer, cinfo);
 295:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 296:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (e->sc) {
 297:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 298:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 299:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 300:fltk-1.3.4-1/jpeg/jcarith.c **** 	  do {
 301:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0xFF, cinfo);
 302:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0x00, cinfo);
 303:fltk-1.3.4-1/jpeg/jcarith.c **** 	  } while (--e->sc);
 304:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 305:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->buffer = temp & 0xFF;  /* new output byte (can still overflow) */
 306:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 307:fltk-1.3.4-1/jpeg/jcarith.c ****       e->c &= 0x7FFFFL;
 308:fltk-1.3.4-1/jpeg/jcarith.c ****       e->ct += 8;
 309:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 310:fltk-1.3.4-1/jpeg/jcarith.c ****   } while (e->a < 0x8000L);
 311:fltk-1.3.4-1/jpeg/jcarith.c **** }
 312:fltk-1.3.4-1/jpeg/jcarith.c **** 
 313:fltk-1.3.4-1/jpeg/jcarith.c **** 
 314:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 315:fltk-1.3.4-1/jpeg/jcarith.c ****  * Emit a restart marker & resynchronize predictions.
 316:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 317:fltk-1.3.4-1/jpeg/jcarith.c **** 
 318:fltk-1.3.4-1/jpeg/jcarith.c **** LOCAL(void)
 319:fltk-1.3.4-1/jpeg/jcarith.c **** emit_restart (j_compress_ptr cinfo, int restart_num)
 320:fltk-1.3.4-1/jpeg/jcarith.c **** {
 321:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 322:fltk-1.3.4-1/jpeg/jcarith.c ****   int ci;
 323:fltk-1.3.4-1/jpeg/jcarith.c ****   jpeg_component_info * compptr;
 324:fltk-1.3.4-1/jpeg/jcarith.c **** 
 325:fltk-1.3.4-1/jpeg/jcarith.c ****   finish_pass(cinfo);
 326:fltk-1.3.4-1/jpeg/jcarith.c **** 
 327:fltk-1.3.4-1/jpeg/jcarith.c ****   emit_byte(0xFF, cinfo);
 328:fltk-1.3.4-1/jpeg/jcarith.c ****   emit_byte(JPEG_RST0 + restart_num, cinfo);
 329:fltk-1.3.4-1/jpeg/jcarith.c **** 
 330:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Re-initialize statistics areas */
 331:fltk-1.3.4-1/jpeg/jcarith.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 332:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 333:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 334:fltk-1.3.4-1/jpeg/jcarith.c ****     if (cinfo->Ss == 0 && cinfo->Ah == 0) {
 335:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[compptr->dc_tbl_no], DC_STAT_BINS);
 336:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Reset DC predictions to 0 */
 337:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->last_dc_val[ci] = 0;
 338:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 339:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 340:fltk-1.3.4-1/jpeg/jcarith.c ****     /* AC needs no table when not present */
 341:fltk-1.3.4-1/jpeg/jcarith.c ****     if (cinfo->Se) {
 342:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->ac_stats[compptr->ac_tbl_no], AC_STAT_BINS);
 343:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 344:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 345:fltk-1.3.4-1/jpeg/jcarith.c **** 
 346:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Reset arithmetic encoding variables */
 347:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->c = 0;
 348:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->a = 0x10000L;
 349:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->sc = 0;
 350:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->zc = 0;
 351:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
 352:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
 353:fltk-1.3.4-1/jpeg/jcarith.c **** }
 354:fltk-1.3.4-1/jpeg/jcarith.c **** 
 355:fltk-1.3.4-1/jpeg/jcarith.c **** 
 356:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 357:fltk-1.3.4-1/jpeg/jcarith.c ****  * MCU encoding for DC initial scan (either spectral selection,
 358:fltk-1.3.4-1/jpeg/jcarith.c ****  * or first pass of successive approximation).
 359:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 360:fltk-1.3.4-1/jpeg/jcarith.c **** 
 361:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(boolean)
 362:fltk-1.3.4-1/jpeg/jcarith.c **** encode_mcu_DC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 363:fltk-1.3.4-1/jpeg/jcarith.c **** {
 364:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 365:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 366:fltk-1.3.4-1/jpeg/jcarith.c ****   int blkn, ci, tbl;
 367:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 368:fltk-1.3.4-1/jpeg/jcarith.c ****   ISHIFT_TEMPS
 369:fltk-1.3.4-1/jpeg/jcarith.c **** 
 370:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Emit restart marker if needed */
 371:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->restart_interval) {
 372:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 373:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 374:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 375:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 376:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 377:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 378:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->restarts_to_go--;
 379:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 380:fltk-1.3.4-1/jpeg/jcarith.c **** 
 381:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode the MCU data blocks */
 382:fltk-1.3.4-1/jpeg/jcarith.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
 383:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 384:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = cinfo->cur_comp_info[ci]->dc_tbl_no;
 385:fltk-1.3.4-1/jpeg/jcarith.c **** 
 386:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Compute the DC value after the required point transform by Al.
 387:fltk-1.3.4-1/jpeg/jcarith.c ****      * This is simply an arithmetic right shift.
 388:fltk-1.3.4-1/jpeg/jcarith.c ****      */
 389:fltk-1.3.4-1/jpeg/jcarith.c ****     m = IRIGHT_SHIFT((int) (MCU_data[blkn][0][0]), cinfo->Al);
 390:fltk-1.3.4-1/jpeg/jcarith.c **** 
 391:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Sections F.1.4.1 & F.1.4.4.1: Encoding of DC coefficients */
 392:fltk-1.3.4-1/jpeg/jcarith.c **** 
 393:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
 394:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->dc_stats[tbl] + entropy->dc_context[ci];
 395:fltk-1.3.4-1/jpeg/jcarith.c **** 
 396:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.4: Encode_DC_DIFF */
 397:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = m - entropy->last_dc_val[ci]) == 0) {
 398:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 399:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;	/* zero diff category */
 400:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 401:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->last_dc_val[ci] = m;
 402:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 403:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 404:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.7: Encoding the sign of v */
 405:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v > 0) {
 406:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 407:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 2;			/* Table F.4: SP = S0 + 2 */
 408:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 409:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 410:fltk-1.3.4-1/jpeg/jcarith.c **** 	v = -v;
 411:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 412:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 413:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 414:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 415:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 416:fltk-1.3.4-1/jpeg/jcarith.c ****       m = 0;
 417:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 418:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 419:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 420:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 421:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 423:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 424:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 425:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 426:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 427:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 428:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 429:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 430:fltk-1.3.4-1/jpeg/jcarith.c ****       if (m < (int) ((1L << cinfo->arith_dc_L[tbl]) >> 1))
 431:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 432:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 433:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 434:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 435:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 14;
 436:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 437:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 438:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 439:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 440:fltk-1.3.4-1/jpeg/jcarith.c **** 
 441:fltk-1.3.4-1/jpeg/jcarith.c ****   return TRUE;
 442:fltk-1.3.4-1/jpeg/jcarith.c **** }
 443:fltk-1.3.4-1/jpeg/jcarith.c **** 
 444:fltk-1.3.4-1/jpeg/jcarith.c **** 
 445:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 446:fltk-1.3.4-1/jpeg/jcarith.c ****  * MCU encoding for AC initial scan (either spectral selection,
 447:fltk-1.3.4-1/jpeg/jcarith.c ****  * or first pass of successive approximation).
 448:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 449:fltk-1.3.4-1/jpeg/jcarith.c **** 
 450:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(boolean)
 451:fltk-1.3.4-1/jpeg/jcarith.c **** encode_mcu_AC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 452:fltk-1.3.4-1/jpeg/jcarith.c **** {
 453:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 454:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 455:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 456:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 457:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke;
 458:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 459:fltk-1.3.4-1/jpeg/jcarith.c **** 
 460:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Emit restart marker if needed */
 461:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->restart_interval) {
 462:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 463:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 464:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 465:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 466:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 467:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 468:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->restarts_to_go--;
 469:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 470:fltk-1.3.4-1/jpeg/jcarith.c **** 
 471:fltk-1.3.4-1/jpeg/jcarith.c ****   natural_order = cinfo->natural_order;
 472:fltk-1.3.4-1/jpeg/jcarith.c **** 
 473:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode the MCU data block */
 474:fltk-1.3.4-1/jpeg/jcarith.c ****   block = MCU_data[0];
 475:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 476:fltk-1.3.4-1/jpeg/jcarith.c **** 
 477:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Sections F.1.4.2 & F.1.4.4.2: Encoding of AC coefficients */
 478:fltk-1.3.4-1/jpeg/jcarith.c **** 
 479:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Establish EOB (end-of-block) index */
 480:fltk-1.3.4-1/jpeg/jcarith.c ****   ke = cinfo->Se;
 481:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 482:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 483:fltk-1.3.4-1/jpeg/jcarith.c ****      * is an integer division with rounding towards 0.  To do this portably
 484:fltk-1.3.4-1/jpeg/jcarith.c ****      * in C, we shift after obtaining the absolute value.
 485:fltk-1.3.4-1/jpeg/jcarith.c ****      */
 486:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[ke]]) >= 0) {
 487:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 488:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 489:fltk-1.3.4-1/jpeg/jcarith.c ****       v = -v;
 490:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 491:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 492:fltk-1.3.4-1/jpeg/jcarith.c ****   } while (--ke);
 493:fltk-1.3.4-1/jpeg/jcarith.c **** 
 494:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Figure F.5: Encode_AC_Coefficients */
 495:fltk-1.3.4-1/jpeg/jcarith.c ****   for (k = cinfo->Ss - 1; k < ke;) {
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 497:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 498:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 499:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 500:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 501:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 502:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 0);
 503:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 504:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 505:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 506:fltk-1.3.4-1/jpeg/jcarith.c **** 	v = -v;
 507:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 508:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 509:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 1);
 510:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 511:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 512:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 513:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st + 1, 0);
 514:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 515:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 516:fltk-1.3.4-1/jpeg/jcarith.c ****     st += 2;
 517:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.8: Encoding the magnitude category of v */
 518:fltk-1.3.4-1/jpeg/jcarith.c ****     m = 0;
 519:fltk-1.3.4-1/jpeg/jcarith.c ****     if (v -= 1) {
 520:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 521:fltk-1.3.4-1/jpeg/jcarith.c ****       m = 1;
 522:fltk-1.3.4-1/jpeg/jcarith.c ****       v2 = v;
 523:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v2 >>= 1) {
 524:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 525:fltk-1.3.4-1/jpeg/jcarith.c **** 	m <<= 1;
 526:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->ac_stats[tbl] +
 527:fltk-1.3.4-1/jpeg/jcarith.c **** 	     (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 529:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 530:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 531:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 532:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 533:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 534:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 535:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);
 536:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.9: Encoding the magnitude bit pattern of v */
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     st += 14;
 538:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 539:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 540:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 541:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode EOB decision only if k < cinfo->Se */
 542:fltk-1.3.4-1/jpeg/jcarith.c ****   if (k < cinfo->Se) {
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 544:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 545:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 546:fltk-1.3.4-1/jpeg/jcarith.c **** 
 547:fltk-1.3.4-1/jpeg/jcarith.c ****   return TRUE;
 548:fltk-1.3.4-1/jpeg/jcarith.c **** }
 549:fltk-1.3.4-1/jpeg/jcarith.c **** 
 550:fltk-1.3.4-1/jpeg/jcarith.c **** 
 551:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 552:fltk-1.3.4-1/jpeg/jcarith.c ****  * MCU encoding for DC successive approximation refinement scan.
 553:fltk-1.3.4-1/jpeg/jcarith.c ****  * Note: we assume such scans can be multi-component,
 554:fltk-1.3.4-1/jpeg/jcarith.c ****  * although the spec is not very clear on the point.
 555:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 556:fltk-1.3.4-1/jpeg/jcarith.c **** 
 557:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(boolean)
 558:fltk-1.3.4-1/jpeg/jcarith.c **** encode_mcu_DC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 559:fltk-1.3.4-1/jpeg/jcarith.c **** {
 560:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 561:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 562:fltk-1.3.4-1/jpeg/jcarith.c ****   int Al, blkn;
 563:fltk-1.3.4-1/jpeg/jcarith.c **** 
 564:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Emit restart marker if needed */
 565:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->restart_interval) {
 566:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 567:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 568:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 569:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 570:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 571:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 572:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->restarts_to_go--;
 573:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 574:fltk-1.3.4-1/jpeg/jcarith.c **** 
 575:fltk-1.3.4-1/jpeg/jcarith.c ****   st = entropy->fixed_bin;	/* use fixed probability estimation */
 576:fltk-1.3.4-1/jpeg/jcarith.c ****   Al = cinfo->Al;
 577:fltk-1.3.4-1/jpeg/jcarith.c **** 
 578:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode the MCU data blocks */
 579:fltk-1.3.4-1/jpeg/jcarith.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
 580:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 581:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, (MCU_data[blkn][0][0] >> Al) & 1);
 582:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 583:fltk-1.3.4-1/jpeg/jcarith.c **** 
 584:fltk-1.3.4-1/jpeg/jcarith.c ****   return TRUE;
 585:fltk-1.3.4-1/jpeg/jcarith.c **** }
 586:fltk-1.3.4-1/jpeg/jcarith.c **** 
 587:fltk-1.3.4-1/jpeg/jcarith.c **** 
 588:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 589:fltk-1.3.4-1/jpeg/jcarith.c ****  * MCU encoding for AC successive approximation refinement scan.
 590:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 591:fltk-1.3.4-1/jpeg/jcarith.c **** 
 592:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(boolean)
 593:fltk-1.3.4-1/jpeg/jcarith.c **** encode_mcu_AC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 594:fltk-1.3.4-1/jpeg/jcarith.c **** {
 595:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 596:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 597:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 598:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 599:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke, kex;
 600:fltk-1.3.4-1/jpeg/jcarith.c ****   int v;
 601:fltk-1.3.4-1/jpeg/jcarith.c **** 
 602:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Emit restart marker if needed */
 603:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->restart_interval) {
 604:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 605:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 606:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 607:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 608:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 609:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 610:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->restarts_to_go--;
 611:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 612:fltk-1.3.4-1/jpeg/jcarith.c **** 
 613:fltk-1.3.4-1/jpeg/jcarith.c ****   natural_order = cinfo->natural_order;
 614:fltk-1.3.4-1/jpeg/jcarith.c **** 
 615:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode the MCU data block */
 616:fltk-1.3.4-1/jpeg/jcarith.c ****   block = MCU_data[0];
 617:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 618:fltk-1.3.4-1/jpeg/jcarith.c **** 
 619:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Section G.1.3.3: Encoding of AC coefficients */
 620:fltk-1.3.4-1/jpeg/jcarith.c **** 
 621:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Establish EOB (end-of-block) index */
 622:fltk-1.3.4-1/jpeg/jcarith.c ****   ke = cinfo->Se;
 623:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 624:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 625:fltk-1.3.4-1/jpeg/jcarith.c ****      * is an integer division with rounding towards 0.  To do this portably
 626:fltk-1.3.4-1/jpeg/jcarith.c ****      * in C, we shift after obtaining the absolute value.
 627:fltk-1.3.4-1/jpeg/jcarith.c ****      */
 628:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[ke]]) >= 0) {
 629:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 630:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 631:fltk-1.3.4-1/jpeg/jcarith.c ****       v = -v;
 632:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 633:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 634:fltk-1.3.4-1/jpeg/jcarith.c ****   } while (--ke);
 635:fltk-1.3.4-1/jpeg/jcarith.c **** 
 636:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Establish EOBx (previous stage end-of-block) index */
 637:fltk-1.3.4-1/jpeg/jcarith.c ****   for (kex = ke; kex > 0; kex--)
 638:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 639:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 640:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 641:fltk-1.3.4-1/jpeg/jcarith.c ****       v = -v;
 642:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 643:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 644:fltk-1.3.4-1/jpeg/jcarith.c **** 
 645:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Figure G.10: Encode_AC_Coefficients_SA */
 646:fltk-1.3.4-1/jpeg/jcarith.c ****   for (k = cinfo->Ss - 1; k < ke;) {
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 648:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 649:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 650:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 651:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 652:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 653:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 654:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 655:fltk-1.3.4-1/jpeg/jcarith.c **** 	  else {			/* newly nonzero coef */
 656:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 1, 1);
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 0);
 658:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 659:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 660:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 661:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 662:fltk-1.3.4-1/jpeg/jcarith.c **** 	v = -v;
 663:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 664:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 665:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 666:fltk-1.3.4-1/jpeg/jcarith.c **** 	  else {			/* newly nonzero coef */
 667:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 1, 1);
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 1);
 669:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 670:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 671:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 672:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 673:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st + 1, 0);
 674:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 675:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 676:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 677:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode EOB decision only if k < cinfo->Se */
 678:fltk-1.3.4-1/jpeg/jcarith.c ****   if (k < cinfo->Se) {
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 680:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 681:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 682:fltk-1.3.4-1/jpeg/jcarith.c **** 
 683:fltk-1.3.4-1/jpeg/jcarith.c ****   return TRUE;
 684:fltk-1.3.4-1/jpeg/jcarith.c **** }
 685:fltk-1.3.4-1/jpeg/jcarith.c **** 
 686:fltk-1.3.4-1/jpeg/jcarith.c **** 
 687:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 688:fltk-1.3.4-1/jpeg/jcarith.c ****  * Encode and output one MCU's worth of arithmetic-compressed coefficients.
 689:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 690:fltk-1.3.4-1/jpeg/jcarith.c **** 
 691:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(boolean)
 692:fltk-1.3.4-1/jpeg/jcarith.c **** encode_mcu (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 693:fltk-1.3.4-1/jpeg/jcarith.c **** {
 694:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 695:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 696:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 697:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 698:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke;
 699:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 700:fltk-1.3.4-1/jpeg/jcarith.c ****   int blkn, ci;
 701:fltk-1.3.4-1/jpeg/jcarith.c ****   jpeg_component_info * compptr;
 702:fltk-1.3.4-1/jpeg/jcarith.c **** 
 703:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Emit restart marker if needed */
 704:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->restart_interval) {
 705:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 706:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 707:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 708:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 709:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 710:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 711:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->restarts_to_go--;
 712:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 713:fltk-1.3.4-1/jpeg/jcarith.c **** 
 714:fltk-1.3.4-1/jpeg/jcarith.c ****   natural_order = cinfo->natural_order;
 715:fltk-1.3.4-1/jpeg/jcarith.c **** 
 716:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Encode the MCU data blocks */
 717:fltk-1.3.4-1/jpeg/jcarith.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
 718:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 719:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 720:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 721:fltk-1.3.4-1/jpeg/jcarith.c **** 
 722:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Sections F.1.4.1 & F.1.4.4.1: Encoding of DC coefficients */
 723:fltk-1.3.4-1/jpeg/jcarith.c **** 
 724:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = compptr->dc_tbl_no;
 725:fltk-1.3.4-1/jpeg/jcarith.c **** 
 726:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
 727:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->dc_stats[tbl] + entropy->dc_context[ci];
 728:fltk-1.3.4-1/jpeg/jcarith.c **** 
 729:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.4: Encode_DC_DIFF */
 730:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[0] - entropy->last_dc_val[ci]) == 0) {
 731:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 732:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;	/* zero diff category */
 733:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 734:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->last_dc_val[ci] = (*block)[0];
 735:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 736:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 737:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.7: Encoding the sign of v */
 738:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v > 0) {
 739:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 740:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 2;			/* Table F.4: SP = S0 + 2 */
 741:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 742:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 743:fltk-1.3.4-1/jpeg/jcarith.c **** 	v = -v;
 744:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 745:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 746:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 747:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 748:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 749:fltk-1.3.4-1/jpeg/jcarith.c ****       m = 0;
 750:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 751:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 752:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 753:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 754:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 756:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 757:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 758:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 759:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 760:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 761:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 762:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 763:fltk-1.3.4-1/jpeg/jcarith.c ****       if (m < (int) ((1L << cinfo->arith_dc_L[tbl]) >> 1))
 764:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 765:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 766:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 767:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 768:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 14;
 769:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 770:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 771:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 772:fltk-1.3.4-1/jpeg/jcarith.c **** 
 773:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Sections F.1.4.2 & F.1.4.4.2: Encoding of AC coefficients */
 774:fltk-1.3.4-1/jpeg/jcarith.c **** 
 775:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((ke = cinfo->lim_Se) == 0) continue;
 776:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = compptr->ac_tbl_no;
 777:fltk-1.3.4-1/jpeg/jcarith.c **** 
 778:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Establish EOB (end-of-block) index */
 779:fltk-1.3.4-1/jpeg/jcarith.c ****     do {
 780:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((*block)[natural_order[ke]]) break;
 781:fltk-1.3.4-1/jpeg/jcarith.c ****     } while (--ke);
 782:fltk-1.3.4-1/jpeg/jcarith.c **** 
 783:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.5: Encode_AC_Coefficients */
 784:fltk-1.3.4-1/jpeg/jcarith.c ****     for (k = 0; k < ke;) {
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 786:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 787:fltk-1.3.4-1/jpeg/jcarith.c ****       while ((v = (*block)[natural_order[++k]]) == 0) {
 788:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 789:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;
 790:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 791:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st + 1, 1);
 792:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 793:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.7: Encoding the sign of v */
 794:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v > 0) {
 795:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 0);
 796:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 797:fltk-1.3.4-1/jpeg/jcarith.c **** 	v = -v;
 798:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 1);
 799:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 800:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 2;
 801:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 802:fltk-1.3.4-1/jpeg/jcarith.c ****       m = 0;
 803:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 804:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 805:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 806:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 807:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v2 >>= 1) {
 808:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 809:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 810:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st = entropy->ac_stats[tbl] +
 811:fltk-1.3.4-1/jpeg/jcarith.c **** 	       (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	  while (v2 >>= 1) {
 813:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 814:fltk-1.3.4-1/jpeg/jcarith.c **** 	    m <<= 1;
 815:fltk-1.3.4-1/jpeg/jcarith.c **** 	    st += 1;
 816:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 817:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 818:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 819:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 820:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 14;
 822:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 823:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 824:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 825:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode EOB decision only if k < cinfo->lim_Se */
 826:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k < cinfo->lim_Se) {
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 828:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 829:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 830:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 831:fltk-1.3.4-1/jpeg/jcarith.c **** 
 832:fltk-1.3.4-1/jpeg/jcarith.c ****   return TRUE;
 833:fltk-1.3.4-1/jpeg/jcarith.c **** }
 834:fltk-1.3.4-1/jpeg/jcarith.c **** 
 835:fltk-1.3.4-1/jpeg/jcarith.c **** 
 836:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 837:fltk-1.3.4-1/jpeg/jcarith.c ****  * Initialize for an arithmetic-compressed scan.
 838:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 839:fltk-1.3.4-1/jpeg/jcarith.c **** 
 840:fltk-1.3.4-1/jpeg/jcarith.c **** METHODDEF(void)
 841:fltk-1.3.4-1/jpeg/jcarith.c **** start_pass (j_compress_ptr cinfo, boolean gather_statistics)
 842:fltk-1.3.4-1/jpeg/jcarith.c **** {
  11              		.loc 1 842 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 842 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
 843:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
  15              		.loc 1 843 3 is_stmt 1 view .LVU2
 842:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
  16              		.loc 1 842 1 is_stmt 0 view .LVU3
  17 0004 4157     		pushq	%r15
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 15, -16
  20 0006 4156     		pushq	%r14
  21              		.cfi_def_cfa_offset 24
  22              		.cfi_offset 14, -24
  23 0008 4155     		pushq	%r13
  24              		.cfi_def_cfa_offset 32
  25              		.cfi_offset 13, -32
  26 000a 4154     		pushq	%r12
  27              		.cfi_def_cfa_offset 40
  28              		.cfi_offset 12, -40
  29 000c 55       		pushq	%rbp
  30              		.cfi_def_cfa_offset 48
  31              		.cfi_offset 6, -48
  32 000d 53       		pushq	%rbx
  33              		.cfi_def_cfa_offset 56
  34              		.cfi_offset 3, -56
  35 000e 4889FB   		movq	%rdi, %rbx
  36 0011 4883EC08 		subq	$8, %rsp
  37              		.cfi_def_cfa_offset 64
  38              		.loc 1 843 21 view .LVU4
  39 0015 4C8BAF30 		movq	560(%rdi), %r13
  39      020000
  40              	.LVL1:
 844:fltk-1.3.4-1/jpeg/jcarith.c ****   int ci, tbl;
  41              		.loc 1 844 3 is_stmt 1 view .LVU5
 845:fltk-1.3.4-1/jpeg/jcarith.c ****   jpeg_component_info * compptr;
  42              		.loc 1 845 3 view .LVU6
 846:fltk-1.3.4-1/jpeg/jcarith.c **** 
 847:fltk-1.3.4-1/jpeg/jcarith.c ****   if (gather_statistics)
  43              		.loc 1 847 3 view .LVU7
  44              		.loc 1 847 6 is_stmt 0 view .LVU8
  45 001c 85F6     		testl	%esi, %esi
  46 001e 740F     		je	.L2
 848:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Make sure to avoid that in the master control logic!
 849:fltk-1.3.4-1/jpeg/jcarith.c ****      * We are fully adaptive here and need no extra
 850:fltk-1.3.4-1/jpeg/jcarith.c ****      * statistics gathering pass!
 851:fltk-1.3.4-1/jpeg/jcarith.c ****      */
 852:fltk-1.3.4-1/jpeg/jcarith.c ****     ERREXIT(cinfo, JERR_NOT_COMPILED);
  47              		.loc 1 852 5 is_stmt 1 view .LVU9
  48 0020 488B07   		movq	(%rdi), %rax
  49 0023 C7402831 		movl	$49, 40(%rax)
  49      000000
  50 002a 488B07   		movq	(%rdi), %rax
  51 002d FF10     		call	*(%rax)
  52              	.LVL2:
  53              	.L2:
 853:fltk-1.3.4-1/jpeg/jcarith.c **** 
 854:fltk-1.3.4-1/jpeg/jcarith.c ****   /* We assume jcmaster.c already validated the progressive scan parameters. */
 855:fltk-1.3.4-1/jpeg/jcarith.c **** 
 856:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Select execution routines */
 857:fltk-1.3.4-1/jpeg/jcarith.c ****   if (cinfo->progressive_mode) {
  54              		.loc 1 857 3 view .LVU10
  55              		.loc 1 857 6 is_stmt 0 view .LVU11
  56 002f 448B835C 		movl	348(%rbx), %r8d
  56      010000
  57 0036 4585C0   		testl	%r8d, %r8d
  58 0039 0F849100 		je	.L3
  58      0000
 858:fltk-1.3.4-1/jpeg/jcarith.c ****     if (cinfo->Ah == 0) {
  59              		.loc 1 858 5 is_stmt 1 view .LVU12
  60              		.loc 1 858 8 is_stmt 0 view .LVU13
  61 003f 8BBBD401 		movl	468(%rbx), %edi
  61      0000
  62 0045 8B83CC01 		movl	460(%rbx), %eax
  62      0000
  63 004b 85FF     		testl	%edi, %edi
  64 004d 0F85BD01 		jne	.L4
  64      0000
 859:fltk-1.3.4-1/jpeg/jcarith.c ****       if (cinfo->Ss == 0)
  65              		.loc 1 859 7 is_stmt 1 view .LVU14
 860:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_first;
  66              		.loc 1 860 26 is_stmt 0 view .LVU15
  67 0053 85C0     		testl	%eax, %eax
  68 0055 488D1500 		leaq	encode_mcu_AC_first(%rip), %rdx
  68      000000
  69 005c 488D0500 		leaq	encode_mcu_DC_first(%rip), %rax
  69      000000
  70 0063 480F45C2 		cmovne	%rdx, %rax
 861:fltk-1.3.4-1/jpeg/jcarith.c ****       else
 862:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->pub.encode_mcu = encode_mcu_AC_first;
 863:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 864:fltk-1.3.4-1/jpeg/jcarith.c ****       if (cinfo->Ss == 0)
 865:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_refine;
 866:fltk-1.3.4-1/jpeg/jcarith.c ****       else
 867:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->pub.encode_mcu = encode_mcu_AC_refine;
 868:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 869:fltk-1.3.4-1/jpeg/jcarith.c ****   } else
 870:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->pub.encode_mcu = encode_mcu;
 871:fltk-1.3.4-1/jpeg/jcarith.c **** 
 872:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Allocate & initialize requested statistics areas */
 873:fltk-1.3.4-1/jpeg/jcarith.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
  71              		.loc 1 873 3 view .LVU16
  72 0067 4531E4   		xorl	%r12d, %r12d
  73              	.LBB10:
  74              	.LBB11:
  75              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
  76              		.loc 2 71 10 view .LVU17
  77 006a 31ED     		xorl	%ebp, %ebp
  78              	.LBE11:
  79              	.LBE10:
 860:fltk-1.3.4-1/jpeg/jcarith.c ****       else
  80              		.loc 1 860 26 view .LVU18
  81 006c 49894508 		movq	%rax, 8(%r13)
  82              	.LVL3:
  83              		.loc 1 873 16 is_stmt 1 view .LVU19
  84              		.loc 1 873 3 is_stmt 0 view .LVU20
  85 0070 8BB37401 		movl	372(%rbx), %esi
  85      0000
  86 0076 85F6     		testl	%esi, %esi
  87 0078 7F76     		jg	.L8
  88              	.LVL4:
  89              	.L15:
 874:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 875:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 876:fltk-1.3.4-1/jpeg/jcarith.c ****     if (cinfo->Ss == 0 && cinfo->Ah == 0) {
 877:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->dc_tbl_no;
 878:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 879:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 880:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->dc_stats[tbl] == NULL)
 881:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 882:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, DC_STAT_BINS);
 883:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
 884:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Initialize DC predictions to 0 */
 885:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->last_dc_val[ci] = 0;
 886:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 887:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 888:fltk-1.3.4-1/jpeg/jcarith.c ****     /* AC needs no table when not present */
 889:fltk-1.3.4-1/jpeg/jcarith.c ****     if (cinfo->Se) {
 890:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->ac_tbl_no;
 891:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 892:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 893:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->ac_stats[tbl] == NULL)
 894:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->ac_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 895:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, AC_STAT_BINS);
 896:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
 897:fltk-1.3.4-1/jpeg/jcarith.c **** #ifdef CALCULATE_SPECTRAL_CONDITIONING
 898:fltk-1.3.4-1/jpeg/jcarith.c ****       if (cinfo->progressive_mode)
 899:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Section G.1.3.2: Set appropriate arithmetic conditioning value Kx */
 900:fltk-1.3.4-1/jpeg/jcarith.c **** 	cinfo->arith_ac_K[tbl] = cinfo->Ss + ((8 + cinfo->Se - cinfo->Ss) >> 4);
 901:fltk-1.3.4-1/jpeg/jcarith.c **** #endif
 902:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 903:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 904:fltk-1.3.4-1/jpeg/jcarith.c **** 
 905:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Initialize arithmetic encoding variables */
 906:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->c = 0;
  90              		.loc 1 906 3 is_stmt 1 view .LVU21
 907:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->a = 0x10000L;
  91              		.loc 1 907 3 view .LVU22
 908:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->sc = 0;
  92              		.loc 1 908 3 view .LVU23
 909:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->zc = 0;
  93              		.loc 1 909 3 view .LVU24
 910:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
  94              		.loc 1 910 3 view .LVU25
 911:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
  95              		.loc 1 911 3 view .LVU26
 910:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
  96              		.loc 1 910 15 is_stmt 0 view .LVU27
  97 007a 48B80B00 		movabsq	$-4294967285, %rax
  97      0000FFFF 
  97      FFFF
 906:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->a = 0x10000L;
  98              		.loc 1 906 14 view .LVU28
  99 0084 49C74518 		movq	$0, 24(%r13)
  99      00000000 
 907:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->sc = 0;
 100              		.loc 1 907 14 view .LVU29
 101 008c 49C74520 		movq	$65536, 32(%r13)
 101      00000100 
 908:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->zc = 0;
 102              		.loc 1 908 15 view .LVU30
 103 0094 49C74528 		movq	$0, 40(%r13)
 103      00000000 
 909:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
 104              		.loc 1 909 15 view .LVU31
 105 009c 49C74530 		movq	$0, 48(%r13)
 105      00000000 
 910:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
 106              		.loc 1 910 15 view .LVU32
 107 00a4 49894538 		movq	%rax, 56(%r13)
 912:fltk-1.3.4-1/jpeg/jcarith.c **** 
 913:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Initialize restart stuff */
 914:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->restarts_to_go = cinfo->restart_interval;
 108              		.loc 1 914 3 is_stmt 1 view .LVU33
 109              		.loc 1 914 34 is_stmt 0 view .LVU34
 110 00a8 8B833C01 		movl	316(%rbx), %eax
 110      0000
 915:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->next_restart_num = 0;
 111              		.loc 1 915 29 view .LVU35
 112 00ae 41C74564 		movl	$0, 100(%r13)
 112      00000000 
 914:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->next_restart_num = 0;
 113              		.loc 1 914 27 view .LVU36
 114 00b6 41894560 		movl	%eax, 96(%r13)
 115              		.loc 1 915 3 is_stmt 1 view .LVU37
 916:fltk-1.3.4-1/jpeg/jcarith.c **** }
 116              		.loc 1 916 1 is_stmt 0 view .LVU38
 117 00ba 4883C408 		addq	$8, %rsp
 118              		.cfi_remember_state
 119              		.cfi_def_cfa_offset 56
 120 00be 5B       		popq	%rbx
 121              		.cfi_def_cfa_offset 48
 122              	.LVL5:
 123              		.loc 1 916 1 view .LVU39
 124 00bf 5D       		popq	%rbp
 125              		.cfi_def_cfa_offset 40
 126 00c0 415C     		popq	%r12
 127              		.cfi_def_cfa_offset 32
 128 00c2 415D     		popq	%r13
 129              		.cfi_def_cfa_offset 24
 130              	.LVL6:
 131              		.loc 1 916 1 view .LVU40
 132 00c4 415E     		popq	%r14
 133              		.cfi_def_cfa_offset 16
 134 00c6 415F     		popq	%r15
 135              		.cfi_def_cfa_offset 8
 136 00c8 C3       		ret
 137              	.LVL7:
 138 00c9 0F1F8000 		.p2align 4,,10
 138      000000
 139              		.p2align 3
 140              	.L3:
 141              		.cfi_restore_state
 870:fltk-1.3.4-1/jpeg/jcarith.c **** 
 142              		.loc 1 870 5 is_stmt 1 view .LVU41
 870:fltk-1.3.4-1/jpeg/jcarith.c **** 
 143              		.loc 1 870 29 is_stmt 0 view .LVU42
 144 00d0 488D0500 		leaq	encode_mcu(%rip), %rax
 144      000000
 145 00d7 49894508 		movq	%rax, 8(%r13)
 146              	.L6:
 147              	.LVL8:
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 148              		.loc 1 873 16 is_stmt 1 discriminator 1 view .LVU43
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 149              		.loc 1 873 3 is_stmt 0 discriminator 1 view .LVU44
 150 00db 8BB37401 		movl	372(%rbx), %esi
 150      0000
 151 00e1 4531E4   		xorl	%r12d, %r12d
 152              	.LBB14:
 153              	.LBB12:
 154              		.loc 2 71 10 discriminator 1 view .LVU45
 155 00e4 31ED     		xorl	%ebp, %ebp
 156              	.LBE12:
 157              	.LBE14:
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 158              		.loc 1 873 3 discriminator 1 view .LVU46
 159 00e6 85F6     		testl	%esi, %esi
 160 00e8 7E90     		jle	.L15
 161              	.LVL9:
 162 00ea 660F1F44 		.p2align 4,,10
 162      0000
 163              		.p2align 3
 164              	.L8:
 874:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 165              		.loc 1 874 5 is_stmt 1 view .LVU47
 876:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->dc_tbl_no;
 166              		.loc 1 876 8 is_stmt 0 view .LVU48
 167 00f0 8B8BCC01 		movl	460(%rbx), %ecx
 167      0000
 874:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 168              		.loc 1 874 13 view .LVU49
 169 00f6 4E8BB4E3 		movq	376(%rbx,%r12,8), %r14
 169      78010000 
 170              	.LVL10:
 876:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->dc_tbl_no;
 171              		.loc 1 876 5 is_stmt 1 view .LVU50
 876:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->dc_tbl_no;
 172              		.loc 1 876 8 is_stmt 0 view .LVU51
 173 00fe 85C9     		testl	%ecx, %ecx
 174 0100 7564     		jne	.L9
 876:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->dc_tbl_no;
 175              		.loc 1 876 24 discriminator 1 view .LVU52
 176 0102 8B93D401 		movl	468(%rbx), %edx
 176      0000
 177 0108 85D2     		testl	%edx, %edx
 178 010a 755A     		jne	.L9
 877:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 179              		.loc 1 877 7 is_stmt 1 view .LVU53
 877:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 180              		.loc 1 877 11 is_stmt 0 view .LVU54
 181 010c 4D637E14 		movslq	20(%r14), %r15
 182              	.LVL11:
 878:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 183              		.loc 1 878 7 is_stmt 1 view .LVU55
 878:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 184              		.loc 1 878 10 is_stmt 0 view .LVU56
 185 0110 4183FF0F 		cmpl	$15, %r15d
 186 0114 7619     		jbe	.L10
 879:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->dc_stats[tbl] == NULL)
 187              		.loc 1 879 2 is_stmt 1 view .LVU57
 188 0116 488B03   		movq	(%rbx), %rax
 189 0119 4889DF   		movq	%rbx, %rdi
 190 011c C7402832 		movl	$50, 40(%rax)
 190      000000
 191              	.LVL12:
 879:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->dc_stats[tbl] == NULL)
 192              		.loc 1 879 2 is_stmt 0 view .LVU58
 193 0123 488B03   		movq	(%rbx), %rax
 194 0126 4489782C 		movl	%r15d, 44(%rax)
 195 012a 488B03   		movq	(%rbx), %rax
 196 012d FF10     		call	*(%rax)
 197              	.LVL13:
 198              	.L10:
 880:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 199              		.loc 1 880 7 is_stmt 1 view .LVU59
 200 012f 4F8D7CFD 		leaq	0(%r13,%r15,8), %r15
 200      00
 201              	.LVL14:
 880:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 202              		.loc 1 880 28 is_stmt 0 view .LVU60
 203 0134 498B4768 		movq	104(%r15), %rax
 880:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 204              		.loc 1 880 10 view .LVU61
 205 0138 4885C0   		testq	%rax, %rax
 206 013b 0F84EF00 		je	.L25
 206      0000
 207              	.L11:
 883:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Initialize DC predictions to 0 */
 208              		.loc 1 883 7 is_stmt 1 view .LVU62
 209              	.LVL15:
 210              	.LBB15:
 211              	.LBI15:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 212              		.loc 2 59 1 view .LVU63
 213              	.LBB16:
 214              		.loc 2 71 3 view .LVU64
 215              		.loc 2 71 10 is_stmt 0 view .LVU65
 216 0141 660FEFC0 		pxor	%xmm0, %xmm0
 217 0145 0F1100   		movups	%xmm0, (%rax)
 218              		.loc 2 71 10 view .LVU66
 219 0148 0F114010 		movups	%xmm0, 16(%rax)
 220 014c 0F114020 		movups	%xmm0, 32(%rax)
 221 0150 0F114030 		movups	%xmm0, 48(%rax)
 222              	.LVL16:
 223              		.loc 2 71 10 view .LVU67
 224              	.LBE16:
 225              	.LBE15:
 885:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 226              		.loc 1 885 7 is_stmt 1 view .LVU68
 885:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 227              		.loc 1 885 32 is_stmt 0 view .LVU69
 228 0154 43C744A5 		movl	$0, 64(%r13,%r12,4)
 228      40000000 
 228      00
 886:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 229              		.loc 1 886 7 is_stmt 1 view .LVU70
 886:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 230              		.loc 1 886 31 is_stmt 0 view .LVU71
 231 015d 43C744A5 		movl	$0, 80(%r13,%r12,4)
 231      50000000 
 231      00
 232              	.L9:
 889:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->ac_tbl_no;
 233              		.loc 1 889 5 is_stmt 1 view .LVU72
 889:fltk-1.3.4-1/jpeg/jcarith.c ****       tbl = compptr->ac_tbl_no;
 234              		.loc 1 889 8 is_stmt 0 view .LVU73
 235 0166 8B83D001 		movl	464(%rbx), %eax
 235      0000
 236 016c 85C0     		testl	%eax, %eax
 237 016e 7460     		je	.L12
 890:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 238              		.loc 1 890 7 is_stmt 1 view .LVU74
 890:fltk-1.3.4-1/jpeg/jcarith.c ****       if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
 239              		.loc 1 890 11 is_stmt 0 view .LVU75
 240 0170 4D637618 		movslq	24(%r14), %r14
 241              	.LVL17:
 891:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 242              		.loc 1 891 7 is_stmt 1 view .LVU76
 891:fltk-1.3.4-1/jpeg/jcarith.c **** 	ERREXIT1(cinfo, JERR_NO_ARITH_TABLE, tbl);
 243              		.loc 1 891 10 is_stmt 0 view .LVU77
 244 0174 4183FE0F 		cmpl	$15, %r14d
 245 0178 7619     		jbe	.L13
 892:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->ac_stats[tbl] == NULL)
 246              		.loc 1 892 2 is_stmt 1 view .LVU78
 247 017a 488B03   		movq	(%rbx), %rax
 248 017d 4889DF   		movq	%rbx, %rdi
 249 0180 C7402832 		movl	$50, 40(%rax)
 249      000000
 892:fltk-1.3.4-1/jpeg/jcarith.c ****       if (entropy->ac_stats[tbl] == NULL)
 250              		.loc 1 892 2 is_stmt 0 view .LVU79
 251 0187 488B03   		movq	(%rbx), %rax
 252 018a 4489702C 		movl	%r14d, 44(%rax)
 253 018e 488B03   		movq	(%rbx), %rax
 254 0191 FF10     		call	*(%rax)
 255              	.LVL18:
 256              	.L13:
 893:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->ac_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 257              		.loc 1 893 7 is_stmt 1 view .LVU80
 258 0193 4F8D74F5 		leaq	0(%r13,%r14,8), %r14
 258      00
 259              	.LVL19:
 893:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->ac_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 260              		.loc 1 893 28 is_stmt 0 view .LVU81
 261 0198 498B86E8 		movq	232(%r14), %rax
 261      000000
 893:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->ac_stats[tbl] = (unsigned char *) (*cinfo->mem->alloc_small)
 262              		.loc 1 893 10 view .LVU82
 263 019f 4885C0   		testq	%rax, %rax
 264 01a2 744C     		je	.L26
 265              	.L14:
 896:fltk-1.3.4-1/jpeg/jcarith.c **** #ifdef CALCULATE_SPECTRAL_CONDITIONING
 266              		.loc 1 896 7 is_stmt 1 view .LVU83
 267              	.LVL20:
 268              	.LBB17:
 269              	.LBI10:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 270              		.loc 2 59 1 view .LVU84
 271              	.LBB13:
 272              		.loc 2 71 3 view .LVU85
 273              		.loc 2 71 10 is_stmt 0 view .LVU86
 274 01a4 488D7808 		leaq	8(%rax), %rdi
 275 01a8 48C70000 		movq	$0, (%rax)
 275      000000
 276              		.loc 2 71 10 view .LVU87
 277 01af 48C780F8 		movq	$0, 248(%rax)
 277      00000000 
 277      000000
 278 01ba 4883E7F8 		andq	$-8, %rdi
 279 01be 4829F8   		subq	%rdi, %rax
 280 01c1 8D880001 		leal	256(%rax), %ecx
 280      0000
 281 01c7 4889E8   		movq	%rbp, %rax
 282 01ca C1E903   		shrl	$3, %ecx
 283 01cd F348AB   		rep stosq
 284              	.LVL21:
 285              	.L12:
 286              		.loc 2 71 10 view .LVU88
 287              	.LBE13:
 288              	.LBE17:
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 289              		.loc 1 873 43 is_stmt 1 discriminator 2 view .LVU89
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 290              		.loc 1 873 16 discriminator 2 view .LVU90
 291 01d0 4983C401 		addq	$1, %r12
 292              	.LVL22:
 873:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 293              		.loc 1 873 3 is_stmt 0 discriminator 2 view .LVU91
 294 01d4 4439A374 		cmpl	%r12d, 372(%rbx)
 294      010000
 295 01db 0F8F0FFF 		jg	.L8
 295      FFFF
 296 01e1 E994FEFF 		jmp	.L15
 296      FF
 297              	.LVL23:
 298 01e6 662E0F1F 		.p2align 4,,10
 298      84000000 
 298      0000
 299              		.p2align 3
 300              	.L26:
 894:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, AC_STAT_BINS);
 301              		.loc 1 894 2 is_stmt 1 view .LVU92
 894:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, AC_STAT_BINS);
 302              		.loc 1 894 46 is_stmt 0 view .LVU93
 303 01f0 488B4308 		movq	8(%rbx), %rax
 304 01f4 BA000100 		movl	$256, %edx
 304      00
 305 01f9 BE010000 		movl	$1, %esi
 305      00
 306 01fe 4889DF   		movq	%rbx, %rdi
 307 0201 FF10     		call	*(%rax)
 308              	.LVL24:
 894:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, AC_STAT_BINS);
 309              		.loc 1 894 25 view .LVU94
 310 0203 498986E8 		movq	%rax, 232(%r14)
 310      000000
 311 020a EB98     		jmp	.L14
 312              	.LVL25:
 313 020c 0F1F4000 		.p2align 4,,10
 314              		.p2align 3
 315              	.L4:
 864:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_refine;
 316              		.loc 1 864 7 is_stmt 1 view .LVU95
 865:fltk-1.3.4-1/jpeg/jcarith.c ****       else
 317              		.loc 1 865 26 is_stmt 0 view .LVU96
 318 0210 85C0     		testl	%eax, %eax
 319 0212 488D1500 		leaq	encode_mcu_AC_refine(%rip), %rdx
 319      000000
 320 0219 488D0500 		leaq	encode_mcu_DC_refine(%rip), %rax
 320      000000
 321 0220 480F45C2 		cmovne	%rdx, %rax
 322 0224 49894508 		movq	%rax, 8(%r13)
 323 0228 E9AEFEFF 		jmp	.L6
 323      FF
 324              	.LVL26:
 325 022d 0F1F00   		.p2align 4,,10
 326              		.p2align 3
 327              	.L25:
 881:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, DC_STAT_BINS);
 328              		.loc 1 881 2 is_stmt 1 view .LVU97
 881:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, DC_STAT_BINS);
 329              		.loc 1 881 46 is_stmt 0 view .LVU98
 330 0230 488B4308 		movq	8(%rbx), %rax
 331 0234 BA400000 		movl	$64, %edx
 331      00
 332 0239 BE010000 		movl	$1, %esi
 332      00
 333 023e 4889DF   		movq	%rbx, %rdi
 334 0241 FF10     		call	*(%rax)
 335              	.LVL27:
 881:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, DC_STAT_BINS);
 336              		.loc 1 881 25 view .LVU99
 337 0243 49894768 		movq	%rax, 104(%r15)
 338 0247 E9F5FEFF 		jmp	.L11
 338      FF
 339              		.cfi_endproc
 340              	.LFE60:
 342              		.section	.text.emit_byte,"ax",@progbits
 343              		.p2align 4
 345              	emit_byte:
 346              	.LVL28:
 347              	.LFB51:
 118:fltk-1.3.4-1/jpeg/jcarith.c ****   struct jpeg_destination_mgr * dest = cinfo->dest;
 348              		.loc 1 118 1 is_stmt 1 view -0
 349              		.cfi_startproc
 119:fltk-1.3.4-1/jpeg/jcarith.c **** 
 350              		.loc 1 119 3 view .LVU101
 119:fltk-1.3.4-1/jpeg/jcarith.c **** 
 351              		.loc 1 119 33 is_stmt 0 view .LVU102
 352 0000 488B4628 		movq	40(%rsi), %rax
 353              	.LVL29:
 121:fltk-1.3.4-1/jpeg/jcarith.c ****   if (--dest->free_in_buffer == 0)
 354              		.loc 1 121 3 is_stmt 1 view .LVU103
 121:fltk-1.3.4-1/jpeg/jcarith.c ****   if (--dest->free_in_buffer == 0)
 355              		.loc 1 121 8 is_stmt 0 view .LVU104
 356 0004 488B10   		movq	(%rax), %rdx
 121:fltk-1.3.4-1/jpeg/jcarith.c ****   if (--dest->free_in_buffer == 0)
 357              		.loc 1 121 26 view .LVU105
 358 0007 488D4A01 		leaq	1(%rdx), %rcx
 359 000b 488908   		movq	%rcx, (%rax)
 121:fltk-1.3.4-1/jpeg/jcarith.c ****   if (--dest->free_in_buffer == 0)
 360              		.loc 1 121 31 view .LVU106
 361 000e 40883A   		movb	%dil, (%rdx)
 122:fltk-1.3.4-1/jpeg/jcarith.c ****     if (! (*dest->empty_output_buffer) (cinfo))
 362              		.loc 1 122 3 is_stmt 1 view .LVU107
 122:fltk-1.3.4-1/jpeg/jcarith.c ****     if (! (*dest->empty_output_buffer) (cinfo))
 363              		.loc 1 122 6 is_stmt 0 view .LVU108
 364 0011 48836808 		subq	$1, 8(%rax)
 364      01
 365 0016 7408     		je	.L35
 366 0018 C3       		ret
 367 0019 0F1F8000 		.p2align 4,,10
 367      000000
 368              		.p2align 3
 369              	.L35:
 118:fltk-1.3.4-1/jpeg/jcarith.c ****   struct jpeg_destination_mgr * dest = cinfo->dest;
 370              		.loc 1 118 1 view .LVU109
 371 0020 55       		pushq	%rbp
 372              		.cfi_def_cfa_offset 16
 373              		.cfi_offset 6, -16
 123:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 374              		.loc 1 123 12 view .LVU110
 375 0021 4889F7   		movq	%rsi, %rdi
 376              	.LVL30:
 123:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 377              		.loc 1 123 12 view .LVU111
 378 0024 4889F5   		movq	%rsi, %rbp
 123:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 379              		.loc 1 123 5 is_stmt 1 view .LVU112
 123:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 380              		.loc 1 123 12 is_stmt 0 view .LVU113
 381 0027 FF5018   		call	*24(%rax)
 382              	.LVL31:
 123:fltk-1.3.4-1/jpeg/jcarith.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 383              		.loc 1 123 8 view .LVU114
 384 002a 85C0     		testl	%eax, %eax
 385 002c 7522     		jne	.L27
 386              	.LVL32:
 387              	.LBB20:
 388              	.LBI20:
 116:fltk-1.3.4-1/jpeg/jcarith.c **** /* Write next output byte; we do not support suspension in this module. */
 389              		.loc 1 116 1 is_stmt 1 view .LVU115
 390              	.LBB21:
 124:fltk-1.3.4-1/jpeg/jcarith.c **** }
 391              		.loc 1 124 7 view .LVU116
 392 002e 488B4500 		movq	0(%rbp), %rax
 393 0032 4889EF   		movq	%rbp, %rdi
 394 0035 C7402819 		movl	$25, 40(%rax)
 394      000000
 395 003c 488B4500 		movq	0(%rbp), %rax
 396              	.LBE21:
 397              	.LBE20:
 125:fltk-1.3.4-1/jpeg/jcarith.c **** 
 398              		.loc 1 125 1 is_stmt 0 view .LVU117
 399 0040 5D       		popq	%rbp
 400              		.cfi_remember_state
 401              		.cfi_restore 6
 402              		.cfi_def_cfa_offset 8
 403              	.LVL33:
 404              	.LBB23:
 405              	.LBB22:
 124:fltk-1.3.4-1/jpeg/jcarith.c **** }
 406              		.loc 1 124 7 view .LVU118
 407 0041 488B00   		movq	(%rax), %rax
 408 0044 FFE0     		jmp	*%rax
 409              	.LVL34:
 410 0046 662E0F1F 		.p2align 4,,10
 410      84000000 
 410      0000
 411              		.p2align 3
 412              	.L27:
 413              		.cfi_restore_state
 124:fltk-1.3.4-1/jpeg/jcarith.c **** }
 414              		.loc 1 124 7 view .LVU119
 415              	.LBE22:
 416              	.LBE23:
 125:fltk-1.3.4-1/jpeg/jcarith.c **** 
 417              		.loc 1 125 1 view .LVU120
 418 0050 5D       		popq	%rbp
 419              		.cfi_def_cfa_offset 8
 420              	.LVL35:
 125:fltk-1.3.4-1/jpeg/jcarith.c **** 
 421              		.loc 1 125 1 view .LVU121
 422 0051 C3       		ret
 423              		.cfi_endproc
 424              	.LFE51:
 426              		.section	.text.finish_pass,"ax",@progbits
 427              		.p2align 4
 429              	finish_pass:
 430              	.LVL36:
 431              	.LFB52:
 134:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 432              		.loc 1 134 1 is_stmt 1 view -0
 433              		.cfi_startproc
 134:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 434              		.loc 1 134 1 is_stmt 0 view .LVU123
 435 0000 F30F1EFA 		endbr64
 135:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 temp;
 436              		.loc 1 135 3 is_stmt 1 view .LVU124
 134:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 437              		.loc 1 134 1 is_stmt 0 view .LVU125
 438 0004 55       		pushq	%rbp
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 6, -16
 441 0005 4889FD   		movq	%rdi, %rbp
 442 0008 53       		pushq	%rbx
 443              		.cfi_def_cfa_offset 24
 444              		.cfi_offset 3, -24
 445 0009 4883EC08 		subq	$8, %rsp
 446              		.cfi_def_cfa_offset 32
 135:fltk-1.3.4-1/jpeg/jcarith.c ****   INT32 temp;
 447              		.loc 1 135 21 view .LVU126
 448 000d 488B9F30 		movq	560(%rdi), %rbx
 448      020000
 449              	.LVL37:
 136:fltk-1.3.4-1/jpeg/jcarith.c **** 
 450              		.loc 1 136 3 is_stmt 1 view .LVU127
 142:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 451              		.loc 1 142 3 view .LVU128
 142:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 452              		.loc 1 142 28 is_stmt 0 view .LVU129
 453 0014 488B4318 		movq	24(%rbx), %rax
 142:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 454              		.loc 1 142 21 view .LVU130
 455 0018 488B5320 		movq	32(%rbx), %rdx
 147:fltk-1.3.4-1/jpeg/jcarith.c ****   if (e->c & 0xF8000000L) {
 456              		.loc 1 147 8 view .LVU131
 457 001c 8B4B38   		movl	56(%rbx), %ecx
 458 001f 448B433C 		movl	60(%rbx), %r8d
 142:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 459              		.loc 1 142 25 view .LVU132
 460 0023 488D7C10 		leaq	-1(%rax,%rdx), %rdi
 460      FF
 461              	.LVL38:
 142:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c = temp + 0x8000L;
 462              		.loc 1 142 13 view .LVU133
 463 0028 81E70000 		andl	$4294901760, %edi
 463      FFFF
 464              	.LVL39:
 143:fltk-1.3.4-1/jpeg/jcarith.c ****   else
 465              		.loc 1 143 17 view .LVU134
 466 002e 4839F8   		cmpq	%rdi, %rax
 467 0031 488D9700 		leaq	32768(%rdi), %rdx
 467      800000
 468 0038 480F4FFA 		cmovg	%rdx, %rdi
 469              	.LVL40:
 147:fltk-1.3.4-1/jpeg/jcarith.c ****   if (e->c & 0xF8000000L) {
 470              		.loc 1 147 3 is_stmt 1 view .LVU135
 147:fltk-1.3.4-1/jpeg/jcarith.c ****   if (e->c & 0xF8000000L) {
 471              		.loc 1 147 8 is_stmt 0 view .LVU136
 472 003c 48D3E7   		salq	%cl, %rdi
 473 003f 48897B18 		movq	%rdi, 24(%rbx)
 148:fltk-1.3.4-1/jpeg/jcarith.c ****     /* One final overflow has to be handled */
 474              		.loc 1 148 3 is_stmt 1 view .LVU137
 148:fltk-1.3.4-1/jpeg/jcarith.c ****     /* One final overflow has to be handled */
 475              		.loc 1 148 6 is_stmt 0 view .LVU138
 476 0043 F7C70000 		testl	$4160749568, %edi
 476      00F8
 477 0049 0F84B100 		je	.L38
 477      0000
 150:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 478              		.loc 1 150 5 is_stmt 1 view .LVU139
 479 004f 488B4330 		movq	48(%rbx), %rax
 150:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 480              		.loc 1 150 8 is_stmt 0 view .LVU140
 481 0053 4585C0   		testl	%r8d, %r8d
 482 0056 782A     		js	.L39
 151:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 483              		.loc 1 151 7 is_stmt 1 view .LVU141
 151:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 484              		.loc 1 151 10 is_stmt 0 view .LVU142
 485 0058 4885C0   		testq	%rax, %rax
 486 005b 0F85FF00 		jne	.L41
 486      0000
 487              	.LVL41:
 488              	.L40:
 154:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->buffer + 1 == 0xFF)
 489              		.loc 1 154 7 is_stmt 1 view .LVU143
 490 0061 418D7801 		leal	1(%r8), %edi
 491 0065 4889EE   		movq	%rbp, %rsi
 492 0068 E8000000 		call	emit_byte
 492      00
 493              	.LVL42:
 155:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 494              		.loc 1 155 7 view .LVU144
 155:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 495              		.loc 1 155 10 is_stmt 0 view .LVU145
 496 006d 817B3CFE 		cmpl	$254, 60(%rbx)
 496      000000
 497 0074 0F84A601 		je	.L42
 497      0000
 498              	.L71:
 499 007a 488B4330 		movq	48(%rbx), %rax
 500 007e 488B7B18 		movq	24(%rbx), %rdi
 501              	.L39:
 158:fltk-1.3.4-1/jpeg/jcarith.c ****     e->sc = 0;
 502              		.loc 1 158 5 is_stmt 1 view .LVU146
 158:fltk-1.3.4-1/jpeg/jcarith.c ****     e->sc = 0;
 503              		.loc 1 158 11 is_stmt 0 view .LVU147
 504 0082 48034328 		addq	40(%rbx), %rax
 159:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 505              		.loc 1 159 11 view .LVU148
 506 0086 48C74328 		movq	$0, 40(%rbx)
 506      00000000 
 158:fltk-1.3.4-1/jpeg/jcarith.c ****     e->sc = 0;
 507              		.loc 1 158 11 view .LVU149
 508 008e 48894330 		movq	%rax, 48(%rbx)
 159:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 509              		.loc 1 159 5 is_stmt 1 view .LVU150
 510              	.L43:
 180:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->zc)  /* output final pending zero bytes */
 511              		.loc 1 180 3 view .LVU151
 180:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->zc)  /* output final pending zero bytes */
 512              		.loc 1 180 6 is_stmt 0 view .LVU152
 513 0092 F7C700F8 		testl	$134215680, %edi
 513      FF07
 514 0098 7459     		je	.L36
 181:fltk-1.3.4-1/jpeg/jcarith.c ****       do emit_byte(0x00, cinfo);
 515              		.loc 1 181 5 is_stmt 1 view .LVU153
 181:fltk-1.3.4-1/jpeg/jcarith.c ****       do emit_byte(0x00, cinfo);
 516              		.loc 1 181 8 is_stmt 0 view .LVU154
 517 009a 48837B30 		cmpq	$0, 48(%rbx)
 517      00
 518 009f 741C     		je	.L54
 519              		.p2align 4,,10
 520 00a1 0F1F8000 		.p2align 3
 520      000000
 521              	.L55:
 182:fltk-1.3.4-1/jpeg/jcarith.c ****       while (--e->zc);
 522              		.loc 1 182 7 is_stmt 1 discriminator 1 view .LVU155
 182:fltk-1.3.4-1/jpeg/jcarith.c ****       while (--e->zc);
 523              		.loc 1 182 10 discriminator 1 view .LVU156
 524 00a8 31FF     		xorl	%edi, %edi
 525 00aa 4889EE   		movq	%rbp, %rsi
 526 00ad E8000000 		call	emit_byte
 526      00
 527              	.LVL43:
 183:fltk-1.3.4-1/jpeg/jcarith.c ****     emit_byte((e->c >> 19) & 0xFF, cinfo);
 528              		.loc 1 183 13 discriminator 1 view .LVU157
 183:fltk-1.3.4-1/jpeg/jcarith.c ****     emit_byte((e->c >> 19) & 0xFF, cinfo);
 529              		.loc 1 183 7 is_stmt 0 discriminator 1 view .LVU158
 530 00b2 48836B30 		subq	$1, 48(%rbx)
 530      01
 531 00b7 75EF     		jne	.L55
 532 00b9 488B7B18 		movq	24(%rbx), %rdi
 533              	.L54:
 184:fltk-1.3.4-1/jpeg/jcarith.c ****     if (((e->c >> 19) & 0xFF) == 0xFF)
 534              		.loc 1 184 5 is_stmt 1 view .LVU159
 184:fltk-1.3.4-1/jpeg/jcarith.c ****     if (((e->c >> 19) & 0xFF) == 0xFF)
 535              		.loc 1 184 21 is_stmt 0 view .LVU160
 536 00bd 48C1FF13 		sarq	$19, %rdi
 184:fltk-1.3.4-1/jpeg/jcarith.c ****     if (((e->c >> 19) & 0xFF) == 0xFF)
 537              		.loc 1 184 5 view .LVU161
 538 00c1 4889EE   		movq	%rbp, %rsi
 539 00c4 400FB6FF 		movzbl	%dil, %edi
 540 00c8 E8000000 		call	emit_byte
 540      00
 541              	.LVL44:
 185:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 542              		.loc 1 185 5 is_stmt 1 view .LVU162
 185:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 543              		.loc 1 185 12 is_stmt 0 view .LVU163
 544 00cd 488B7B18 		movq	24(%rbx), %rdi
 185:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 545              		.loc 1 185 16 view .LVU164
 546 00d1 4889F8   		movq	%rdi, %rax
 547 00d4 48C1F813 		sarq	$19, %rax
 185:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 548              		.loc 1 185 23 view .LVU165
 549 00d8 0FB6C0   		movzbl	%al, %eax
 185:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(0x00, cinfo);
 550              		.loc 1 185 8 view .LVU166
 551 00db 483DFF00 		cmpq	$255, %rax
 551      0000
 552 00e1 0F841901 		je	.L72
 552      0000
 187:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte((e->c >> 11) & 0xFF, cinfo);
 553              		.loc 1 187 5 is_stmt 1 view .LVU167
 187:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte((e->c >> 11) & 0xFF, cinfo);
 554              		.loc 1 187 8 is_stmt 0 view .LVU168
 555 00e7 F7C700F8 		testl	$522240, %edi
 555      0700
 556 00ed 0F85AD00 		jne	.L73
 556      0000
 557              	.L36:
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 558              		.loc 1 193 1 view .LVU169
 559 00f3 4883C408 		addq	$8, %rsp
 560              		.cfi_remember_state
 561              		.cfi_def_cfa_offset 24
 562 00f7 5B       		popq	%rbx
 563              		.cfi_def_cfa_offset 16
 564              	.LVL45:
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 565              		.loc 1 193 1 view .LVU170
 566 00f8 5D       		popq	%rbp
 567              		.cfi_def_cfa_offset 8
 568              	.LVL46:
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 569              		.loc 1 193 1 view .LVU171
 570 00f9 C3       		ret
 571              	.LVL47:
 572 00fa 660F1F44 		.p2align 4,,10
 572      0000
 573              		.p2align 3
 574              	.L38:
 575              		.cfi_restore_state
 161:fltk-1.3.4-1/jpeg/jcarith.c ****       ++e->zc;
 576              		.loc 1 161 5 is_stmt 1 view .LVU172
 161:fltk-1.3.4-1/jpeg/jcarith.c ****       ++e->zc;
 577              		.loc 1 161 8 is_stmt 0 view .LVU173
 578 0100 4585C0   		testl	%r8d, %r8d
 579 0103 757B     		jne	.L44
 162:fltk-1.3.4-1/jpeg/jcarith.c ****     else if (e->buffer >= 0) {
 580              		.loc 1 162 7 is_stmt 1 view .LVU174
 581 0105 48834330 		addq	$1, 48(%rbx)
 581      01
 582              	.LVL48:
 583              	.L45:
 169:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 584              		.loc 1 169 5 view .LVU175
 169:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 585              		.loc 1 169 8 is_stmt 0 view .LVU176
 586 010a 48837B28 		cmpq	$0, 40(%rbx)
 586      00
 587 010f 7445     		je	.L48
 170:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 588              		.loc 1 170 7 is_stmt 1 view .LVU177
 170:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 589              		.loc 1 170 10 is_stmt 0 view .LVU178
 590 0111 48837B30 		cmpq	$0, 48(%rbx)
 590      00
 591 0116 7420     		je	.L50
 592 0118 0F1F8400 		.p2align 4,,10
 592      00000000 
 593              		.p2align 3
 594              	.L49:
 171:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 595              		.loc 1 171 2 is_stmt 1 discriminator 1 view .LVU179
 171:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 596              		.loc 1 171 5 discriminator 1 view .LVU180
 597 0120 31FF     		xorl	%edi, %edi
 598 0122 4889EE   		movq	%rbp, %rsi
 599 0125 E8000000 		call	emit_byte
 599      00
 600              	.LVL49:
 172:fltk-1.3.4-1/jpeg/jcarith.c ****       do {
 601              		.loc 1 172 8 discriminator 1 view .LVU181
 172:fltk-1.3.4-1/jpeg/jcarith.c ****       do {
 602              		.loc 1 172 2 is_stmt 0 discriminator 1 view .LVU182
 603 012a 48836B30 		subq	$1, 48(%rbx)
 603      01
 604 012f 75EF     		jne	.L49
 605              		.p2align 4,,10
 606 0131 0F1F8000 		.p2align 3
 606      000000
 607              	.L50:
 173:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0xFF, cinfo);
 608              		.loc 1 173 7 is_stmt 1 discriminator 1 view .LVU183
 174:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 609              		.loc 1 174 2 discriminator 1 view .LVU184
 610 0138 4889EE   		movq	%rbp, %rsi
 611 013b BFFF0000 		movl	$255, %edi
 611      00
 612 0140 E8000000 		call	emit_byte
 612      00
 613              	.LVL50:
 175:fltk-1.3.4-1/jpeg/jcarith.c ****       } while (--e->sc);
 614              		.loc 1 175 2 discriminator 1 view .LVU185
 615 0145 31FF     		xorl	%edi, %edi
 616 0147 4889EE   		movq	%rbp, %rsi
 617 014a E8000000 		call	emit_byte
 617      00
 618              	.LVL51:
 176:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 619              		.loc 1 176 15 discriminator 1 view .LVU186
 176:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 620              		.loc 1 176 7 is_stmt 0 discriminator 1 view .LVU187
 621 014f 48836B28 		subq	$1, 40(%rbx)
 621      01
 622 0154 75E2     		jne	.L50
 623              	.L48:
 176:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 624              		.loc 1 176 7 discriminator 1 view .LVU188
 625 0156 488B7B18 		movq	24(%rbx), %rdi
 626 015a E933FFFF 		jmp	.L43
 626      FF
 627 015f 90       		.p2align 4,,10
 628              		.p2align 3
 629              	.L41:
 152:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 630              		.loc 1 152 2 is_stmt 1 discriminator 1 view .LVU189
 152:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 631              		.loc 1 152 5 discriminator 1 view .LVU190
 632 0160 31FF     		xorl	%edi, %edi
 633 0162 4889EE   		movq	%rbp, %rsi
 634 0165 E8000000 		call	emit_byte
 634      00
 635              	.LVL52:
 153:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer + 1, cinfo);
 636              		.loc 1 153 8 discriminator 1 view .LVU191
 153:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer + 1, cinfo);
 637              		.loc 1 153 2 is_stmt 0 discriminator 1 view .LVU192
 638 016a 48836B30 		subq	$1, 48(%rbx)
 638      01
 639 016f 75EF     		jne	.L41
 640 0171 448B433C 		movl	60(%rbx), %r8d
 641 0175 E9E7FEFF 		jmp	.L40
 641      FF
 642              	.LVL53:
 643 017a 660F1F44 		.p2align 4,,10
 643      0000
 644              		.p2align 3
 645              	.L44:
 163:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 646              		.loc 1 163 10 is_stmt 1 view .LVU193
 163:fltk-1.3.4-1/jpeg/jcarith.c ****       if (e->zc)
 647              		.loc 1 163 13 is_stmt 0 view .LVU194
 648 0180 7888     		js	.L45
 164:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 649              		.loc 1 164 7 is_stmt 1 view .LVU195
 164:fltk-1.3.4-1/jpeg/jcarith.c **** 	do emit_byte(0x00, cinfo);
 650              		.loc 1 164 10 is_stmt 0 view .LVU196
 651 0182 48837B30 		cmpq	$0, 48(%rbx)
 651      00
 652 0187 7557     		jne	.L47
 653              	.LVL54:
 654              	.L46:
 167:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 655              		.loc 1 167 7 is_stmt 1 view .LVU197
 656 0189 4889EE   		movq	%rbp, %rsi
 657 018c 4489C7   		movl	%r8d, %edi
 658 018f E8000000 		call	emit_byte
 658      00
 659              	.LVL55:
 660 0194 E971FFFF 		jmp	.L45
 660      FF
 661 0199 0F1F8000 		.p2align 4,,10
 661      000000
 662              		.p2align 3
 663              	.L73:
 188:fltk-1.3.4-1/jpeg/jcarith.c ****       if (((e->c >> 11) & 0xFF) == 0xFF)
 664              		.loc 1 188 7 view .LVU198
 188:fltk-1.3.4-1/jpeg/jcarith.c ****       if (((e->c >> 11) & 0xFF) == 0xFF)
 665              		.loc 1 188 23 is_stmt 0 view .LVU199
 666 01a0 48C1FF0B 		sarq	$11, %rdi
 188:fltk-1.3.4-1/jpeg/jcarith.c ****       if (((e->c >> 11) & 0xFF) == 0xFF)
 667              		.loc 1 188 7 view .LVU200
 668 01a4 4889EE   		movq	%rbp, %rsi
 669 01a7 400FB6FF 		movzbl	%dil, %edi
 670 01ab E8000000 		call	emit_byte
 670      00
 671              	.LVL56:
 189:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 672              		.loc 1 189 7 is_stmt 1 view .LVU201
 189:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 673              		.loc 1 189 18 is_stmt 0 view .LVU202
 674 01b0 488B4318 		movq	24(%rbx), %rax
 675 01b4 48C1F80B 		sarq	$11, %rax
 189:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 676              		.loc 1 189 25 view .LVU203
 677 01b8 0FB6C0   		movzbl	%al, %eax
 189:fltk-1.3.4-1/jpeg/jcarith.c **** 	emit_byte(0x00, cinfo);
 678              		.loc 1 189 10 view .LVU204
 679 01bb 483DFF00 		cmpq	$255, %rax
 679      0000
 680 01c1 0F852CFF 		jne	.L36
 680      FFFF
 190:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 681              		.loc 1 190 2 is_stmt 1 view .LVU205
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 682              		.loc 1 193 1 is_stmt 0 view .LVU206
 683 01c7 4883C408 		addq	$8, %rsp
 684              		.cfi_remember_state
 685              		.cfi_def_cfa_offset 24
 190:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 686              		.loc 1 190 2 view .LVU207
 687 01cb 4889EE   		movq	%rbp, %rsi
 688 01ce 31FF     		xorl	%edi, %edi
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 689              		.loc 1 193 1 view .LVU208
 690 01d0 5B       		popq	%rbx
 691              		.cfi_def_cfa_offset 16
 692              	.LVL57:
 193:fltk-1.3.4-1/jpeg/jcarith.c **** 
 693              		.loc 1 193 1 view .LVU209
 694 01d1 5D       		popq	%rbp
 695              		.cfi_def_cfa_offset 8
 696              	.LVL58:
 190:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 697              		.loc 1 190 2 view .LVU210
 698 01d2 E9000000 		jmp	emit_byte
 698      00
 699              	.LVL59:
 700 01d7 660F1F84 		.p2align 4,,10
 700      00000000 
 700      00
 701              		.p2align 3
 702              	.L47:
 703              		.cfi_restore_state
 165:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 704              		.loc 1 165 2 is_stmt 1 discriminator 1 view .LVU211
 165:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (--e->zc);
 705              		.loc 1 165 5 discriminator 1 view .LVU212
 706 01e0 31FF     		xorl	%edi, %edi
 707 01e2 4889EE   		movq	%rbp, %rsi
 708 01e5 E8000000 		call	emit_byte
 708      00
 709              	.LVL60:
 166:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer, cinfo);
 710              		.loc 1 166 8 discriminator 1 view .LVU213
 166:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte(e->buffer, cinfo);
 711              		.loc 1 166 2 is_stmt 0 discriminator 1 view .LVU214
 712 01ea 48836B30 		subq	$1, 48(%rbx)
 712      01
 713 01ef 75EF     		jne	.L47
 714 01f1 448B433C 		movl	60(%rbx), %r8d
 715 01f5 EB92     		jmp	.L46
 716 01f7 660F1F84 		.p2align 4,,10
 716      00000000 
 716      00
 717              		.p2align 3
 718              	.L72:
 186:fltk-1.3.4-1/jpeg/jcarith.c ****     if (e->c & 0x7F800L) {
 719              		.loc 1 186 7 is_stmt 1 view .LVU215
 720 0200 31FF     		xorl	%edi, %edi
 721 0202 4889EE   		movq	%rbp, %rsi
 722 0205 E8000000 		call	emit_byte
 722      00
 723              	.LVL61:
 724 020a 488B7B18 		movq	24(%rbx), %rdi
 187:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte((e->c >> 11) & 0xFF, cinfo);
 725              		.loc 1 187 5 view .LVU216
 187:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_byte((e->c >> 11) & 0xFF, cinfo);
 726              		.loc 1 187 8 is_stmt 0 view .LVU217
 727 020e F7C700F8 		testl	$522240, %edi
 727      0700
 728 0214 0F84D9FE 		je	.L36
 728      FFFF
 729 021a EB84     		jmp	.L73
 730 021c 0F1F4000 		.p2align 4,,10
 731              		.p2align 3
 732              	.L42:
 156:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 733              		.loc 1 156 2 is_stmt 1 view .LVU218
 734 0220 4889EE   		movq	%rbp, %rsi
 735 0223 31FF     		xorl	%edi, %edi
 736 0225 E8000000 		call	emit_byte
 736      00
 737              	.LVL62:
 738 022a E94BFEFF 		jmp	.L71
 738      FF
 739              		.cfi_endproc
 740              	.LFE52:
 742              		.section	.text.arith_encode,"ax",@progbits
 743              		.p2align 4
 745              	arith_encode:
 746              	.LVL63:
 747              	.LFB53:
 220:fltk-1.3.4-1/jpeg/jcarith.c ****   register arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 748              		.loc 1 220 1 view -0
 749              		.cfi_startproc
 221:fltk-1.3.4-1/jpeg/jcarith.c ****   register unsigned char nl, nm;
 750              		.loc 1 221 3 view .LVU220
 220:fltk-1.3.4-1/jpeg/jcarith.c ****   register arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 751              		.loc 1 220 1 is_stmt 0 view .LVU221
 752 0000 4154     		pushq	%r12
 753              		.cfi_def_cfa_offset 16
 754              		.cfi_offset 12, -16
 755 0002 4189D1   		movl	%edx, %r9d
 230:fltk-1.3.4-1/jpeg/jcarith.c ****   nl = qe & 0xFF; qe >>= 8;	/* Next_Index_LPS + Switch_MPS */
 756              		.loc 1 230 6 view .LVU222
 757 0005 488D1500 		leaq	jpeg_aritab(%rip), %rdx
 757      000000
 758              	.LVL64:
 220:fltk-1.3.4-1/jpeg/jcarith.c ****   register arith_entropy_ptr e = (arith_entropy_ptr) cinfo->entropy;
 759              		.loc 1 220 1 view .LVU223
 760 000c 55       		pushq	%rbp
 761              		.cfi_def_cfa_offset 24
 762              		.cfi_offset 6, -24
 763 000d 4889FD   		movq	%rdi, %rbp
 764 0010 53       		pushq	%rbx
 765              		.cfi_def_cfa_offset 32
 766              		.cfi_offset 3, -32
 229:fltk-1.3.4-1/jpeg/jcarith.c ****   qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
 767              		.loc 1 229 8 view .LVU224
 768 0011 0FB606   		movzbl	(%rsi), %eax
 221:fltk-1.3.4-1/jpeg/jcarith.c ****   register unsigned char nl, nm;
 769              		.loc 1 221 30 view .LVU225
 770 0014 488B9F30 		movq	560(%rdi), %rbx
 770      020000
 771              	.LVL65:
 222:fltk-1.3.4-1/jpeg/jcarith.c ****   register INT32 qe, temp;
 772              		.loc 1 222 3 is_stmt 1 view .LVU226
 223:fltk-1.3.4-1/jpeg/jcarith.c ****   register int sv;
 773              		.loc 1 223 3 view .LVU227
 224:fltk-1.3.4-1/jpeg/jcarith.c **** 
 774              		.loc 1 224 3 view .LVU228
 229:fltk-1.3.4-1/jpeg/jcarith.c ****   qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
 775              		.loc 1 229 3 view .LVU229
 230:fltk-1.3.4-1/jpeg/jcarith.c ****   nl = qe & 0xFF; qe >>= 8;	/* Next_Index_LPS + Switch_MPS */
 776              		.loc 1 230 3 view .LVU230
 230:fltk-1.3.4-1/jpeg/jcarith.c ****   nl = qe & 0xFF; qe >>= 8;	/* Next_Index_LPS + Switch_MPS */
 777              		.loc 1 230 6 is_stmt 0 view .LVU231
 778 001b 4889C1   		movq	%rax, %rcx
 779 001e 83E17F   		andl	$127, %ecx
 780 0021 4C8B04CA 		movq	(%rdx,%rcx,8), %r8
 781              	.LVL66:
 231:fltk-1.3.4-1/jpeg/jcarith.c ****   nm = qe & 0xFF; qe >>= 8;	/* Next_Index_MPS */
 782              		.loc 1 231 3 is_stmt 1 view .LVU232
 231:fltk-1.3.4-1/jpeg/jcarith.c ****   nm = qe & 0xFF; qe >>= 8;	/* Next_Index_MPS */
 783              		.loc 1 231 19 view .LVU233
 232:fltk-1.3.4-1/jpeg/jcarith.c **** 
 784              		.loc 1 232 3 view .LVU234
 232:fltk-1.3.4-1/jpeg/jcarith.c **** 
 785              		.loc 1 232 19 view .LVU235
 235:fltk-1.3.4-1/jpeg/jcarith.c ****   if (val != (sv >> 7)) {
 786              		.loc 1 235 8 is_stmt 0 view .LVU236
 787 0025 488B5320 		movq	32(%rbx), %rdx
 229:fltk-1.3.4-1/jpeg/jcarith.c ****   qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
 788              		.loc 1 229 6 view .LVU237
 789 0029 0FB6C8   		movzbl	%al, %ecx
 790              	.LVL67:
 236:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode the less probable symbol */
 791              		.loc 1 236 18 view .LVU238
 792 002c C1F907   		sarl	$7, %ecx
 793              	.LVL68:
 232:fltk-1.3.4-1/jpeg/jcarith.c **** 
 794              		.loc 1 232 22 view .LVU239
 795 002f 4C89C7   		movq	%r8, %rdi
 796              	.LVL69:
 232:fltk-1.3.4-1/jpeg/jcarith.c **** 
 797              		.loc 1 232 22 view .LVU240
 798 0032 48C1FF10 		sarq	$16, %rdi
 799              	.LVL70:
 235:fltk-1.3.4-1/jpeg/jcarith.c ****   if (val != (sv >> 7)) {
 800              		.loc 1 235 3 is_stmt 1 view .LVU241
 235:fltk-1.3.4-1/jpeg/jcarith.c ****   if (val != (sv >> 7)) {
 801              		.loc 1 235 8 is_stmt 0 view .LVU242
 802 0036 4829FA   		subq	%rdi, %rdx
 803 0039 48895320 		movq	%rdx, 32(%rbx)
 236:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode the less probable symbol */
 804              		.loc 1 236 3 is_stmt 1 view .LVU243
 236:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Encode the less probable symbol */
 805              		.loc 1 236 6 is_stmt 0 view .LVU244
 806 003d 4439C9   		cmpl	%r9d, %ecx
 807 0040 0F84B201 		je	.L75
 807      0000
 238:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 808              		.loc 1 238 5 is_stmt 1 view .LVU245
 238:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 809              		.loc 1 238 8 is_stmt 0 view .LVU246
 810 0046 4839FA   		cmpq	%rdi, %rdx
 811 0049 0F8D8101 		jge	.L110
 811      0000
 812              	.L76:
 246:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 813              		.loc 1 246 5 is_stmt 1 view .LVU247
 246:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 814              		.loc 1 246 15 is_stmt 0 view .LVU248
 815 004f 83E080   		andl	$-128, %eax
 816              	.LVL71:
 246:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 817              		.loc 1 246 23 view .LVU249
 818 0052 4431C0   		xorl	%r8d, %eax
 819 0055 8806     		movb	%al, (%rsi)
 820              	.LVL72:
 821              	.L80:
 246:fltk-1.3.4-1/jpeg/jcarith.c ****   } else {
 822              		.loc 1 246 23 view .LVU250
 823 0057 488B4B20 		movq	32(%rbx), %rcx
 824 005b EB76     		jmp	.L77
 825              	.LVL73:
 826 005d 0F1F00   		.p2align 4,,10
 827              		.p2align 3
 828              	.L111:
 270:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 829              		.loc 1 270 2 is_stmt 1 view .LVU251
 270:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 830              		.loc 1 270 7 is_stmt 0 view .LVU252
 831 0060 8B7B3C   		movl	60(%rbx), %edi
 832 0063 488B7330 		movq	48(%rbx), %rsi
 270:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 833              		.loc 1 270 5 view .LVU253
 834 0067 85FF     		testl	%edi, %edi
 835 0069 7830     		js	.L83
 271:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 836              		.loc 1 271 4 is_stmt 1 view .LVU254
 271:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 837              		.loc 1 271 7 is_stmt 0 view .LVU255
 838 006b 4885F6   		testq	%rsi, %rsi
 839 006e 0F85C400 		jne	.L85
 839      0000
 840              	.L84:
 274:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->buffer + 1 == 0xFF)
 841              		.loc 1 274 4 is_stmt 1 view .LVU256
 842 0074 83C701   		addl	$1, %edi
 843 0077 4889EE   		movq	%rbp, %rsi
 844 007a E8000000 		call	emit_byte
 844      00
 845              	.LVL74:
 275:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0x00, cinfo);
 846              		.loc 1 275 4 view .LVU257
 275:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0x00, cinfo);
 847              		.loc 1 275 7 is_stmt 0 view .LVU258
 848 007f 817B3CFE 		cmpl	$254, 60(%rbx)
 848      000000
 849 0086 0F849C01 		je	.L86
 849      0000
 850              	.L109:
 851 008c 488B7330 		movq	48(%rbx), %rsi
 852 0090 488B5318 		movq	24(%rbx), %rdx
 853 0094 8B4338   		movl	56(%rbx), %eax
 854 0097 488B4B20 		movq	32(%rbx), %rcx
 855              	.L83:
 278:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->sc = 0;
 856              		.loc 1 278 2 is_stmt 1 view .LVU259
 278:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->sc = 0;
 857              		.loc 1 278 8 is_stmt 0 view .LVU260
 858 009b 48037328 		addq	40(%rbx), %rsi
 283:fltk-1.3.4-1/jpeg/jcarith.c ****       } else if (temp == 0xFF) {
 859              		.loc 1 283 19 view .LVU261
 860 009f 4181E4FF 		andl	$255, %r12d
 860      000000
 861              	.LVL75:
 279:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Note: The 3 spacer bits in the C register guarantee
 862              		.loc 1 279 8 view .LVU262
 863 00a6 48C74328 		movq	$0, 40(%rbx)
 863      00000000 
 278:fltk-1.3.4-1/jpeg/jcarith.c **** 	e->sc = 0;
 864              		.loc 1 278 8 view .LVU263
 865 00ae 48897330 		movq	%rsi, 48(%rbx)
 279:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Note: The 3 spacer bits in the C register guarantee
 866              		.loc 1 279 2 is_stmt 1 view .LVU264
 283:fltk-1.3.4-1/jpeg/jcarith.c ****       } else if (temp == 0xFF) {
 867              		.loc 1 283 2 view .LVU265
 283:fltk-1.3.4-1/jpeg/jcarith.c ****       } else if (temp == 0xFF) {
 868              		.loc 1 283 19 is_stmt 0 view .LVU266
 869 00b2 4489633C 		movl	%r12d, 60(%rbx)
 870              	.L87:
 307:fltk-1.3.4-1/jpeg/jcarith.c ****       e->ct += 8;
 871              		.loc 1 307 7 is_stmt 1 view .LVU267
 307:fltk-1.3.4-1/jpeg/jcarith.c ****       e->ct += 8;
 872              		.loc 1 307 12 is_stmt 0 view .LVU268
 873 00b6 81E2FFFF 		andl	$524287, %edx
 873      0700
 308:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 874              		.loc 1 308 13 view .LVU269
 875 00bc 83C008   		addl	$8, %eax
 307:fltk-1.3.4-1/jpeg/jcarith.c ****       e->ct += 8;
 876              		.loc 1 307 12 view .LVU270
 877 00bf 48895318 		movq	%rdx, 24(%rbx)
 308:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 878              		.loc 1 308 7 is_stmt 1 view .LVU271
 308:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 879              		.loc 1 308 13 is_stmt 0 view .LVU272
 880 00c3 894338   		movl	%eax, 56(%rbx)
 881              	.L81:
 310:fltk-1.3.4-1/jpeg/jcarith.c **** }
 882              		.loc 1 310 11 is_stmt 1 view .LVU273
 310:fltk-1.3.4-1/jpeg/jcarith.c **** }
 883              		.loc 1 310 3 is_stmt 0 view .LVU274
 884 00c6 4881F9FF 		cmpq	$32767, %rcx
 884      7F0000
 885 00cd 0F8F8500 		jg	.L74
 885      0000
 886              	.L77:
 262:fltk-1.3.4-1/jpeg/jcarith.c ****     e->a <<= 1;
 887              		.loc 1 262 3 is_stmt 1 view .LVU275
 263:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c <<= 1;
 888              		.loc 1 263 5 view .LVU276
 264:fltk-1.3.4-1/jpeg/jcarith.c ****     if (--e->ct == 0) {
 889              		.loc 1 264 10 is_stmt 0 view .LVU277
 890 00d3 488B4318 		movq	24(%rbx), %rax
 263:fltk-1.3.4-1/jpeg/jcarith.c ****     e->c <<= 1;
 891              		.loc 1 263 10 view .LVU278
 892 00d7 4801C9   		addq	%rcx, %rcx
 893 00da 48894B20 		movq	%rcx, 32(%rbx)
 264:fltk-1.3.4-1/jpeg/jcarith.c ****     if (--e->ct == 0) {
 894              		.loc 1 264 5 is_stmt 1 view .LVU279
 264:fltk-1.3.4-1/jpeg/jcarith.c ****     if (--e->ct == 0) {
 895              		.loc 1 264 10 is_stmt 0 view .LVU280
 896 00de 488D1400 		leaq	(%rax,%rax), %rdx
 265:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Another byte is ready for output */
 897              		.loc 1 265 9 view .LVU281
 898 00e2 8B4338   		movl	56(%rbx), %eax
 264:fltk-1.3.4-1/jpeg/jcarith.c ****     if (--e->ct == 0) {
 899              		.loc 1 264 10 view .LVU282
 900 00e5 48895318 		movq	%rdx, 24(%rbx)
 265:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Another byte is ready for output */
 901              		.loc 1 265 5 is_stmt 1 view .LVU283
 265:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Another byte is ready for output */
 902              		.loc 1 265 9 is_stmt 0 view .LVU284
 903 00e9 83E801   		subl	$1, %eax
 265:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Another byte is ready for output */
 904              		.loc 1 265 8 view .LVU285
 905 00ec 894338   		movl	%eax, 56(%rbx)
 906 00ef 75D5     		jne	.L81
 267:fltk-1.3.4-1/jpeg/jcarith.c ****       if (temp > 0xFF) {
 907              		.loc 1 267 7 is_stmt 1 view .LVU286
 267:fltk-1.3.4-1/jpeg/jcarith.c ****       if (temp > 0xFF) {
 908              		.loc 1 267 12 is_stmt 0 view .LVU287
 909 00f1 4989D4   		movq	%rdx, %r12
 910 00f4 49C1FC13 		sarq	$19, %r12
 911              	.LVL76:
 268:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Handle overflow over all stacked 0xFF bytes */
 912              		.loc 1 268 7 is_stmt 1 view .LVU288
 268:fltk-1.3.4-1/jpeg/jcarith.c **** 	/* Handle overflow over all stacked 0xFF bytes */
 913              		.loc 1 268 10 is_stmt 0 view .LVU289
 914 00f8 4981FCFF 		cmpq	$255, %r12
 914      000000
 915 00ff 0F8F5BFF 		jg	.L111
 915      FFFF
 284:fltk-1.3.4-1/jpeg/jcarith.c **** 	++e->sc;  /* stack 0xFF byte (which might overflow later) */
 916              		.loc 1 284 14 is_stmt 1 view .LVU290
 284:fltk-1.3.4-1/jpeg/jcarith.c **** 	++e->sc;  /* stack 0xFF byte (which might overflow later) */
 917              		.loc 1 284 17 is_stmt 0 view .LVU291
 918 0105 7459     		je	.L112
 288:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ++e->zc;
 919              		.loc 1 288 2 is_stmt 1 view .LVU292
 288:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ++e->zc;
 920              		.loc 1 288 7 is_stmt 0 view .LVU293
 921 0107 8B7B3C   		movl	60(%rbx), %edi
 288:fltk-1.3.4-1/jpeg/jcarith.c **** 	  ++e->zc;
 922              		.loc 1 288 5 view .LVU294
 923 010a 85FF     		testl	%edi, %edi
 924 010c 7562     		jne	.L89
 289:fltk-1.3.4-1/jpeg/jcarith.c **** 	else if (e->buffer >= 0) {
 925              		.loc 1 289 4 is_stmt 1 view .LVU295
 926 010e 48834330 		addq	$1, 48(%rbx)
 926      01
 927              	.L90:
 296:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 928              		.loc 1 296 2 view .LVU296
 296:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 929              		.loc 1 296 5 is_stmt 0 view .LVU297
 930 0113 48837B28 		cmpq	$0, 40(%rbx)
 930      00
 931 0118 756E     		jne	.L93
 932              	.L97:
 305:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 933              		.loc 1 305 2 is_stmt 1 view .LVU298
 305:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 934              		.loc 1 305 19 is_stmt 0 view .LVU299
 935 011a 4181E4FF 		andl	$255, %r12d
 935      000000
 936              	.LVL77:
 305:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 937              		.loc 1 305 19 view .LVU300
 938 0121 488B5318 		movq	24(%rbx), %rdx
 939 0125 8B4338   		movl	56(%rbx), %eax
 940 0128 4489633C 		movl	%r12d, 60(%rbx)
 941 012c 488B4B20 		movq	32(%rbx), %rcx
 942 0130 EB84     		jmp	.L87
 943              	.LVL78:
 944              		.p2align 4,,10
 945 0132 660F1F44 		.p2align 3
 945      0000
 946              	.L85:
 272:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 947              		.loc 1 272 6 is_stmt 1 discriminator 1 view .LVU301
 272:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 948              		.loc 1 272 9 discriminator 1 view .LVU302
 949 0138 31FF     		xorl	%edi, %edi
 950 013a 4889EE   		movq	%rbp, %rsi
 951 013d E8000000 		call	emit_byte
 951      00
 952              	.LVL79:
 273:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer + 1, cinfo);
 953              		.loc 1 273 12 discriminator 1 view .LVU303
 273:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer + 1, cinfo);
 954              		.loc 1 273 6 is_stmt 0 discriminator 1 view .LVU304
 955 0142 48836B30 		subq	$1, 48(%rbx)
 955      01
 956 0147 75EF     		jne	.L85
 957 0149 8B7B3C   		movl	60(%rbx), %edi
 958 014c E923FFFF 		jmp	.L84
 958      FF
 959              	.LVL80:
 960              		.p2align 4,,10
 961 0151 0F1F8000 		.p2align 3
 961      000000
 962              	.L74:
 311:fltk-1.3.4-1/jpeg/jcarith.c **** 
 963              		.loc 1 311 1 view .LVU305
 964 0158 5B       		popq	%rbx
 965              		.cfi_remember_state
 966              		.cfi_def_cfa_offset 24
 967              	.LVL81:
 311:fltk-1.3.4-1/jpeg/jcarith.c **** 
 968              		.loc 1 311 1 view .LVU306
 969 0159 5D       		popq	%rbp
 970              		.cfi_def_cfa_offset 16
 971              	.LVL82:
 311:fltk-1.3.4-1/jpeg/jcarith.c **** 
 972              		.loc 1 311 1 view .LVU307
 973 015a 415C     		popq	%r12
 974              		.cfi_def_cfa_offset 8
 975 015c C3       		ret
 976              	.LVL83:
 977 015d 0F1F00   		.p2align 4,,10
 978              		.p2align 3
 979              	.L112:
 980              		.cfi_restore_state
 285:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 981              		.loc 1 285 2 is_stmt 1 view .LVU308
 982 0160 48834328 		addq	$1, 40(%rbx)
 982      01
 983 0165 E94CFFFF 		jmp	.L87
 983      FF
 984 016a 660F1F44 		.p2align 4,,10
 984      0000
 985              		.p2align 3
 986              	.L89:
 290:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 987              		.loc 1 290 7 view .LVU309
 290:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 988              		.loc 1 290 10 is_stmt 0 view .LVU310
 989 0170 78A1     		js	.L90
 291:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 990              		.loc 1 291 4 is_stmt 1 view .LVU311
 291:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 991              		.loc 1 291 7 is_stmt 0 view .LVU312
 992 0172 48837B30 		cmpq	$0, 48(%rbx)
 992      00
 993 0177 753F     		jne	.L92
 994              	.L91:
 294:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 995              		.loc 1 294 4 is_stmt 1 view .LVU313
 996 0179 4889EE   		movq	%rbp, %rsi
 997 017c E8000000 		call	emit_byte
 997      00
 998              	.LVL84:
 296:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 999              		.loc 1 296 2 view .LVU314
 296:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (e->zc)
 1000              		.loc 1 296 5 is_stmt 0 view .LVU315
 1001 0181 48837B28 		cmpq	$0, 40(%rbx)
 1001      00
 1002 0186 7492     		je	.L97
 1003              	.L93:
 297:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 1004              		.loc 1 297 4 is_stmt 1 view .LVU316
 297:fltk-1.3.4-1/jpeg/jcarith.c **** 	    do emit_byte(0x00, cinfo);
 1005              		.loc 1 297 7 is_stmt 0 view .LVU317
 1006 0188 48837B30 		cmpq	$0, 48(%rbx)
 1006      00
 1007 018d 7551     		jne	.L94
 1008 018f 90       		.p2align 4,,10
 1009              		.p2align 3
 1010              	.L95:
 300:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0xFF, cinfo);
 1011              		.loc 1 300 4 is_stmt 1 discriminator 1 view .LVU318
 301:fltk-1.3.4-1/jpeg/jcarith.c **** 	    emit_byte(0x00, cinfo);
 1012              		.loc 1 301 6 discriminator 1 view .LVU319
 1013 0190 4889EE   		movq	%rbp, %rsi
 1014 0193 BFFF0000 		movl	$255, %edi
 1014      00
 1015 0198 E8000000 		call	emit_byte
 1015      00
 1016              	.LVL85:
 302:fltk-1.3.4-1/jpeg/jcarith.c **** 	  } while (--e->sc);
 1017              		.loc 1 302 6 discriminator 1 view .LVU320
 1018 019d 31FF     		xorl	%edi, %edi
 1019 019f 4889EE   		movq	%rbp, %rsi
 1020 01a2 E8000000 		call	emit_byte
 1020      00
 1021              	.LVL86:
 303:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 1022              		.loc 1 303 12 discriminator 1 view .LVU321
 303:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 1023              		.loc 1 303 4 is_stmt 0 discriminator 1 view .LVU322
 1024 01a7 48836B28 		subq	$1, 40(%rbx)
 1024      01
 1025 01ac 75E2     		jne	.L95
 1026 01ae E967FFFF 		jmp	.L97
 1026      FF
 1027              		.p2align 4,,10
 1028 01b3 0F1F4400 		.p2align 3
 1028      00
 1029              	.L92:
 292:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 1030              		.loc 1 292 6 is_stmt 1 discriminator 1 view .LVU323
 292:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 1031              		.loc 1 292 9 discriminator 1 view .LVU324
 1032 01b8 31FF     		xorl	%edi, %edi
 1033 01ba 4889EE   		movq	%rbp, %rsi
 1034 01bd E8000000 		call	emit_byte
 1034      00
 1035              	.LVL87:
 293:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer, cinfo);
 1036              		.loc 1 293 12 discriminator 1 view .LVU325
 293:fltk-1.3.4-1/jpeg/jcarith.c **** 	  emit_byte(e->buffer, cinfo);
 1037              		.loc 1 293 6 is_stmt 0 discriminator 1 view .LVU326
 1038 01c2 48836B30 		subq	$1, 48(%rbx)
 1038      01
 1039 01c7 75EF     		jne	.L92
 1040 01c9 8B7B3C   		movl	60(%rbx), %edi
 1041 01cc EBAB     		jmp	.L91
 1042              	.LVL88:
 1043 01ce 6690     		.p2align 4,,10
 1044              		.p2align 3
 1045              	.L110:
 243:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 1046              		.loc 1 243 7 is_stmt 1 view .LVU327
 243:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 1047              		.loc 1 243 12 is_stmt 0 view .LVU328
 1048 01d0 48015318 		addq	%rdx, 24(%rbx)
 244:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1049              		.loc 1 244 7 is_stmt 1 view .LVU329
 244:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1050              		.loc 1 244 12 is_stmt 0 view .LVU330
 1051 01d4 48897B20 		movq	%rdi, 32(%rbx)
 1052 01d8 E972FEFF 		jmp	.L76
 1052      FF
 1053              	.LVL89:
 1054 01dd 0F1F00   		.p2align 4,,10
 1055              		.p2align 3
 1056              	.L94:
 298:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 1057              		.loc 1 298 6 is_stmt 1 discriminator 1 view .LVU331
 298:fltk-1.3.4-1/jpeg/jcarith.c **** 	    while (--e->zc);
 1058              		.loc 1 298 9 discriminator 1 view .LVU332
 1059 01e0 31FF     		xorl	%edi, %edi
 1060 01e2 4889EE   		movq	%rbp, %rsi
 1061 01e5 E8000000 		call	emit_byte
 1061      00
 1062              	.LVL90:
 299:fltk-1.3.4-1/jpeg/jcarith.c **** 	  do {
 1063              		.loc 1 299 12 discriminator 1 view .LVU333
 299:fltk-1.3.4-1/jpeg/jcarith.c **** 	  do {
 1064              		.loc 1 299 6 is_stmt 0 discriminator 1 view .LVU334
 1065 01ea 48836B30 		subq	$1, 48(%rbx)
 1065      01
 1066 01ef 75EF     		jne	.L94
 1067 01f1 EB9D     		jmp	.L95
 1068              	.LVL91:
 1069              		.p2align 4,,10
 1070 01f3 0F1F4400 		.p2align 3
 1070      00
 1071              	.L75:
 249:fltk-1.3.4-1/jpeg/jcarith.c ****       return;  /* A >= 0x8000 -> ready, no renormalization required */
 1072              		.loc 1 249 5 is_stmt 1 view .LVU335
 249:fltk-1.3.4-1/jpeg/jcarith.c ****       return;  /* A >= 0x8000 -> ready, no renormalization required */
 1073              		.loc 1 249 8 is_stmt 0 view .LVU336
 1074 01f8 4881FAFF 		cmpq	$32767, %rdx
 1074      7F0000
 1075 01ff 0F8F53FF 		jg	.L74
 1075      FFFF
 251:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 1076              		.loc 1 251 5 is_stmt 1 view .LVU337
 251:fltk-1.3.4-1/jpeg/jcarith.c ****       /* If the interval size (qe) for the less probable symbol (LPS)
 1077              		.loc 1 251 8 is_stmt 0 view .LVU338
 1078 0205 4839FA   		cmpq	%rdi, %rdx
 1079 0208 7D08     		jge	.L79
 255:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 1080              		.loc 1 255 7 is_stmt 1 view .LVU339
 255:fltk-1.3.4-1/jpeg/jcarith.c ****       e->a = qe;
 1081              		.loc 1 255 12 is_stmt 0 view .LVU340
 1082 020a 48015318 		addq	%rdx, 24(%rbx)
 256:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1083              		.loc 1 256 7 is_stmt 1 view .LVU341
 256:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1084              		.loc 1 256 12 is_stmt 0 view .LVU342
 1085 020e 48897B20 		movq	%rdi, 32(%rbx)
 1086              	.L79:
 258:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1087              		.loc 1 258 5 is_stmt 1 view .LVU343
 258:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1088              		.loc 1 258 15 is_stmt 0 view .LVU344
 1089 0212 83E080   		andl	$-128, %eax
 1090              	.LVL92:
 231:fltk-1.3.4-1/jpeg/jcarith.c ****   nm = qe & 0xFF; qe >>= 8;	/* Next_Index_MPS */
 1091              		.loc 1 231 22 view .LVU345
 1092 0215 49C1F808 		sarq	$8, %r8
 1093              	.LVL93:
 258:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1094              		.loc 1 258 23 view .LVU346
 1095 0219 4431C0   		xorl	%r8d, %eax
 1096 021c 8806     		movb	%al, (%rsi)
 1097 021e E934FEFF 		jmp	.L80
 1097      FF
 1098              	.LVL94:
 1099              		.p2align 4,,10
 1100 0223 0F1F4400 		.p2align 3
 1100      00
 1101              	.L86:
 276:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 1102              		.loc 1 276 6 is_stmt 1 view .LVU347
 1103 0228 4889EE   		movq	%rbp, %rsi
 1104 022b 31FF     		xorl	%edi, %edi
 1105 022d E8000000 		call	emit_byte
 1105      00
 1106              	.LVL95:
 1107 0232 E955FEFF 		jmp	.L109
 1107      FF
 1108              		.cfi_endproc
 1109              	.LFE53:
 1111              		.section	.text.emit_restart,"ax",@progbits
 1112              		.p2align 4
 1114              	emit_restart:
 1115              	.LVL96:
 1116              	.LFB54:
 320:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1117              		.loc 1 320 1 view -0
 1118              		.cfi_startproc
 321:fltk-1.3.4-1/jpeg/jcarith.c ****   int ci;
 1119              		.loc 1 321 3 view .LVU349
 320:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1120              		.loc 1 320 1 is_stmt 0 view .LVU350
 1121 0000 4154     		pushq	%r12
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 12, -16
 1124 0002 4189F4   		movl	%esi, %r12d
 1125 0005 55       		pushq	%rbp
 1126              		.cfi_def_cfa_offset 24
 1127              		.cfi_offset 6, -24
 1128 0006 53       		pushq	%rbx
 1129              		.cfi_def_cfa_offset 32
 1130              		.cfi_offset 3, -32
 320:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1131              		.loc 1 320 1 view .LVU351
 1132 0007 4889FB   		movq	%rdi, %rbx
 321:fltk-1.3.4-1/jpeg/jcarith.c ****   int ci;
 1133              		.loc 1 321 21 view .LVU352
 1134 000a 488BAF30 		movq	560(%rdi), %rbp
 1134      020000
 1135              	.LVL97:
 322:fltk-1.3.4-1/jpeg/jcarith.c ****   jpeg_component_info * compptr;
 1136              		.loc 1 322 3 is_stmt 1 view .LVU353
 323:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1137              		.loc 1 323 3 view .LVU354
 325:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1138              		.loc 1 325 3 view .LVU355
 1139 0011 E8000000 		call	finish_pass
 1139      00
 1140              	.LVL98:
 327:fltk-1.3.4-1/jpeg/jcarith.c ****   emit_byte(JPEG_RST0 + restart_num, cinfo);
 1141              		.loc 1 327 3 view .LVU356
 1142 0016 4889DE   		movq	%rbx, %rsi
 1143 0019 BFFF0000 		movl	$255, %edi
 1143      00
 1144 001e E8000000 		call	emit_byte
 1144      00
 1145              	.LVL99:
 328:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1146              		.loc 1 328 3 view .LVU357
 1147 0023 418DBC24 		leal	208(%r12), %edi
 1147      D0000000 
 1148 002b 4889DE   		movq	%rbx, %rsi
 1149 002e E8000000 		call	emit_byte
 1149      00
 1150              	.LVL100:
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1151              		.loc 1 331 3 view .LVU358
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1152              		.loc 1 331 16 view .LVU359
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1153              		.loc 1 331 3 is_stmt 0 view .LVU360
 1154 0033 448B8B74 		movl	372(%rbx), %r9d
 1154      010000
 1155 003a 4585C9   		testl	%r9d, %r9d
 1156 003d 7E41     		jle	.L114
 1157 003f 31D2     		xorl	%edx, %edx
 1158              	.LBB24:
 1159              	.LBB25:
 1160              		.loc 2 71 10 view .LVU361
 1161 0041 31C0     		xorl	%eax, %eax
 1162              	.LVL101:
 1163              		.p2align 4,,10
 1164 0043 0F1F4400 		.p2align 3
 1164      00
 1165              	.L117:
 1166              		.loc 2 71 10 view .LVU362
 1167              	.LBE25:
 1168              	.LBE24:
 332:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 1169              		.loc 1 332 5 is_stmt 1 view .LVU363
 334:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[compptr->dc_tbl_no], DC_STAT_BINS);
 1170              		.loc 1 334 8 is_stmt 0 view .LVU364
 1171 0048 448B83CC 		movl	460(%rbx), %r8d
 1171      010000
 332:fltk-1.3.4-1/jpeg/jcarith.c ****     /* DC needs no table for refinement scan */
 1172              		.loc 1 332 13 view .LVU365
 1173 004f 488B8CD3 		movq	376(%rbx,%rdx,8), %rcx
 1173      78010000 
 1174              	.LVL102:
 334:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[compptr->dc_tbl_no], DC_STAT_BINS);
 1175              		.loc 1 334 5 is_stmt 1 view .LVU366
 334:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[compptr->dc_tbl_no], DC_STAT_BINS);
 1176              		.loc 1 334 8 is_stmt 0 view .LVU367
 1177 0057 4585C0   		testl	%r8d, %r8d
 1178 005a 750E     		jne	.L115
 334:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->dc_stats[compptr->dc_tbl_no], DC_STAT_BINS);
 1179              		.loc 1 334 24 discriminator 1 view .LVU368
 1180 005c 8BBBD401 		movl	468(%rbx), %edi
 1180      0000
 1181 0062 85FF     		testl	%edi, %edi
 1182 0064 0F848600 		je	.L120
 1182      0000
 1183              	.L115:
 341:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->ac_stats[compptr->ac_tbl_no], AC_STAT_BINS);
 1184              		.loc 1 341 5 is_stmt 1 view .LVU369
 341:fltk-1.3.4-1/jpeg/jcarith.c ****       MEMZERO(entropy->ac_stats[compptr->ac_tbl_no], AC_STAT_BINS);
 1185              		.loc 1 341 8 is_stmt 0 view .LVU370
 1186 006a 8BB3D001 		movl	464(%rbx), %esi
 1186      0000
 1187 0070 85F6     		testl	%esi, %esi
 1188 0072 7544     		jne	.L121
 1189              	.LVL103:
 1190              	.L116:
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1191              		.loc 1 331 43 is_stmt 1 discriminator 2 view .LVU371
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1192              		.loc 1 331 16 discriminator 2 view .LVU372
 1193 0074 4883C201 		addq	$1, %rdx
 1194              	.LVL104:
 331:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 1195              		.loc 1 331 3 is_stmt 0 discriminator 2 view .LVU373
 1196 0078 39937401 		cmpl	%edx, 372(%rbx)
 1196      0000
 1197 007e 7FC8     		jg	.L117
 1198              	.L114:
 347:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->a = 0x10000L;
 1199              		.loc 1 347 3 is_stmt 1 view .LVU374
 348:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->sc = 0;
 1200              		.loc 1 348 3 view .LVU375
 349:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->zc = 0;
 1201              		.loc 1 349 3 view .LVU376
 350:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
 1202              		.loc 1 350 3 view .LVU377
 351:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
 1203              		.loc 1 351 3 view .LVU378
 352:fltk-1.3.4-1/jpeg/jcarith.c **** }
 1204              		.loc 1 352 3 view .LVU379
 351:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
 1205              		.loc 1 351 15 is_stmt 0 view .LVU380
 1206 0080 48B80B00 		movabsq	$-4294967285, %rax
 1206      0000FFFF 
 1206      FFFF
 347:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->a = 0x10000L;
 1207              		.loc 1 347 14 view .LVU381
 1208 008a 48C74518 		movq	$0, 24(%rbp)
 1208      00000000 
 348:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->sc = 0;
 1209              		.loc 1 348 14 view .LVU382
 1210 0092 48C74520 		movq	$65536, 32(%rbp)
 1210      00000100 
 349:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->zc = 0;
 1211              		.loc 1 349 15 view .LVU383
 1212 009a 48C74528 		movq	$0, 40(%rbp)
 1212      00000000 
 350:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->ct = 11;
 1213              		.loc 1 350 15 view .LVU384
 1214 00a2 48C74530 		movq	$0, 48(%rbp)
 1214      00000000 
 351:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->buffer = -1;  /* empty */
 1215              		.loc 1 351 15 view .LVU385
 1216 00aa 48894538 		movq	%rax, 56(%rbp)
 353:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1217              		.loc 1 353 1 view .LVU386
 1218 00ae 5B       		popq	%rbx
 1219              		.cfi_remember_state
 1220              		.cfi_def_cfa_offset 24
 1221              	.LVL105:
 353:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1222              		.loc 1 353 1 view .LVU387
 1223 00af 5D       		popq	%rbp
 1224              		.cfi_def_cfa_offset 16
 1225              	.LVL106:
 353:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1226              		.loc 1 353 1 view .LVU388
 1227 00b0 415C     		popq	%r12
 1228              		.cfi_def_cfa_offset 8
 1229              	.LVL107:
 353:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1230              		.loc 1 353 1 view .LVU389
 1231 00b2 C3       		ret
 1232              	.LVL108:
 1233              		.p2align 4,,10
 1234 00b3 0F1F4400 		.p2align 3
 1234      00
 1235              	.L121:
 1236              		.cfi_restore_state
 342:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1237              		.loc 1 342 7 is_stmt 1 view .LVU390
 1238              	.LBB28:
 1239              	.LBI24:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 1240              		.loc 2 59 1 view .LVU391
 1241              	.LBB26:
 1242              		.loc 2 71 3 view .LVU392
 1243              	.LBE26:
 1244              	.LBE28:
 342:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1245              		.loc 1 342 7 is_stmt 0 view .LVU393
 1246 00b8 48634918 		movslq	24(%rcx), %rcx
 1247              	.LVL109:
 1248              	.LBB29:
 1249              	.LBB27:
 1250              		.loc 2 71 10 view .LVU394
 1251 00bc 488B8CCD 		movq	232(%rbp,%rcx,8), %rcx
 1251      E8000000 
 1252              	.LVL110:
 1253              		.loc 2 71 10 view .LVU395
 1254 00c4 488D7908 		leaq	8(%rcx), %rdi
 1255 00c8 48C70100 		movq	$0, (%rcx)
 1255      000000
 1256              		.loc 2 71 10 view .LVU396
 1257 00cf 48C781F8 		movq	$0, 248(%rcx)
 1257      00000000 
 1257      000000
 1258 00da 4883E7F8 		andq	$-8, %rdi
 1259 00de 4829F9   		subq	%rdi, %rcx
 1260 00e1 81C10001 		addl	$256, %ecx
 1260      0000
 1261 00e7 C1E903   		shrl	$3, %ecx
 1262 00ea F348AB   		rep stosq
 1263 00ed EB85     		jmp	.L116
 1264              	.LVL111:
 1265 00ef 90       		.p2align 4,,10
 1266              		.p2align 3
 1267              	.L120:
 1268              		.loc 2 71 10 view .LVU397
 1269              	.LBE27:
 1270              	.LBE29:
 335:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Reset DC predictions to 0 */
 1271              		.loc 1 335 7 is_stmt 1 view .LVU398
 1272              	.LBB30:
 1273              	.LBI30:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 1274              		.loc 2 59 1 view .LVU399
 1275              	.LBB31:
 1276              		.loc 2 71 3 view .LVU400
 1277              	.LBE31:
 1278              	.LBE30:
 335:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Reset DC predictions to 0 */
 1279              		.loc 1 335 7 is_stmt 0 view .LVU401
 1280 00f0 48637114 		movslq	20(%rcx), %rsi
 1281              	.LBB33:
 1282              	.LBB32:
 1283              		.loc 2 71 10 view .LVU402
 1284 00f4 660FEFC0 		pxor	%xmm0, %xmm0
 1285 00f8 488B74F5 		movq	104(%rbp,%rsi,8), %rsi
 1285      68
 1286 00fd 0F1106   		movups	%xmm0, (%rsi)
 1287              	.LVL112:
 1288              		.loc 2 71 10 view .LVU403
 1289 0100 0F114610 		movups	%xmm0, 16(%rsi)
 1290 0104 0F114620 		movups	%xmm0, 32(%rsi)
 1291 0108 0F114630 		movups	%xmm0, 48(%rsi)
 1292              	.LVL113:
 1293              		.loc 2 71 10 view .LVU404
 1294              	.LBE32:
 1295              	.LBE33:
 337:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 1296              		.loc 1 337 7 is_stmt 1 view .LVU405
 337:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;
 1297              		.loc 1 337 32 is_stmt 0 view .LVU406
 1298 010c C7449540 		movl	$0, 64(%rbp,%rdx,4)
 1298      00000000 
 338:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1299              		.loc 1 338 7 is_stmt 1 view .LVU407
 338:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1300              		.loc 1 338 31 is_stmt 0 view .LVU408
 1301 0114 C7449550 		movl	$0, 80(%rbp,%rdx,4)
 1301      00000000 
 1302 011c E949FFFF 		jmp	.L115
 1302      FF
 1303              		.cfi_endproc
 1304              	.LFE54:
 1306              		.section	.text.encode_mcu_DC_first,"ax",@progbits
 1307              		.p2align 4
 1309              	encode_mcu_DC_first:
 1310              	.LVL114:
 1311              	.LFB55:
 363:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1312              		.loc 1 363 1 is_stmt 1 view -0
 1313              		.cfi_startproc
 363:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1314              		.loc 1 363 1 is_stmt 0 view .LVU410
 1315 0000 F30F1EFA 		endbr64
 364:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 1316              		.loc 1 364 3 is_stmt 1 view .LVU411
 363:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1317              		.loc 1 363 1 is_stmt 0 view .LVU412
 1318 0004 4157     		pushq	%r15
 1319              		.cfi_def_cfa_offset 16
 1320              		.cfi_offset 15, -16
 1321 0006 4989FF   		movq	%rdi, %r15
 1322 0009 4156     		pushq	%r14
 1323              		.cfi_def_cfa_offset 24
 1324              		.cfi_offset 14, -24
 1325 000b 4155     		pushq	%r13
 1326              		.cfi_def_cfa_offset 32
 1327              		.cfi_offset 13, -32
 1328 000d 4154     		pushq	%r12
 1329              		.cfi_def_cfa_offset 40
 1330              		.cfi_offset 12, -40
 1331 000f 55       		pushq	%rbp
 1332              		.cfi_def_cfa_offset 48
 1333              		.cfi_offset 6, -48
 1334 0010 53       		pushq	%rbx
 1335              		.cfi_def_cfa_offset 56
 1336              		.cfi_offset 3, -56
 1337 0011 4883EC38 		subq	$56, %rsp
 1338              		.cfi_def_cfa_offset 112
 364:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 1339              		.loc 1 364 21 view .LVU413
 1340 0015 488B8730 		movq	560(%rdi), %rax
 1340      020000
 371:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1341              		.loc 1 371 6 view .LVU414
 1342 001c 8B973C01 		movl	316(%rdi), %edx
 1342      0000
 363:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1343              		.loc 1 363 1 view .LVU415
 1344 0022 48897424 		movq	%rsi, 16(%rsp)
 1344      10
 364:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 1345              		.loc 1 364 21 view .LVU416
 1346 0027 48894424 		movq	%rax, 8(%rsp)
 1346      08
 1347              	.LVL115:
 365:fltk-1.3.4-1/jpeg/jcarith.c ****   int blkn, ci, tbl;
 1348              		.loc 1 365 3 is_stmt 1 view .LVU417
 366:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 1349              		.loc 1 366 3 view .LVU418
 367:fltk-1.3.4-1/jpeg/jcarith.c ****   ISHIFT_TEMPS
 1350              		.loc 1 367 3 view .LVU419
 371:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1351              		.loc 1 371 3 view .LVU420
 371:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1352              		.loc 1 371 6 is_stmt 0 view .LVU421
 1353 002c 85D2     		testl	%edx, %edx
 1354 002e 7416     		je	.L123
 372:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1355              		.loc 1 372 5 is_stmt 1 view .LVU422
 372:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1356              		.loc 1 372 16 is_stmt 0 view .LVU423
 1357 0030 8B4060   		movl	96(%rax), %eax
 1358              	.LVL116:
 372:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1359              		.loc 1 372 8 view .LVU424
 1360 0033 85C0     		testl	%eax, %eax
 1361 0035 0F848002 		je	.L148
 1361      0000
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1362              		.loc 1 378 5 is_stmt 1 view .LVU425
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1363              		.loc 1 378 28 is_stmt 0 view .LVU426
 1364 003b 488B7424 		movq	8(%rsp), %rsi
 1364      08
 1365              	.LVL117:
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1366              		.loc 1 378 28 view .LVU427
 1367 0040 83E801   		subl	$1, %eax
 1368 0043 894660   		movl	%eax, 96(%rsi)
 1369              	.LVL118:
 1370              	.L123:
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1371              		.loc 1 382 18 is_stmt 1 discriminator 1 view .LVU428
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1372              		.loc 1 382 3 is_stmt 0 discriminator 1 view .LVU429
 1373 0046 418B87A0 		movl	416(%r15), %eax
 1373      010000
 1374 004d 31ED     		xorl	%ebp, %ebp
 1375 004f 85C0     		testl	%eax, %eax
 1376 0051 7F33     		jg	.L125
 1377 0053 E9690100 		jmp	.L146
 1377      00
 1378              	.LVL119:
 1379 0058 0F1F8400 		.p2align 4,,10
 1379      00000000 
 1380              		.p2align 3
 1381              	.L149:
 398:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;	/* zero diff category */
 1382              		.loc 1 398 7 is_stmt 1 view .LVU430
 1383 0060 31D2     		xorl	%edx, %edx
 1384              	.LVL120:
 398:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;	/* zero diff category */
 1385              		.loc 1 398 7 is_stmt 0 view .LVU431
 1386 0062 4C89D6   		movq	%r10, %rsi
 1387 0065 4C89FF   		movq	%r15, %rdi
 1388 0068 E8000000 		call	arith_encode
 1388      00
 1389              	.LVL121:
 399:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 1390              		.loc 1 399 7 is_stmt 1 view .LVU432
 399:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 1391              		.loc 1 399 31 is_stmt 0 view .LVU433
 1392 006d 41C74550 		movl	$0, 80(%r13)
 1392      00000000 
 1393              	.LVL122:
 1394              	.L127:
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1395              		.loc 1 382 47 is_stmt 1 discriminator 2 view .LVU434
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1396              		.loc 1 382 18 discriminator 2 view .LVU435
 1397 0075 4883C501 		addq	$1, %rbp
 1398              	.LVL123:
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1399              		.loc 1 382 3 is_stmt 0 discriminator 2 view .LVU436
 1400 0079 4139AFA0 		cmpl	%ebp, 416(%r15)
 1400      010000
 1401 0080 0F8E3B01 		jle	.L146
 1401      0000
 1402              	.L125:
 1403              	.LVL124:
 383:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = cinfo->cur_comp_info[ci]->dc_tbl_no;
 1404              		.loc 1 383 5 is_stmt 1 view .LVU437
 384:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1405              		.loc 1 384 5 view .LVU438
 384:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1406              		.loc 1 384 31 is_stmt 0 view .LVU439
 1407 0086 496384AF 		movslq	420(%r15,%rbp,4), %rax
 1407      A4010000 
 389:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1408              		.loc 1 389 9 view .LVU440
 1409 008e 488B7424 		movq	16(%rsp), %rsi
 1409      10
 1410 0093 488B7C24 		movq	8(%rsp), %rdi
 1410      08
 384:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1411              		.loc 1 384 9 view .LVU441
 1412 0098 498B94C7 		movq	376(%r15,%rax,8), %rdx
 1412      78010000 
 1413              	.LVL125:
 389:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1414              		.loc 1 389 5 is_stmt 1 view .LVU442
 389:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1415              		.loc 1 389 9 is_stmt 0 view .LVU443
 1416 00a0 488B0CEE 		movq	(%rsi,%rbp,8), %rcx
 1417 00a4 4C8D2C87 		leaq	(%rdi,%rax,4), %r13
 1418 00a8 0FBF19   		movswl	(%rcx), %ebx
 1419 00ab 4C634A14 		movslq	20(%rdx), %r9
 389:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1420              		.loc 1 389 7 view .LVU444
 1421 00af 418B8FD8 		movl	472(%r15), %ecx
 1421      010000
 397:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 1422              		.loc 1 397 38 view .LVU445
 1423 00b6 418B4540 		movl	64(%r13), %eax
 394:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1424              		.loc 1 394 54 view .LVU446
 1425 00ba 4D635550 		movslq	80(%r13), %r10
 389:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1426              		.loc 1 389 7 view .LVU447
 1427 00be D3FB     		sarl	%cl, %ebx
 1428              	.LVL126:
 394:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1429              		.loc 1 394 5 is_stmt 1 view .LVU448
 1430 00c0 4A8D0CCF 		leaq	(%rdi,%r9,8), %rcx
 394:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1431              		.loc 1 394 8 is_stmt 0 view .LVU449
 1432 00c4 4C035168 		addq	104(%rcx), %r10
 397:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 1433              		.loc 1 397 8 view .LVU450
 1434 00c8 4189DC   		movl	%ebx, %r12d
 394:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1435              		.loc 1 394 8 view .LVU451
 1436 00cb 4D89D6   		movq	%r10, %r14
 1437              	.LVL127:
 397:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 1438              		.loc 1 397 5 is_stmt 1 view .LVU452
 397:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 1439              		.loc 1 397 8 is_stmt 0 view .LVU453
 1440 00ce 4129C4   		subl	%eax, %r12d
 1441              	.LVL128:
 397:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 1442              		.loc 1 397 8 view .LVU454
 1443 00d1 748D     		je	.L149
 401:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 1444              		.loc 1 401 32 view .LVU455
 1445 00d3 41895D40 		movl	%ebx, 64(%r13)
 1446              	.LVL129:
 402:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 1447              		.loc 1 402 7 view .LVU456
 1448 00d7 4C89D6   		movq	%r10, %rsi
 1449 00da BA010000 		movl	$1, %edx
 1449      00
 1450 00df 4C89FF   		movq	%r15, %rdi
 1451 00e2 4C894C24 		movq	%r9, 40(%rsp)
 1451      28
 1452 00e7 89442420 		movl	%eax, 32(%rsp)
 1453 00eb 48894C24 		movq	%rcx, 24(%rsp)
 1453      18
 401:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 1454              		.loc 1 401 7 is_stmt 1 view .LVU457
 402:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 1455              		.loc 1 402 7 view .LVU458
 1456 00f0 E8000000 		call	arith_encode
 1456      00
 1457              	.LVL130:
 405:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 1458              		.loc 1 405 7 view .LVU459
 405:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 1459              		.loc 1 405 10 is_stmt 0 view .LVU460
 1460 00f5 4585E4   		testl	%r12d, %r12d
 1461 00f8 8B442420 		movl	32(%rsp), %eax
 1462 00fc 498D7601 		leaq	1(%r14), %rsi
 1463 0100 4C8B4C24 		movq	40(%rsp), %r9
 1463      28
 1464 0105 488B4C24 		movq	24(%rsp), %rcx
 1464      18
 1465 010a 4C894C24 		movq	%r9, 32(%rsp)
 1465      20
 1466 010f 0F8EEB00 		jle	.L128
 1466      0000
 406:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 2;			/* Table F.4: SP = S0 + 2 */
 1467              		.loc 1 406 2 is_stmt 1 view .LVU461
 1468 0115 31D2     		xorl	%edx, %edx
 1469 0117 4C89FF   		movq	%r15, %rdi
 407:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 1470              		.loc 1 407 5 is_stmt 0 view .LVU462
 1471 011a 498D5E02 		leaq	2(%r14), %rbx
 1472              	.LVL131:
 407:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 1473              		.loc 1 407 5 view .LVU463
 1474 011e 4531F6   		xorl	%r14d, %r14d
 1475              	.LVL132:
 406:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 2;			/* Table F.4: SP = S0 + 2 */
 1476              		.loc 1 406 2 view .LVU464
 1477 0121 E8000000 		call	arith_encode
 1477      00
 1478              	.LVL133:
 407:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 1479              		.loc 1 407 2 is_stmt 1 view .LVU465
 408:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 1480              		.loc 1 408 2 view .LVU466
 408:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 1481              		.loc 1 408 26 is_stmt 0 view .LVU467
 1482 0126 41C74550 		movl	$4, 80(%r13)
 1482      04000000 
 1483 012e 488B4C24 		movq	24(%rsp), %rcx
 1483      18
 416:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 1484              		.loc 1 416 9 view .LVU468
 1485 0133 4531D2   		xorl	%r10d, %r10d
 1486 0136 4C8B4C24 		movq	32(%rsp), %r9
 1486      20
 416:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 1487              		.loc 1 416 7 is_stmt 1 view .LVU469
 1488              	.LVL134:
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1489              		.loc 1 417 7 view .LVU470
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1490              		.loc 1 417 10 is_stmt 0 view .LVU471
 1491 013b 4183EC01 		subl	$1, %r12d
 1492              	.LVL135:
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1493              		.loc 1 417 10 view .LVU472
 1494 013f 0F85F800 		jne	.L150
 1494      0000
 1495              	.LVL136:
 1496              	.L130:
 428:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 1497              		.loc 1 428 7 view .LVU473
 1498 0145 31D2     		xorl	%edx, %edx
 1499 0147 4889DE   		movq	%rbx, %rsi
 1500 014a 4C89FF   		movq	%r15, %rdi
 1501 014d 4C894C24 		movq	%r9, 32(%rsp)
 1501      20
 1502 0152 44895424 		movl	%r10d, 24(%rsp)
 1502      18
 1503              	.LVL137:
 428:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 1504              		.loc 1 428 7 is_stmt 1 view .LVU474
 1505 0157 E8000000 		call	arith_encode
 1505      00
 1506              	.LVL138:
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1507              		.loc 1 430 7 view .LVU475
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1508              		.loc 1 430 46 is_stmt 0 view .LVU476
 1509 015c 4C8B4C24 		movq	32(%rsp), %r9
 1509      20
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1510              		.loc 1 430 26 view .LVU477
 1511 0161 BA010000 		movl	$1, %edx
 1511      00
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1512              		.loc 1 430 10 view .LVU478
 1513 0166 448B5424 		movl	24(%rsp), %r10d
 1513      18
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1514              		.loc 1 430 46 view .LVU479
 1515 016b 430FB68C 		movzbl	224(%r15,%r9), %ecx
 1515      0FE00000 
 1515      00
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1516              		.loc 1 430 26 view .LVU480
 1517 0174 48D3E2   		salq	%cl, %rdx
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1518              		.loc 1 430 53 view .LVU481
 1519 0177 48D1FA   		sarq	%rdx
 430:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 1520              		.loc 1 430 10 view .LVU482
 1521 017a 4139D2   		cmpl	%edx, %r10d
 1522 017d 7D59     		jge	.L132
 431:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 1523              		.loc 1 431 2 is_stmt 1 view .LVU483
 431:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 1524              		.loc 1 431 26 is_stmt 0 view .LVU484
 1525 017f 41C74550 		movl	$0, 80(%r13)
 1525      00000000 
 1526              	.L133:
 435:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 1527              		.loc 1 435 7 is_stmt 1 view .LVU485
 435:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 1528              		.loc 1 435 10 is_stmt 0 view .LVU486
 1529 0187 4883C30E 		addq	$14, %rbx
 1530              	.LVL139:
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1531              		.loc 1 436 7 is_stmt 1 view .LVU487
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1532              		.loc 1 436 13 view .LVU488
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1533              		.loc 1 436 13 is_stmt 0 view .LVU489
 1534 018b 4585F6   		testl	%r14d, %r14d
 1535 018e 0F84E1FE 		je	.L127
 1535      FFFF
 1536              		.p2align 4,,10
 1537 0194 0F1F4000 		.p2align 3
 1538              	.L134:
 1539              	.LVL140:
 437:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1540              		.loc 1 437 2 is_stmt 1 view .LVU490
 1541 0198 31D2     		xorl	%edx, %edx
 1542 019a 4585E6   		testl	%r12d, %r14d
 1543 019d 4889DE   		movq	%rbx, %rsi
 1544 01a0 4C89FF   		movq	%r15, %rdi
 1545 01a3 0F95C2   		setne	%dl
 1546 01a6 E8000000 		call	arith_encode
 1546      00
 1547              	.LVL141:
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1548              		.loc 1 436 13 view .LVU491
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1549              		.loc 1 436 13 is_stmt 0 view .LVU492
 1550 01ab 41D1FE   		sarl	%r14d
 1551              	.LVL142:
 436:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 1552              		.loc 1 436 13 view .LVU493
 1553 01ae 75E8     		jne	.L134
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1554              		.loc 1 382 47 is_stmt 1 view .LVU494
 1555              	.LVL143:
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1556              		.loc 1 382 18 view .LVU495
 1557 01b0 4883C501 		addq	$1, %rbp
 1558              	.LVL144:
 382:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 1559              		.loc 1 382 3 is_stmt 0 view .LVU496
 1560 01b4 4139AFA0 		cmpl	%ebp, 416(%r15)
 1560      010000
 1561 01bb 0F8FC5FE 		jg	.L125
 1561      FFFF
 1562              	.LVL145:
 1563              	.L146:
 442:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1564              		.loc 1 442 1 view .LVU497
 1565 01c1 4883C438 		addq	$56, %rsp
 1566              		.cfi_remember_state
 1567              		.cfi_def_cfa_offset 56
 1568 01c5 B8010000 		movl	$1, %eax
 1568      00
 1569 01ca 5B       		popq	%rbx
 1570              		.cfi_def_cfa_offset 48
 1571 01cb 5D       		popq	%rbp
 1572              		.cfi_def_cfa_offset 40
 1573 01cc 415C     		popq	%r12
 1574              		.cfi_def_cfa_offset 32
 1575 01ce 415D     		popq	%r13
 1576              		.cfi_def_cfa_offset 24
 1577 01d0 415E     		popq	%r14
 1578              		.cfi_def_cfa_offset 16
 1579 01d2 415F     		popq	%r15
 1580              		.cfi_def_cfa_offset 8
 1581              	.LVL146:
 442:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1582              		.loc 1 442 1 view .LVU498
 1583 01d4 C3       		ret
 1584              	.LVL147:
 1585              		.p2align 4,,10
 1586 01d5 0F1F00   		.p2align 3
 1587              	.L132:
 1588              		.cfi_restore_state
 432:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 1589              		.loc 1 432 12 is_stmt 1 view .LVU499
 432:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 1590              		.loc 1 432 51 is_stmt 0 view .LVU500
 1591 01d8 430FB68C 		movzbl	240(%r15,%r9), %ecx
 1591      0FF00000 
 1591      00
 432:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 1592              		.loc 1 432 31 view .LVU501
 1593 01e1 BA010000 		movl	$1, %edx
 1593      00
 1594 01e6 48D3E2   		salq	%cl, %rdx
 432:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 1595              		.loc 1 432 58 view .LVU502
 1596 01e9 48D1FA   		sarq	%rdx
 432:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 1597              		.loc 1 432 15 view .LVU503
 1598 01ec 4139D2   		cmpl	%edx, %r10d
 1599 01ef 7E96     		jle	.L133
 433:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 1600              		.loc 1 433 2 is_stmt 1 view .LVU504
 433:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 1601              		.loc 1 433 26 is_stmt 0 view .LVU505
 1602 01f1 41834550 		addl	$8, 80(%r13)
 1602      08
 1603 01f6 EB8F     		jmp	.L133
 1604              	.LVL148:
 1605 01f8 0F1F8400 		.p2align 4,,10
 1605      00000000 
 1606              		.p2align 3
 1607              	.L128:
 410:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 1608              		.loc 1 410 4 view .LVU506
 1609 0200 29D8     		subl	%ebx, %eax
 411:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 1610              		.loc 1 411 2 view .LVU507
 1611 0202 BA010000 		movl	$1, %edx
 1611      00
 1612 0207 4C89FF   		movq	%r15, %rdi
 1613 020a 48894C24 		movq	%rcx, 24(%rsp)
 1613      18
 410:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 1614              		.loc 1 410 2 is_stmt 1 view .LVU508
 410:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 1615              		.loc 1 410 4 is_stmt 0 view .LVU509
 1616 020f 4189C4   		movl	%eax, %r12d
 1617              	.LVL149:
 411:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 1618              		.loc 1 411 2 is_stmt 1 view .LVU510
 412:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 1619              		.loc 1 412 5 is_stmt 0 view .LVU511
 1620 0212 498D5E03 		leaq	3(%r14), %rbx
 1621              	.LVL150:
 412:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 1622              		.loc 1 412 5 view .LVU512
 1623 0216 4531F6   		xorl	%r14d, %r14d
 1624              	.LVL151:
 411:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 1625              		.loc 1 411 2 view .LVU513
 1626 0219 E8000000 		call	arith_encode
 1626      00
 1627              	.LVL152:
 412:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 1628              		.loc 1 412 2 is_stmt 1 view .LVU514
 413:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 1629              		.loc 1 413 2 view .LVU515
 413:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 1630              		.loc 1 413 26 is_stmt 0 view .LVU516
 1631 021e 41C74550 		movl	$8, 80(%r13)
 1631      08000000 
 1632 0226 4C8B4C24 		movq	32(%rsp), %r9
 1632      20
 416:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 1633              		.loc 1 416 9 view .LVU517
 1634 022b 4531D2   		xorl	%r10d, %r10d
 413:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 1635              		.loc 1 413 26 view .LVU518
 1636 022e 488B4C24 		movq	24(%rsp), %rcx
 1636      18
 416:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 1637              		.loc 1 416 7 is_stmt 1 view .LVU519
 1638              	.LVL153:
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1639              		.loc 1 417 7 view .LVU520
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1640              		.loc 1 417 10 is_stmt 0 view .LVU521
 1641 0233 4183EC01 		subl	$1, %r12d
 1642              	.LVL154:
 417:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 1643              		.loc 1 417 10 view .LVU522
 1644 0237 0F8408FF 		je	.L130
 1644      FFFF
 1645              	.L150:
 418:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 1646              		.loc 1 418 2 view .LVU523
 1647 023d 4889DE   		movq	%rbx, %rsi
 1648 0240 BA010000 		movl	$1, %edx
 1648      00
 1649 0245 4C89FF   		movq	%r15, %rdi
 1650 0248 4C894C24 		movq	%r9, 32(%rsp)
 1650      20
 1651 024d 48894C24 		movq	%rcx, 24(%rsp)
 1651      18
 418:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 1652              		.loc 1 418 2 is_stmt 1 view .LVU524
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1653              		.loc 1 422 8 is_stmt 0 view .LVU525
 1654 0252 4589E6   		movl	%r12d, %r14d
 418:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 1655              		.loc 1 418 2 view .LVU526
 1656 0255 E8000000 		call	arith_encode
 1656      00
 1657              	.LVL155:
 419:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 1658              		.loc 1 419 2 is_stmt 1 view .LVU527
 420:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
 1659              		.loc 1 420 2 view .LVU528
 421:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 1660              		.loc 1 421 2 view .LVU529
 421:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 1661              		.loc 1 421 5 is_stmt 0 view .LVU530
 1662 025a 488B4C24 		movq	24(%rsp), %rcx
 1662      18
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1663              		.loc 1 422 8 view .LVU531
 1664 025f 4C8B4C24 		movq	32(%rsp), %r9
 1664      20
 419:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 1665              		.loc 1 419 4 view .LVU532
 1666 0264 41BA0100 		movl	$1, %r10d
 1666      0000
 421:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 1667              		.loc 1 421 5 view .LVU533
 1668 026a 488B5968 		movq	104(%rcx), %rbx
 1669              	.LVL156:
 421:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 1670              		.loc 1 421 5 view .LVU534
 1671 026e 4883C314 		addq	$20, %rbx
 1672              	.LVL157:
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1673              		.loc 1 422 2 is_stmt 1 view .LVU535
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1674              		.loc 1 422 8 view .LVU536
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1675              		.loc 1 422 8 is_stmt 0 view .LVU537
 1676 0272 41D1FE   		sarl	%r14d
 1677              	.LVL158:
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1678              		.loc 1 422 8 view .LVU538
 1679 0275 0F84CAFE 		je	.L130
 1679      FFFF
 1680              	.LVL159:
 1681 027b 0F1F4400 		.p2align 4,,10
 1681      00
 1682              		.p2align 3
 1683              	.L131:
 423:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 1684              		.loc 1 423 4 view .LVU539
 1685 0280 4889DE   		movq	%rbx, %rsi
 1686 0283 BA010000 		movl	$1, %edx
 1686      00
 1687 0288 4C89FF   		movq	%r15, %rdi
 1688 028b 4C894C24 		movq	%r9, 32(%rsp)
 1688      20
 1689 0290 44895424 		movl	%r10d, 24(%rsp)
 1689      18
 1690              	.LVL160:
 423:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 1691              		.loc 1 423 4 is_stmt 1 view .LVU540
 425:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 1692              		.loc 1 425 7 is_stmt 0 view .LVU541
 1693 0295 4883C301 		addq	$1, %rbx
 423:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 1694              		.loc 1 423 4 view .LVU542
 1695 0299 E8000000 		call	arith_encode
 1695      00
 1696              	.LVL161:
 424:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 1697              		.loc 1 424 4 is_stmt 1 view .LVU543
 424:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 1698              		.loc 1 424 6 is_stmt 0 view .LVU544
 1699 029e 448B5424 		movl	24(%rsp), %r10d
 1699      18
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1700              		.loc 1 422 8 view .LVU545
 1701 02a3 4C8B4C24 		movq	32(%rsp), %r9
 1701      20
 424:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 1702              		.loc 1 424 6 view .LVU546
 1703 02a8 4501D2   		addl	%r10d, %r10d
 1704              	.LVL162:
 425:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 1705              		.loc 1 425 4 is_stmt 1 view .LVU547
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1706              		.loc 1 422 8 view .LVU548
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1707              		.loc 1 422 8 is_stmt 0 view .LVU549
 1708 02ab 41D1FE   		sarl	%r14d
 1709              	.LVL163:
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1710              		.loc 1 422 8 view .LVU550
 1711 02ae 75D0     		jne	.L131
 1712 02b0 4589D6   		movl	%r10d, %r14d
 1713              	.LVL164:
 422:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 1714              		.loc 1 422 8 view .LVU551
 1715 02b3 41D1FE   		sarl	%r14d
 1716 02b6 E98AFEFF 		jmp	.L130
 1716      FF
 1717              	.LVL165:
 1718              	.L148:
 373:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 1719              		.loc 1 373 7 is_stmt 1 view .LVU552
 1720 02bb 488B5C24 		movq	8(%rsp), %rbx
 1720      08
 1721 02c0 8B7364   		movl	100(%rbx), %esi
 1722              	.LVL166:
 373:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 1723              		.loc 1 373 7 is_stmt 0 view .LVU553
 1724 02c3 E8000000 		call	emit_restart
 1724      00
 1725              	.LVL167:
 374:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 1726              		.loc 1 374 7 is_stmt 1 view .LVU554
 375:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 1727              		.loc 1 375 32 is_stmt 0 view .LVU555
 1728 02c8 8B4B64   		movl	100(%rbx), %ecx
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1729              		.loc 1 378 28 view .LVU556
 1730 02cb 488B7424 		movq	8(%rsp), %rsi
 1730      08
 374:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 1731              		.loc 1 374 38 view .LVU557
 1732 02d0 418B873C 		movl	316(%r15), %eax
 1732      010000
 375:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 1733              		.loc 1 375 7 is_stmt 1 view .LVU558
 376:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1734              		.loc 1 376 7 view .LVU559
 375:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 1735              		.loc 1 375 32 is_stmt 0 view .LVU560
 1736 02d7 8D5101   		leal	1(%rcx), %edx
 1737 02da 894C2418 		movl	%ecx, 24(%rsp)
 376:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1738              		.loc 1 376 33 view .LVU561
 1739 02de 83E207   		andl	$7, %edx
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1740              		.loc 1 378 28 view .LVU562
 1741 02e1 83E801   		subl	$1, %eax
 376:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1742              		.loc 1 376 33 view .LVU563
 1743 02e4 895364   		movl	%edx, 100(%rbx)
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1744              		.loc 1 378 5 is_stmt 1 view .LVU564
 378:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1745              		.loc 1 378 28 is_stmt 0 view .LVU565
 1746 02e7 894660   		movl	%eax, 96(%rsi)
 1747 02ea E957FDFF 		jmp	.L123
 1747      FF
 1748              		.cfi_endproc
 1749              	.LFE55:
 1751              		.section	.text.encode_mcu_AC_first,"ax",@progbits
 1752              		.p2align 4
 1754              	encode_mcu_AC_first:
 1755              	.LVL168:
 1756              	.LFB56:
 452:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1757              		.loc 1 452 1 is_stmt 1 view -0
 1758              		.cfi_startproc
 452:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1759              		.loc 1 452 1 is_stmt 0 view .LVU567
 1760 0000 F30F1EFA 		endbr64
 453:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 1761              		.loc 1 453 3 is_stmt 1 view .LVU568
 452:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 1762              		.loc 1 452 1 is_stmt 0 view .LVU569
 1763 0004 4157     		pushq	%r15
 1764              		.cfi_def_cfa_offset 16
 1765              		.cfi_offset 15, -16
 1766 0006 4156     		pushq	%r14
 1767              		.cfi_def_cfa_offset 24
 1768              		.cfi_offset 14, -24
 1769 0008 4155     		pushq	%r13
 1770              		.cfi_def_cfa_offset 32
 1771              		.cfi_offset 13, -32
 1772 000a 4989FD   		movq	%rdi, %r13
 1773 000d 4154     		pushq	%r12
 1774              		.cfi_def_cfa_offset 40
 1775              		.cfi_offset 12, -40
 1776 000f 55       		pushq	%rbp
 1777              		.cfi_def_cfa_offset 48
 1778              		.cfi_offset 6, -48
 1779 0010 53       		pushq	%rbx
 1780              		.cfi_def_cfa_offset 56
 1781              		.cfi_offset 3, -56
 1782 0011 4889F3   		movq	%rsi, %rbx
 1783 0014 4883EC48 		subq	$72, %rsp
 1784              		.cfi_def_cfa_offset 128
 453:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 1785              		.loc 1 453 21 view .LVU570
 1786 0018 488B8730 		movq	560(%rdi), %rax
 1786      020000
 461:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1787              		.loc 1 461 6 view .LVU571
 1788 001f 8B973C01 		movl	316(%rdi), %edx
 1788      0000
 453:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 1789              		.loc 1 453 21 view .LVU572
 1790 0025 48894424 		movq	%rax, 40(%rsp)
 1790      28
 1791              	.LVL169:
 454:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 1792              		.loc 1 454 3 is_stmt 1 view .LVU573
 455:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 1793              		.loc 1 455 3 view .LVU574
 456:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke;
 1794              		.loc 1 456 3 view .LVU575
 457:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 1795              		.loc 1 457 3 view .LVU576
 458:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1796              		.loc 1 458 3 view .LVU577
 461:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1797              		.loc 1 461 3 view .LVU578
 461:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 1798              		.loc 1 461 6 is_stmt 0 view .LVU579
 1799 002a 85D2     		testl	%edx, %edx
 1800 002c 7416     		je	.L152
 462:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1801              		.loc 1 462 5 is_stmt 1 view .LVU580
 462:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1802              		.loc 1 462 16 is_stmt 0 view .LVU581
 1803 002e 8B4060   		movl	96(%rax), %eax
 1804              	.LVL170:
 462:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 1805              		.loc 1 462 8 view .LVU582
 1806 0031 85C0     		testl	%eax, %eax
 1807 0033 0F84AF02 		je	.L195
 1807      0000
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1808              		.loc 1 468 5 is_stmt 1 view .LVU583
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1809              		.loc 1 468 28 is_stmt 0 view .LVU584
 1810 0039 488B7C24 		movq	40(%rsp), %rdi
 1810      28
 1811              	.LVL171:
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 1812              		.loc 1 468 28 view .LVU585
 1813 003e 83E801   		subl	$1, %eax
 1814 0041 894760   		movl	%eax, 96(%rdi)
 1815              	.LVL172:
 1816              	.L152:
 471:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1817              		.loc 1 471 3 is_stmt 1 view .LVU586
 475:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1818              		.loc 1 475 7 is_stmt 0 view .LVU587
 1819 0044 498B8578 		movq	376(%r13), %rax
 1819      010000
 471:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1820              		.loc 1 471 17 view .LVU588
 1821 004b 4D8B85E0 		movq	480(%r13), %r8
 1821      010000
 474:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 1822              		.loc 1 474 9 view .LVU589
 1823 0052 4C8B33   		movq	(%rbx), %r14
 1824 0055 418B8DD8 		movl	472(%r13), %ecx
 1824      010000
 475:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1825              		.loc 1 475 7 view .LVU590
 1826 005c 8B4018   		movl	24(%rax), %eax
 471:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1827              		.loc 1 471 17 view .LVU591
 1828 005f 4C894424 		movq	%r8, 16(%rsp)
 1828      10
 1829              	.LVL173:
 474:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 1830              		.loc 1 474 3 is_stmt 1 view .LVU592
 475:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1831              		.loc 1 475 3 view .LVU593
 475:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1832              		.loc 1 475 7 is_stmt 0 view .LVU594
 1833 0064 89442434 		movl	%eax, 52(%rsp)
 1834              	.LVL174:
 480:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 1835              		.loc 1 480 3 is_stmt 1 view .LVU595
 480:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 1836              		.loc 1 480 6 is_stmt 0 view .LVU596
 1837 0068 496385D0 		movslq	464(%r13), %rax
 1837      010000
 1838              	.LVL175:
 480:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 1839              		.loc 1 480 6 view .LVU597
 1840 006f 4889C6   		movq	%rax, %rsi
 1841              	.LVL176:
 480:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 1842              		.loc 1 480 6 view .LVU598
 1843 0072 EB0E     		jmp	.L157
 1844              	.LVL177:
 1845              		.p2align 4,,10
 1846 0074 0F1F4000 		.p2align 3
 1847              	.L196:
 492:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1848              		.loc 1 492 11 is_stmt 1 view .LVU599
 492:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1849              		.loc 1 492 11 is_stmt 0 view .LVU600
 1850 0078 4883E801 		subq	$1, %rax
 1851              	.LVL178:
 492:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1852              		.loc 1 492 11 view .LVU601
 1853 007c 89C7     		movl	%eax, %edi
 1854              	.LVL179:
 492:fltk-1.3.4-1/jpeg/jcarith.c **** 
 1855              		.loc 1 492 3 view .LVU602
 1856 007e 85C0     		testl	%eax, %eax
 1857 0080 7417     		je	.L191
 1858              	.L157:
 486:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1859              		.loc 1 486 22 view .LVU603
 1860 0082 49631480 		movslq	(%r8,%rax,4), %rdx
 1861 0086 89C7     		movl	%eax, %edi
 1862              	.LVL180:
 481:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 1863              		.loc 1 481 3 is_stmt 1 view .LVU604
 486:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1864              		.loc 1 486 5 view .LVU605
 486:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1865              		.loc 1 486 12 is_stmt 0 view .LVU606
 1866 0088 410FBF14 		movswl	(%r14,%rdx,2), %edx
 1866      56
 1867              	.LVL181:
 486:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1868              		.loc 1 486 8 view .LVU607
 1869 008d 85D2     		testl	%edx, %edx
 1870 008f 7902     		jns	.L194
 489:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1871              		.loc 1 489 7 is_stmt 1 view .LVU608
 489:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 1872              		.loc 1 489 9 is_stmt 0 view .LVU609
 1873 0091 F7DA     		negl	%edx
 1874              	.LVL182:
 1875              	.L194:
 490:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1876              		.loc 1 490 7 is_stmt 1 view .LVU610
 490:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1877              		.loc 1 490 13 is_stmt 0 view .LVU611
 1878 0093 D3FA     		sarl	%cl, %edx
 1879              	.LVL183:
 490:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1880              		.loc 1 490 10 view .LVU612
 1881 0095 85D2     		testl	%edx, %edx
 1882 0097 74DF     		je	.L196
 1883              	.LVL184:
 1884              	.L191:
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1885              		.loc 1 495 10 view .LVU613
 1886 0099 418B85CC 		movl	460(%r13), %eax
 1886      010000
 1887 00a0 897C2430 		movl	%edi, 48(%rsp)
 1888              	.LVL185:
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1889              		.loc 1 495 3 is_stmt 1 view .LVU614
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1890              		.loc 1 495 10 is_stmt 0 view .LVU615
 1891 00a4 8D68FF   		leal	-1(%rax), %ebp
 1892              	.LVL186:
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1893              		.loc 1 495 27 is_stmt 1 view .LVU616
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1894              		.loc 1 495 3 is_stmt 0 view .LVU617
 1895 00a7 396C2430 		cmpl	%ebp, 48(%rsp)
 1896 00ab 0F8EEC00 		jle	.L158
 1896      0000
 1897 00b1 48634424 		movslq	52(%rsp), %rax
 1897      34
 1898 00b6 488B7C24 		movq	40(%rsp), %rdi
 1898      28
 1899              	.LVL187:
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 1900              		.loc 1 495 3 view .LVU618
 1901 00bb 4D89EF   		movq	%r13, %r15
 1902 00be 48894424 		movq	%rax, 56(%rsp)
 1902      38
 1903 00c3 488D8F68 		leaq	360(%rdi), %rcx
 1903      010000
 1904 00ca 488D04C7 		leaq	(%rdi,%rax,8), %rax
 1905 00ce 48894C24 		movq	%rcx, 24(%rsp)
 1905      18
 1906 00d3 48894424 		movq	%rax, 8(%rsp)
 1906      08
 1907              	.LVL188:
 1908 00d8 0F1F8400 		.p2align 4,,10
 1908      00000000 
 1909              		.p2align 3
 1910              	.L170:
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 1911              		.loc 1 496 5 is_stmt 1 view .LVU619
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 1912              		.loc 1 496 8 is_stmt 0 view .LVU620
 1913 00e0 488B4424 		movq	8(%rsp), %rax
 1913      08
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 1914              		.loc 1 496 37 view .LVU621
 1915 00e5 448D6C6D 		leal	0(%rbp,%rbp,2), %r13d
 1915      00
 497:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 1916              		.loc 1 497 5 view .LVU622
 1917 00ea 31D2     		xorl	%edx, %edx
 1918 00ec 83C501   		addl	$1, %ebp
 1919              	.LVL189:
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 1920              		.loc 1 496 37 view .LVU623
 1921 00ef 4D63ED   		movslq	%r13d, %r13
 497:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 1922              		.loc 1 497 5 view .LVU624
 1923 00f2 4C89FF   		movq	%r15, %rdi
 1924 00f5 4C63E5   		movslq	%ebp, %r12
 496:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 0);		/* EOB decision */
 1925              		.loc 1 496 8 view .LVU625
 1926 00f8 4C03A8E8 		addq	232(%rax), %r13
 1926      000000
 1927              	.LVL190:
 497:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 1928              		.loc 1 497 5 is_stmt 1 view .LVU626
 1929 00ff 4C89EE   		movq	%r13, %rsi
 1930 0102 E8000000 		call	arith_encode
 1930      00
 1931              	.LVL191:
 1932 0107 488B6C24 		movq	16(%rsp), %rbp
 1932      10
 1933              	.LVL192:
 497:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 1934              		.loc 1 497 5 is_stmt 0 view .LVU627
 1935 010c EB22     		jmp	.L162
 1936              	.LVL193:
 1937 010e 6690     		.p2align 4,,10
 1938              		.p2align 3
 1939              	.L198:
 500:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1940              		.loc 1 500 2 is_stmt 1 view .LVU628
 500:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1941              		.loc 1 500 8 is_stmt 0 view .LVU629
 1942 0110 D3FB     		sarl	%cl, %ebx
 1943              	.LVL194:
 500:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1944              		.loc 1 500 5 view .LVU630
 1945 0112 85DB     		testl	%ebx, %ebx
 1946 0114 0F85A600 		jne	.L197
 1946      0000
 1947              	.L160:
 513:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 1948              		.loc 1 513 7 is_stmt 1 view .LVU631
 1949 011a 498D7501 		leaq	1(%r13), %rsi
 1950 011e 31D2     		xorl	%edx, %edx
 1951 0120 4C89FF   		movq	%r15, %rdi
 514:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1952              		.loc 1 514 10 is_stmt 0 view .LVU632
 1953 0123 4983C503 		addq	$3, %r13
 1954              	.LVL195:
 513:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 1955              		.loc 1 513 7 view .LVU633
 1956 0127 E8000000 		call	arith_encode
 1956      00
 1957              	.LVL196:
 514:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 1958              		.loc 1 514 7 is_stmt 1 view .LVU634
 498:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 1959              		.loc 1 498 11 view .LVU635
 1960 012c 4983C401 		addq	$1, %r12
 1961              	.LVL197:
 1962              	.L162:
 498:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 1963              		.loc 1 498 5 view .LVU636
 499:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1964              		.loc 1 499 7 view .LVU637
 499:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1965              		.loc 1 499 24 is_stmt 0 view .LVU638
 1966 0130 4A6344A5 		movslq	0(%rbp,%r12,4), %rax
 1966      00
 1967 0135 418B8FD8 		movl	472(%r15), %ecx
 1967      010000
 499:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1968              		.loc 1 499 14 view .LVU639
 1969 013c 410FBF1C 		movswl	(%r14,%rax,2), %ebx
 1969      46
 1970              	.LVL198:
 499:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1971              		.loc 1 499 10 view .LVU640
 1972 0141 85DB     		testl	%ebx, %ebx
 1973 0143 79CB     		jns	.L198
 506:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1974              		.loc 1 506 2 is_stmt 1 view .LVU641
 506:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 1975              		.loc 1 506 4 is_stmt 0 view .LVU642
 1976 0145 F7DB     		negl	%ebx
 1977              	.LVL199:
 507:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1978              		.loc 1 507 2 is_stmt 1 view .LVU643
 507:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1979              		.loc 1 507 8 is_stmt 0 view .LVU644
 1980 0147 D3FB     		sarl	%cl, %ebx
 1981              	.LVL200:
 507:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st + 1, 1);
 1982              		.loc 1 507 5 view .LVU645
 1983 0149 85DB     		testl	%ebx, %ebx
 1984 014b 74CD     		je	.L160
 508:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 1);
 1985              		.loc 1 508 4 view .LVU646
 1986 014d 498D7501 		leaq	1(%r13), %rsi
 1987 0151 BA010000 		movl	$1, %edx
 1987      00
 1988 0156 4C89FF   		movq	%r15, %rdi
 1989 0159 4489E5   		movl	%r12d, %ebp
 508:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 1);
 1990              		.loc 1 508 4 is_stmt 1 view .LVU647
 1991 015c E8000000 		call	arith_encode
 1991      00
 1992              	.LVL201:
 509:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 1993              		.loc 1 509 4 view .LVU648
 1994 0161 488B7424 		movq	24(%rsp), %rsi
 1994      18
 1995 0166 4C89FF   		movq	%r15, %rdi
 516:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.8: Encoding the magnitude category of v */
 1996              		.loc 1 516 8 is_stmt 0 view .LVU649
 1997 0169 4983C502 		addq	$2, %r13
 1998              	.LVL202:
 509:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 1999              		.loc 1 509 4 view .LVU650
 2000 016d BA010000 		movl	$1, %edx
 2000      00
 2001 0172 E8000000 		call	arith_encode
 2001      00
 2002              	.LVL203:
 510:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 2003              		.loc 1 510 4 is_stmt 1 view .LVU651
 516:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.8: Encoding the magnitude category of v */
 2004              		.loc 1 516 5 view .LVU652
 518:fltk-1.3.4-1/jpeg/jcarith.c ****     if (v -= 1) {
 2005              		.loc 1 518 5 view .LVU653
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2006              		.loc 1 519 5 view .LVU654
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2007              		.loc 1 519 8 is_stmt 0 view .LVU655
 2008 0177 83EB01   		subl	$1, %ebx
 2009              	.LVL204:
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2010              		.loc 1 519 8 view .LVU656
 2011 017a 7570     		jne	.L199
 2012              	.LVL205:
 2013              	.L163:
 535:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.9: Encoding the magnitude bit pattern of v */
 2014              		.loc 1 535 5 is_stmt 1 view .LVU657
 2015 017c 31D2     		xorl	%edx, %edx
 2016 017e 4C89EE   		movq	%r13, %rsi
 2017 0181 4C89FF   		movq	%r15, %rdi
 2018 0184 E8000000 		call	arith_encode
 2018      00
 2019              	.LVL206:
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2020              		.loc 1 537 5 view .LVU658
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2021              		.loc 1 538 5 view .LVU659
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2022              		.loc 1 538 11 view .LVU660
 2023              	.L168:
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2024              		.loc 1 495 27 view .LVU661
 495:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2025              		.loc 1 495 3 is_stmt 0 view .LVU662
 2026 0189 396C2430 		cmpl	%ebp, 48(%rsp)
 2027 018d 0F8F4DFF 		jg	.L170
 2027      FFFF
 2028 0193 418BB7D0 		movl	464(%r15), %esi
 2028      010000
 2029 019a 4D89FD   		movq	%r15, %r13
 2030              	.LVL207:
 2031              	.L158:
 542:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2032              		.loc 1 542 3 is_stmt 1 view .LVU663
 542:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2033              		.loc 1 542 6 is_stmt 0 view .LVU664
 2034 019d 39F5     		cmpl	%esi, %ebp
 2035 019f 0F8C1801 		jl	.L200
 2035      0000
 2036              	.L177:
 548:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2037              		.loc 1 548 1 view .LVU665
 2038 01a5 4883C448 		addq	$72, %rsp
 2039              		.cfi_remember_state
 2040              		.cfi_def_cfa_offset 56
 2041 01a9 B8010000 		movl	$1, %eax
 2041      00
 2042 01ae 5B       		popq	%rbx
 2043              		.cfi_def_cfa_offset 48
 2044 01af 5D       		popq	%rbp
 2045              		.cfi_def_cfa_offset 40
 2046              	.LVL208:
 548:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2047              		.loc 1 548 1 view .LVU666
 2048 01b0 415C     		popq	%r12
 2049              		.cfi_def_cfa_offset 32
 2050 01b2 415D     		popq	%r13
 2051              		.cfi_def_cfa_offset 24
 2052              	.LVL209:
 548:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2053              		.loc 1 548 1 view .LVU667
 2054 01b4 415E     		popq	%r14
 2055              		.cfi_def_cfa_offset 16
 2056              	.LVL210:
 548:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2057              		.loc 1 548 1 view .LVU668
 2058 01b6 415F     		popq	%r15
 2059              		.cfi_def_cfa_offset 8
 2060 01b8 C3       		ret
 2061              	.LVL211:
 2062 01b9 0F1F8000 		.p2align 4,,10
 2062      000000
 2063              		.p2align 3
 2064              	.L197:
 2065              		.cfi_restore_state
 501:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 0);
 2066              		.loc 1 501 4 view .LVU669
 2067 01c0 498D7501 		leaq	1(%r13), %rsi
 2068 01c4 BA010000 		movl	$1, %edx
 2068      00
 2069 01c9 4C89FF   		movq	%r15, %rdi
 2070 01cc 4489E5   		movl	%r12d, %ebp
 501:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, entropy->fixed_bin, 0);
 2071              		.loc 1 501 4 is_stmt 1 view .LVU670
 2072 01cf E8000000 		call	arith_encode
 2072      00
 2073              	.LVL212:
 502:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 2074              		.loc 1 502 4 view .LVU671
 2075 01d4 488B7424 		movq	24(%rsp), %rsi
 2075      18
 2076 01d9 31D2     		xorl	%edx, %edx
 2077 01db 4C89FF   		movq	%r15, %rdi
 516:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.8: Encoding the magnitude category of v */
 2078              		.loc 1 516 8 is_stmt 0 view .LVU672
 2079 01de 4983C502 		addq	$2, %r13
 2080              	.LVL213:
 502:fltk-1.3.4-1/jpeg/jcarith.c **** 	  break;
 2081              		.loc 1 502 4 view .LVU673
 2082 01e2 E8000000 		call	arith_encode
 2082      00
 2083              	.LVL214:
 503:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 2084              		.loc 1 503 4 is_stmt 1 view .LVU674
 516:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.8: Encoding the magnitude category of v */
 2085              		.loc 1 516 5 view .LVU675
 518:fltk-1.3.4-1/jpeg/jcarith.c ****     if (v -= 1) {
 2086              		.loc 1 518 5 view .LVU676
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2087              		.loc 1 519 5 view .LVU677
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2088              		.loc 1 519 8 is_stmt 0 view .LVU678
 2089 01e7 83EB01   		subl	$1, %ebx
 2090              	.LVL215:
 519:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 2091              		.loc 1 519 8 view .LVU679
 2092 01ea 7490     		je	.L163
 2093              	.LVL216:
 2094              	.L199:
 520:fltk-1.3.4-1/jpeg/jcarith.c ****       m = 1;
 2095              		.loc 1 520 7 is_stmt 1 view .LVU680
 2096 01ec BA010000 		movl	$1, %edx
 2096      00
 2097 01f1 4C89EE   		movq	%r13, %rsi
 2098 01f4 4C89FF   		movq	%r15, %rdi
 2099 01f7 E8000000 		call	arith_encode
 2099      00
 2100              	.LVL217:
 521:fltk-1.3.4-1/jpeg/jcarith.c ****       v2 = v;
 2101              		.loc 1 521 7 view .LVU681
 522:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v2 >>= 1) {
 2102              		.loc 1 522 7 view .LVU682
 523:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 2103              		.loc 1 523 7 view .LVU683
 523:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 2104              		.loc 1 523 10 is_stmt 0 view .LVU684
 2105 01fc 89D8     		movl	%ebx, %eax
 2106 01fe D1E8     		shrl	%eax
 2107 0200 0F8476FF 		je	.L163
 2107      FFFF
 524:fltk-1.3.4-1/jpeg/jcarith.c **** 	m <<= 1;
 2108              		.loc 1 524 2 is_stmt 1 view .LVU685
 2109 0206 4C89EE   		movq	%r13, %rsi
 2110 0209 BA010000 		movl	$1, %edx
 2110      00
 2111 020e 4C89FF   		movq	%r15, %rdi
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2112              		.loc 1 528 8 is_stmt 0 view .LVU686
 2113 0211 4189DD   		movl	%ebx, %r13d
 524:fltk-1.3.4-1/jpeg/jcarith.c **** 	m <<= 1;
 2114              		.loc 1 524 2 view .LVU687
 2115 0214 E8000000 		call	arith_encode
 2115      00
 2116              	.LVL218:
 525:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->ac_stats[tbl] +
 2117              		.loc 1 525 2 is_stmt 1 view .LVU688
 526:fltk-1.3.4-1/jpeg/jcarith.c **** 	     (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 2118              		.loc 1 526 2 view .LVU689
 527:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 2119              		.loc 1 527 30 is_stmt 0 view .LVU690
 2120 0219 488B4424 		movq	56(%rsp), %rax
 2120      38
 527:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 2121              		.loc 1 527 42 view .LVU691
 2122 021e BEBD0000 		movl	$189, %esi
 2122      00
 527:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 2123              		.loc 1 527 30 view .LVU692
 2124 0223 410FB694 		movzbl	256(%r15,%rax), %edx
 2124      07000100 
 2124      00
 526:fltk-1.3.4-1/jpeg/jcarith.c **** 	     (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 2125              		.loc 1 526 5 view .LVU693
 2126 022c 488B4424 		movq	8(%rsp), %rax
 2126      08
 527:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 2127              		.loc 1 527 42 view .LVU694
 2128 0231 39EA     		cmpl	%ebp, %edx
 2129 0233 BAD90000 		movl	$217, %edx
 2129      00
 2130 0238 480F4CF2 		cmovl	%rdx, %rsi
 526:fltk-1.3.4-1/jpeg/jcarith.c **** 	     (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 2131              		.loc 1 526 5 view .LVU695
 2132 023c 4803B0E8 		addq	232(%rax), %rsi
 2132      000000
 2133              	.LVL219:
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2134              		.loc 1 528 2 is_stmt 1 view .LVU696
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2135              		.loc 1 528 8 view .LVU697
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2136              		.loc 1 528 8 is_stmt 0 view .LVU698
 2137 0243 41C1FD02 		sarl	$2, %r13d
 2138              	.LVL220:
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2139              		.loc 1 528 8 view .LVU699
 2140 0247 0F84D500 		je	.L165
 2140      0000
 525:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->ac_stats[tbl] +
 2141              		.loc 1 525 4 view .LVU700
 2142 024d 895C2420 		movl	%ebx, 32(%rsp)
 2143 0251 41BC0200 		movl	$2, %r12d
 2143      0000
 2144 0257 4889F3   		movq	%rsi, %rbx
 2145              	.LVL221:
 2146 025a 660F1F44 		.p2align 4,,10
 2146      0000
 2147              		.p2align 3
 2148              	.L166:
 529:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 2149              		.loc 1 529 4 is_stmt 1 view .LVU701
 2150 0260 4889DE   		movq	%rbx, %rsi
 2151 0263 BA010000 		movl	$1, %edx
 2151      00
 2152 0268 4C89FF   		movq	%r15, %rdi
 530:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 2153              		.loc 1 530 6 is_stmt 0 view .LVU702
 2154 026b 4501E4   		addl	%r12d, %r12d
 2155              	.LVL222:
 529:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 2156              		.loc 1 529 4 view .LVU703
 2157 026e E8000000 		call	arith_encode
 2157      00
 2158              	.LVL223:
 530:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 2159              		.loc 1 530 4 is_stmt 1 view .LVU704
 531:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 2160              		.loc 1 531 4 view .LVU705
 2161 0273 4889D8   		movq	%rbx, %rax
 531:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 2162              		.loc 1 531 7 is_stmt 0 view .LVU706
 2163 0276 4883C301 		addq	$1, %rbx
 2164              	.LVL224:
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2165              		.loc 1 528 8 is_stmt 1 view .LVU707
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2166              		.loc 1 528 8 is_stmt 0 view .LVU708
 2167 027a 41D1FD   		sarl	%r13d
 2168              	.LVL225:
 528:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 2169              		.loc 1 528 8 view .LVU709
 2170 027d 75E1     		jne	.L166
 2171 027f 4889DE   		movq	%rbx, %rsi
 2172 0282 4989C5   		movq	%rax, %r13
 2173              	.LVL226:
 535:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.9: Encoding the magnitude bit pattern of v */
 2174              		.loc 1 535 5 is_stmt 1 view .LVU710
 2175 0285 31D2     		xorl	%edx, %edx
 2176 0287 4C89FF   		movq	%r15, %rdi
 2177 028a 8B5C2420 		movl	32(%rsp), %ebx
 2178              	.LVL227:
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2179              		.loc 1 537 8 is_stmt 0 view .LVU711
 2180 028e 4983C50F 		addq	$15, %r13
 535:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.9: Encoding the magnitude bit pattern of v */
 2181              		.loc 1 535 5 view .LVU712
 2182 0292 E8000000 		call	arith_encode
 2182      00
 2183              	.LVL228:
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2184              		.loc 1 537 5 is_stmt 1 view .LVU713
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2185              		.loc 1 538 5 view .LVU714
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2186              		.loc 1 538 11 view .LVU715
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2187              		.loc 1 538 11 is_stmt 0 view .LVU716
 2188 0297 41D1FC   		sarl	%r12d
 2189              	.LVL229:
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2190              		.loc 1 538 11 view .LVU717
 2191 029a 0F84E9FE 		je	.L168
 2191      FFFF
 2192              		.p2align 4,,10
 2193              		.p2align 3
 2194              	.L167:
 539:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2195              		.loc 1 539 7 is_stmt 1 view .LVU718
 2196 02a0 31D2     		xorl	%edx, %edx
 2197 02a2 4485E3   		testl	%r12d, %ebx
 2198 02a5 4C89EE   		movq	%r13, %rsi
 2199 02a8 4C89FF   		movq	%r15, %rdi
 2200 02ab 0F95C2   		setne	%dl
 2201 02ae E8000000 		call	arith_encode
 2201      00
 2202              	.LVL230:
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2203              		.loc 1 538 11 view .LVU719
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2204              		.loc 1 538 11 is_stmt 0 view .LVU720
 2205 02b3 41D1FC   		sarl	%r12d
 2206              	.LVL231:
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2207              		.loc 1 538 11 view .LVU721
 2208 02b6 75E8     		jne	.L167
 2209 02b8 E9CCFEFF 		jmp	.L168
 2209      FF
 2210              	.LVL232:
 2211              	.L200:
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2212              		.loc 1 543 5 is_stmt 1 view .LVU722
 544:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2213              		.loc 1 544 5 view .LVU723
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2214              		.loc 1 543 8 is_stmt 0 view .LVU724
 2215 02bd 488B7C24 		movq	40(%rsp), %rdi
 2215      28
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2216              		.loc 1 543 27 view .LVU725
 2217 02c2 48634424 		movslq	52(%rsp), %rax
 2217      34
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2218              		.loc 1 543 37 view .LVU726
 2219 02c7 8D746D00 		leal	0(%rbp,%rbp,2), %esi
 544:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2220              		.loc 1 544 5 view .LVU727
 2221 02cb BA010000 		movl	$1, %edx
 2221      00
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2222              		.loc 1 543 37 view .LVU728
 2223 02d0 4863F6   		movslq	%esi, %rsi
 543:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2224              		.loc 1 543 8 view .LVU729
 2225 02d3 4803B4C7 		addq	232(%rdi,%rax,8), %rsi
 2225      E8000000 
 544:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2226              		.loc 1 544 5 view .LVU730
 2227 02db 4C89EF   		movq	%r13, %rdi
 2228 02de E8000000 		call	arith_encode
 2228      00
 2229              	.LVL233:
 547:fltk-1.3.4-1/jpeg/jcarith.c **** }
 2230              		.loc 1 547 3 is_stmt 1 view .LVU731
 547:fltk-1.3.4-1/jpeg/jcarith.c **** }
 2231              		.loc 1 547 10 is_stmt 0 view .LVU732
 2232 02e3 E9BDFEFF 		jmp	.L177
 2232      FF
 2233              	.LVL234:
 2234              	.L195:
 463:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2235              		.loc 1 463 7 is_stmt 1 view .LVU733
 2236 02e8 4C8B7424 		movq	40(%rsp), %r14
 2236      28
 2237 02ed 4C89EF   		movq	%r13, %rdi
 2238              	.LVL235:
 463:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2239              		.loc 1 463 7 is_stmt 0 view .LVU734
 2240 02f0 418B7664 		movl	100(%r14), %esi
 2241 02f4 E8000000 		call	emit_restart
 2241      00
 2242              	.LVL236:
 464:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2243              		.loc 1 464 7 is_stmt 1 view .LVU735
 465:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2244              		.loc 1 465 32 is_stmt 0 view .LVU736
 2245 02f9 418B4E64 		movl	100(%r14), %ecx
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2246              		.loc 1 468 28 view .LVU737
 2247 02fd 488B7C24 		movq	40(%rsp), %rdi
 2247      28
 464:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2248              		.loc 1 464 38 view .LVU738
 2249 0302 418B853C 		movl	316(%r13), %eax
 2249      010000
 465:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2250              		.loc 1 465 7 is_stmt 1 view .LVU739
 466:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2251              		.loc 1 466 7 view .LVU740
 465:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2252              		.loc 1 465 32 is_stmt 0 view .LVU741
 2253 0309 8D5101   		leal	1(%rcx), %edx
 2254 030c 894C2430 		movl	%ecx, 48(%rsp)
 466:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2255              		.loc 1 466 33 view .LVU742
 2256 0310 83E207   		andl	$7, %edx
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2257              		.loc 1 468 28 view .LVU743
 2258 0313 83E801   		subl	$1, %eax
 466:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2259              		.loc 1 466 33 view .LVU744
 2260 0316 41895664 		movl	%edx, 100(%r14)
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2261              		.loc 1 468 5 is_stmt 1 view .LVU745
 468:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2262              		.loc 1 468 28 is_stmt 0 view .LVU746
 2263 031a 894760   		movl	%eax, 96(%rdi)
 2264 031d E922FDFF 		jmp	.L152
 2264      FF
 2265              	.LVL237:
 2266              	.L165:
 535:fltk-1.3.4-1/jpeg/jcarith.c ****     /* Figure F.9: Encoding the magnitude bit pattern of v */
 2267              		.loc 1 535 5 is_stmt 1 view .LVU747
 2268 0322 31D2     		xorl	%edx, %edx
 2269 0324 4C89FF   		movq	%r15, %rdi
 2270 0327 48897424 		movq	%rsi, 32(%rsp)
 2270      20
 2271 032c E8000000 		call	arith_encode
 2271      00
 2272              	.LVL238:
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2273              		.loc 1 537 5 view .LVU748
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2274              		.loc 1 538 5 view .LVU749
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2275              		.loc 1 538 11 view .LVU750
 539:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2276              		.loc 1 539 7 view .LVU751
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2277              		.loc 1 537 8 is_stmt 0 view .LVU752
 2278 0331 488B7424 		movq	32(%rsp), %rsi
 2278      20
 539:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2279              		.loc 1 539 7 view .LVU753
 2280 0336 89DA     		movl	%ebx, %edx
 2281 0338 4C89FF   		movq	%r15, %rdi
 2282 033b 83E201   		andl	$1, %edx
 537:fltk-1.3.4-1/jpeg/jcarith.c ****     while (m >>= 1)
 2283              		.loc 1 537 8 view .LVU754
 2284 033e 4883C60E 		addq	$14, %rsi
 2285              	.LVL239:
 539:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2286              		.loc 1 539 7 view .LVU755
 2287 0342 E8000000 		call	arith_encode
 2287      00
 2288              	.LVL240:
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2289              		.loc 1 538 11 is_stmt 1 view .LVU756
 538:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, (m & v) ? 1 : 0);
 2290              		.loc 1 538 11 is_stmt 0 view .LVU757
 2291 0347 E93DFEFF 		jmp	.L168
 2291      FF
 2292              		.cfi_endproc
 2293              	.LFE56:
 2295              		.section	.text.encode_mcu_DC_refine,"ax",@progbits
 2296              		.p2align 4
 2298              	encode_mcu_DC_refine:
 2299              	.LVL241:
 2300              	.LFB57:
 559:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2301              		.loc 1 559 1 is_stmt 1 view -0
 2302              		.cfi_startproc
 559:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2303              		.loc 1 559 1 is_stmt 0 view .LVU759
 2304 0000 F30F1EFA 		endbr64
 560:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 2305              		.loc 1 560 3 is_stmt 1 view .LVU760
 559:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2306              		.loc 1 559 1 is_stmt 0 view .LVU761
 2307 0004 4156     		pushq	%r14
 2308              		.cfi_def_cfa_offset 16
 2309              		.cfi_offset 14, -16
 2310 0006 4989F6   		movq	%rsi, %r14
 2311 0009 4155     		pushq	%r13
 2312              		.cfi_def_cfa_offset 24
 2313              		.cfi_offset 13, -24
 2314 000b 4989FD   		movq	%rdi, %r13
 2315 000e 4154     		pushq	%r12
 2316              		.cfi_def_cfa_offset 32
 2317              		.cfi_offset 12, -32
 2318 0010 55       		pushq	%rbp
 2319              		.cfi_def_cfa_offset 40
 2320              		.cfi_offset 6, -40
 2321 0011 53       		pushq	%rbx
 2322              		.cfi_def_cfa_offset 48
 2323              		.cfi_offset 3, -48
 565:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2324              		.loc 1 565 6 view .LVU762
 2325 0012 8B973C01 		movl	316(%rdi), %edx
 2325      0000
 560:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 2326              		.loc 1 560 21 view .LVU763
 2327 0018 488BAF30 		movq	560(%rdi), %rbp
 2327      020000
 2328              	.LVL242:
 561:fltk-1.3.4-1/jpeg/jcarith.c ****   int Al, blkn;
 2329              		.loc 1 561 3 is_stmt 1 view .LVU764
 562:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2330              		.loc 1 562 3 view .LVU765
 565:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2331              		.loc 1 565 3 view .LVU766
 565:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2332              		.loc 1 565 6 is_stmt 0 view .LVU767
 2333 001f 85D2     		testl	%edx, %edx
 2334 0021 740D     		je	.L202
 566:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2335              		.loc 1 566 5 is_stmt 1 view .LVU768
 566:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2336              		.loc 1 566 16 is_stmt 0 view .LVU769
 2337 0023 8B4560   		movl	96(%rbp), %eax
 566:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2338              		.loc 1 566 8 view .LVU770
 2339 0026 85C0     		testl	%eax, %eax
 2340 0028 745E     		je	.L211
 2341              	.LVL243:
 2342              	.L203:
 572:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2343              		.loc 1 572 5 is_stmt 1 view .LVU771
 572:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2344              		.loc 1 572 28 is_stmt 0 view .LVU772
 2345 002a 83E801   		subl	$1, %eax
 2346 002d 894560   		movl	%eax, 96(%rbp)
 2347              	.L202:
 575:fltk-1.3.4-1/jpeg/jcarith.c ****   Al = cinfo->Al;
 2348              		.loc 1 575 3 is_stmt 1 view .LVU773
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2349              		.loc 1 579 3 is_stmt 0 view .LVU774
 2350 0030 418B85A0 		movl	416(%r13), %eax
 2350      010000
 576:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2351              		.loc 1 576 6 view .LVU775
 2352 0037 458BA5D8 		movl	472(%r13), %r12d
 2352      010000
 575:fltk-1.3.4-1/jpeg/jcarith.c ****   Al = cinfo->Al;
 2353              		.loc 1 575 6 view .LVU776
 2354 003e 4881C568 		addq	$360, %rbp
 2354      010000
 2355              	.LVL244:
 576:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2356              		.loc 1 576 3 is_stmt 1 view .LVU777
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2357              		.loc 1 579 3 view .LVU778
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2358              		.loc 1 579 18 view .LVU779
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2359              		.loc 1 579 3 is_stmt 0 view .LVU780
 2360 0045 31DB     		xorl	%ebx, %ebx
 2361 0047 85C0     		testl	%eax, %eax
 2362 0049 7E2C     		jle	.L209
 2363              	.LVL245:
 2364 004b 0F1F4400 		.p2align 4,,10
 2364      00
 2365              		.p2align 3
 2366              	.L204:
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2367              		.loc 1 581 5 is_stmt 1 discriminator 3 view .LVU781
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2368              		.loc 1 581 47 is_stmt 0 discriminator 3 view .LVU782
 2369 0050 498B04DE 		movq	(%r14,%rbx,8), %rax
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2370              		.loc 1 581 51 discriminator 3 view .LVU783
 2371 0054 4489E1   		movl	%r12d, %ecx
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2372              		.loc 1 581 5 discriminator 3 view .LVU784
 2373 0057 4889EE   		movq	%rbp, %rsi
 2374 005a 4C89EF   		movq	%r13, %rdi
 2375 005d 4883C301 		addq	$1, %rbx
 2376              	.LVL246:
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2377              		.loc 1 581 47 discriminator 3 view .LVU785
 2378 0061 0FBF10   		movswl	(%rax), %edx
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2379              		.loc 1 581 51 discriminator 3 view .LVU786
 2380 0064 D3FA     		sarl	%cl, %edx
 581:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2381              		.loc 1 581 5 discriminator 3 view .LVU787
 2382 0066 83E201   		andl	$1, %edx
 2383 0069 E8000000 		call	arith_encode
 2383      00
 2384              	.LVL247:
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2385              		.loc 1 579 47 is_stmt 1 discriminator 3 view .LVU788
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2386              		.loc 1 579 18 discriminator 3 view .LVU789
 579:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 2387              		.loc 1 579 3 is_stmt 0 discriminator 3 view .LVU790
 2388 006e 41399DA0 		cmpl	%ebx, 416(%r13)
 2388      010000
 2389 0075 7FD9     		jg	.L204
 2390              	.L209:
 585:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2391              		.loc 1 585 1 view .LVU791
 2392 0077 5B       		popq	%rbx
 2393              		.cfi_remember_state
 2394              		.cfi_def_cfa_offset 40
 2395 0078 B8010000 		movl	$1, %eax
 2395      00
 2396 007d 5D       		popq	%rbp
 2397              		.cfi_def_cfa_offset 32
 2398              	.LVL248:
 585:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2399              		.loc 1 585 1 view .LVU792
 2400 007e 415C     		popq	%r12
 2401              		.cfi_def_cfa_offset 24
 2402              	.LVL249:
 585:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2403              		.loc 1 585 1 view .LVU793
 2404 0080 415D     		popq	%r13
 2405              		.cfi_def_cfa_offset 16
 2406              	.LVL250:
 585:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2407              		.loc 1 585 1 view .LVU794
 2408 0082 415E     		popq	%r14
 2409              		.cfi_def_cfa_offset 8
 2410              	.LVL251:
 585:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2411              		.loc 1 585 1 view .LVU795
 2412 0084 C3       		ret
 2413              	.LVL252:
 2414              		.p2align 4,,10
 2415 0085 0F1F00   		.p2align 3
 2416              	.L211:
 2417              		.cfi_restore_state
 567:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2418              		.loc 1 567 7 is_stmt 1 view .LVU796
 2419 0088 8B7564   		movl	100(%rbp), %esi
 2420              	.LVL253:
 567:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2421              		.loc 1 567 7 is_stmt 0 view .LVU797
 2422 008b E8000000 		call	emit_restart
 2422      00
 2423              	.LVL254:
 568:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2424              		.loc 1 568 7 is_stmt 1 view .LVU798
 569:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2425              		.loc 1 569 32 is_stmt 0 view .LVU799
 2426 0090 8B7D64   		movl	100(%rbp), %edi
 568:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2427              		.loc 1 568 38 view .LVU800
 2428 0093 418B853C 		movl	316(%r13), %eax
 2428      010000
 569:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2429              		.loc 1 569 7 is_stmt 1 view .LVU801
 570:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2430              		.loc 1 570 7 view .LVU802
 569:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2431              		.loc 1 569 32 is_stmt 0 view .LVU803
 2432 009a 8D5701   		leal	1(%rdi), %edx
 570:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2433              		.loc 1 570 33 view .LVU804
 2434 009d 83E207   		andl	$7, %edx
 2435 00a0 895564   		movl	%edx, 100(%rbp)
 2436 00a3 EB85     		jmp	.L203
 2437              		.cfi_endproc
 2438              	.LFE57:
 2440              		.section	.text.encode_mcu_AC_refine,"ax",@progbits
 2441              		.p2align 4
 2443              	encode_mcu_AC_refine:
 2444              	.LVL255:
 2445              	.LFB58:
 594:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2446              		.loc 1 594 1 is_stmt 1 view -0
 2447              		.cfi_startproc
 594:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2448              		.loc 1 594 1 is_stmt 0 view .LVU806
 2449 0000 F30F1EFA 		endbr64
 595:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2450              		.loc 1 595 3 is_stmt 1 view .LVU807
 594:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2451              		.loc 1 594 1 is_stmt 0 view .LVU808
 2452 0004 4157     		pushq	%r15
 2453              		.cfi_def_cfa_offset 16
 2454              		.cfi_offset 15, -16
 2455 0006 4989FF   		movq	%rdi, %r15
 2456 0009 4156     		pushq	%r14
 2457              		.cfi_def_cfa_offset 24
 2458              		.cfi_offset 14, -24
 2459 000b 4155     		pushq	%r13
 2460              		.cfi_def_cfa_offset 32
 2461              		.cfi_offset 13, -32
 2462 000d 4154     		pushq	%r12
 2463              		.cfi_def_cfa_offset 40
 2464              		.cfi_offset 12, -40
 2465 000f 55       		pushq	%rbp
 2466              		.cfi_def_cfa_offset 48
 2467              		.cfi_offset 6, -48
 2468 0010 53       		pushq	%rbx
 2469              		.cfi_def_cfa_offset 56
 2470              		.cfi_offset 3, -56
 2471 0011 4889F3   		movq	%rsi, %rbx
 2472 0014 4883EC28 		subq	$40, %rsp
 2473              		.cfi_def_cfa_offset 96
 595:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2474              		.loc 1 595 21 view .LVU809
 2475 0018 488B8730 		movq	560(%rdi), %rax
 2475      020000
 603:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2476              		.loc 1 603 6 view .LVU810
 2477 001f 8B8F3C01 		movl	316(%rdi), %ecx
 2477      0000
 595:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2478              		.loc 1 595 21 view .LVU811
 2479 0025 48894424 		movq	%rax, 8(%rsp)
 2479      08
 2480              	.LVL256:
 596:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 2481              		.loc 1 596 3 is_stmt 1 view .LVU812
 597:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 2482              		.loc 1 597 3 view .LVU813
 598:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke, kex;
 2483              		.loc 1 598 3 view .LVU814
 599:fltk-1.3.4-1/jpeg/jcarith.c ****   int v;
 2484              		.loc 1 599 3 view .LVU815
 600:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2485              		.loc 1 600 3 view .LVU816
 603:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2486              		.loc 1 603 3 view .LVU817
 603:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2487              		.loc 1 603 6 is_stmt 0 view .LVU818
 2488 002a 85C9     		testl	%ecx, %ecx
 2489 002c 7416     		je	.L213
 604:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2490              		.loc 1 604 5 is_stmt 1 view .LVU819
 604:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2491              		.loc 1 604 16 is_stmt 0 view .LVU820
 2492 002e 8B4060   		movl	96(%rax), %eax
 2493              	.LVL257:
 604:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2494              		.loc 1 604 8 view .LVU821
 2495 0031 85C0     		testl	%eax, %eax
 2496 0033 0F843902 		je	.L253
 2496      0000
 2497              	.LVL258:
 2498              	.L214:
 610:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2499              		.loc 1 610 5 is_stmt 1 view .LVU822
 610:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2500              		.loc 1 610 28 is_stmt 0 view .LVU823
 2501 0039 488B7C24 		movq	8(%rsp), %rdi
 2501      08
 2502 003e 83E801   		subl	$1, %eax
 2503 0041 894760   		movl	%eax, 96(%rdi)
 2504              	.L213:
 613:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2505              		.loc 1 613 3 is_stmt 1 view .LVU824
 617:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2506              		.loc 1 617 7 is_stmt 0 view .LVU825
 2507 0044 498B8778 		movq	376(%r15), %rax
 2507      010000
 622:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 2508              		.loc 1 622 6 view .LVU826
 2509 004b 4D6387D0 		movslq	464(%r15), %r8
 2509      010000
 613:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2510              		.loc 1 613 17 view .LVU827
 2511 0052 498BAFE0 		movq	480(%r15), %rbp
 2511      010000
 2512              	.LVL259:
 616:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 2513              		.loc 1 616 3 is_stmt 1 view .LVU828
 616:fltk-1.3.4-1/jpeg/jcarith.c ****   tbl = cinfo->cur_comp_info[0]->ac_tbl_no;
 2514              		.loc 1 616 9 is_stmt 0 view .LVU829
 2515 0059 488B1B   		movq	(%rbx), %rbx
 2516              	.LVL260:
 617:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2517              		.loc 1 617 3 is_stmt 1 view .LVU830
 617:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2518              		.loc 1 617 7 is_stmt 0 view .LVU831
 2519 005c 8B4018   		movl	24(%rax), %eax
 2520 005f 418B8FD8 		movl	472(%r15), %ecx
 2520      010000
 622:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 2521              		.loc 1 622 6 view .LVU832
 2522 0066 4C89C6   		movq	%r8, %rsi
 617:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2523              		.loc 1 617 7 view .LVU833
 2524 0069 8944241C 		movl	%eax, 28(%rsp)
 2525              	.LVL261:
 622:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 2526              		.loc 1 622 3 is_stmt 1 view .LVU834
 622:fltk-1.3.4-1/jpeg/jcarith.c ****   do {
 2527              		.loc 1 622 3 is_stmt 0 view .LVU835
 2528 006d EB13     		jmp	.L220
 2529              	.LVL262:
 2530 006f 90       		.p2align 4,,10
 2531              		.p2align 3
 2532              	.L217:
 634:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2533              		.loc 1 634 11 is_stmt 1 view .LVU836
 634:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2534              		.loc 1 634 11 is_stmt 0 view .LVU837
 2535 0070 4983E801 		subq	$1, %r8
 2536              	.LVL263:
 634:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2537              		.loc 1 634 11 view .LVU838
 2538 0074 44894424 		movl	%r8d, 4(%rsp)
 2538      04
 634:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2539              		.loc 1 634 3 view .LVU839
 2540 0079 4585C0   		testl	%r8d, %r8d
 2541 007c 0F84B801 		je	.L254
 2541      0000
 2542              	.LVL264:
 2543              	.L220:
 628:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2544              		.loc 1 628 22 view .LVU840
 2545 0082 4A634485 		movslq	0(%rbp,%r8,4), %rax
 2545      00
 2546 0087 44894424 		movl	%r8d, 24(%rsp)
 2546      18
 2547              	.LVL265:
 623:fltk-1.3.4-1/jpeg/jcarith.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 2548              		.loc 1 623 3 is_stmt 1 view .LVU841
 628:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2549              		.loc 1 628 5 view .LVU842
 628:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2550              		.loc 1 628 12 is_stmt 0 view .LVU843
 2551 008c 0FBF0443 		movswl	(%rbx,%rax,2), %eax
 2552              	.LVL266:
 629:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 2553              		.loc 1 629 13 view .LVU844
 2554 0090 89C2     		movl	%eax, %edx
 628:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2555              		.loc 1 628 8 view .LVU845
 2556 0092 85C0     		testl	%eax, %eax
 2557 0094 7902     		jns	.L250
 631:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2558              		.loc 1 631 7 is_stmt 1 view .LVU846
 631:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Al) break;
 2559              		.loc 1 631 9 is_stmt 0 view .LVU847
 2560 0096 F7DA     		negl	%edx
 2561              	.L250:
 2562              	.LVL267:
 632:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2563              		.loc 1 632 7 is_stmt 1 view .LVU848
 632:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2564              		.loc 1 632 13 is_stmt 0 view .LVU849
 2565 0098 D3FA     		sarl	%cl, %edx
 2566              	.LVL268:
 632:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2567              		.loc 1 632 10 view .LVU850
 2568 009a 85D2     		testl	%edx, %edx
 2569 009c 74D2     		je	.L217
 2570              	.LVL269:
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2571              		.loc 1 637 18 is_stmt 1 discriminator 1 view .LVU851
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2572              		.loc 1 637 3 is_stmt 0 discriminator 1 view .LVU852
 2573 009e 8B542418 		movl	24(%rsp), %edx
 2574 00a2 85D2     		testl	%edx, %edx
 2575 00a4 0F8EF701 		jle	.L255
 2575      0000
 2576 00aa 48635424 		movslq	24(%rsp), %rdx
 2576      18
 2577 00af 418B8FD4 		movl	468(%r15), %ecx
 2577      010000
 2578 00b6 4889D7   		movq	%rdx, %rdi
 2579 00b9 488D5495 		leaq	0(%rbp,%rdx,4), %rdx
 2579      00
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2580              		.loc 1 637 3 view .LVU853
 2581 00be 897C2404 		movl	%edi, 4(%rsp)
 2582 00c2 EB16     		jmp	.L223
 2583              	.LVL270:
 2584              		.p2align 4,,10
 2585 00c4 0F1F4000 		.p2align 3
 2586              	.L256:
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2587              		.loc 1 637 27 is_stmt 1 discriminator 2 view .LVU854
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2588              		.loc 1 637 18 discriminator 2 view .LVU855
 2589 00c8 4883EA04 		subq	$4, %rdx
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2590              		.loc 1 637 3 is_stmt 0 discriminator 2 view .LVU856
 2591 00cc 836C2404 		subl	$1, 4(%rsp)
 2591      01
 2592              	.LVL271:
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2593              		.loc 1 637 3 discriminator 2 view .LVU857
 2594 00d1 7413     		je	.L219
 2595 00d3 486302   		movslq	(%rdx), %rax
 2596 00d6 0FBF0443 		movswl	(%rbx,%rax,2), %eax
 2597              	.LVL272:
 2598              	.L223:
 638:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 2599              		.loc 1 638 5 is_stmt 1 view .LVU858
 638:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 2600              		.loc 1 638 8 is_stmt 0 view .LVU859
 2601 00da 85C0     		testl	%eax, %eax
 2602 00dc 7902     		jns	.L251
 641:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 2603              		.loc 1 641 7 is_stmt 1 view .LVU860
 641:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v >>= cinfo->Ah) break;
 2604              		.loc 1 641 9 is_stmt 0 view .LVU861
 2605 00de F7D8     		negl	%eax
 2606              	.LVL273:
 2607              	.L251:
 642:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2608              		.loc 1 642 7 is_stmt 1 view .LVU862
 642:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2609              		.loc 1 642 13 is_stmt 0 view .LVU863
 2610 00e0 D3F8     		sarl	%cl, %eax
 2611              	.LVL274:
 642:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2612              		.loc 1 642 10 view .LVU864
 2613 00e2 85C0     		testl	%eax, %eax
 2614 00e4 74E2     		je	.L256
 2615              	.LVL275:
 2616              	.L219:
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2617              		.loc 1 646 3 is_stmt 1 view .LVU865
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2618              		.loc 1 646 10 is_stmt 0 view .LVU866
 2619 00e6 418B87CC 		movl	460(%r15), %eax
 2619      010000
 2620 00ed 448D70FF 		leal	-1(%rax), %r14d
 2621              	.LVL276:
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2622              		.loc 1 646 27 is_stmt 1 view .LVU867
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2623              		.loc 1 646 3 is_stmt 0 view .LVU868
 2624 00f1 443B7424 		cmpl	24(%rsp), %r14d
 2624      18
 2625 00f6 0F8DC900 		jge	.L224
 2625      0000
 2626 00fc 48634424 		movslq	28(%rsp), %rax
 2626      1C
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 2627              		.loc 1 647 27 view .LVU869
 2628 0101 4883C01C 		addq	$28, %rax
 2629 0105 48894424 		movq	%rax, 16(%rsp)
 2629      10
 2630              	.LVL277:
 2631 010a 660F1F44 		.p2align 4,,10
 2631      0000
 2632              		.p2align 3
 2633              	.L232:
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 2634              		.loc 1 647 5 is_stmt 1 view .LVU870
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 2635              		.loc 1 647 8 is_stmt 0 view .LVU871
 2636 0110 488B4424 		movq	8(%rsp), %rax
 2636      08
 2637 0115 488B7C24 		movq	16(%rsp), %rdi
 2637      10
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 2638              		.loc 1 647 37 view .LVU872
 2639 011a 478D0476 		leal	(%r14,%r14,2), %r8d
 2640 011e 4D63C0   		movslq	%r8d, %r8
 647:fltk-1.3.4-1/jpeg/jcarith.c ****     if (k >= kex)
 2641              		.loc 1 647 8 view .LVU873
 2642 0121 4C0344F8 		addq	8(%rax,%rdi,8), %r8
 2642      08
 2643 0126 4D89C5   		movq	%r8, %r13
 2644              	.LVL278:
 648:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 2645              		.loc 1 648 5 is_stmt 1 view .LVU874
 648:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 2646              		.loc 1 648 8 is_stmt 0 view .LVU875
 2647 0129 44397424 		cmpl	%r14d, 4(%rsp)
 2647      04
 2648 012e 0F8EF400 		jle	.L257
 2648      0000
 2649              	.LVL279:
 2650              	.L225:
 648:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 2651              		.loc 1 648 8 view .LVU876
 2652 0134 418D4601 		leal	1(%r14), %eax
 2653 0138 4C63E0   		movslq	%eax, %r12
 2654 013b EB23     		jmp	.L231
 2655              	.LVL280:
 2656 013d 0F1F00   		.p2align 4,,10
 2657              		.p2align 3
 2658              	.L259:
 652:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2659              		.loc 1 652 2 is_stmt 1 view .LVU877
 652:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2660              		.loc 1 652 8 is_stmt 0 view .LVU878
 2661 0140 D3FA     		sarl	%cl, %edx
 2662              	.LVL281:
 652:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2663              		.loc 1 652 5 view .LVU879
 2664 0142 85D2     		testl	%edx, %edx
 2665 0144 0F859600 		jne	.L258
 2665      0000
 2666              	.L227:
 673:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 2667              		.loc 1 673 7 is_stmt 1 view .LVU880
 2668 014a 498D7501 		leaq	1(%r13), %rsi
 2669 014e 31D2     		xorl	%edx, %edx
 2670              	.LVL282:
 673:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 2671              		.loc 1 673 7 is_stmt 0 view .LVU881
 2672 0150 4C89FF   		movq	%r15, %rdi
 674:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2673              		.loc 1 674 10 view .LVU882
 2674 0153 4983C503 		addq	$3, %r13
 2675              	.LVL283:
 673:fltk-1.3.4-1/jpeg/jcarith.c ****       st += 3;
 2676              		.loc 1 673 7 view .LVU883
 2677 0157 E8000000 		call	arith_encode
 2677      00
 2678              	.LVL284:
 674:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2679              		.loc 1 674 7 is_stmt 1 view .LVU884
 650:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 2680              		.loc 1 650 11 view .LVU885
 2681 015c 4983C401 		addq	$1, %r12
 2682              	.LVL285:
 2683              	.L231:
 650:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((v = (*block)[natural_order[++k]]) >= 0) {
 2684              		.loc 1 650 5 view .LVU886
 651:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2685              		.loc 1 651 7 view .LVU887
 651:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2686              		.loc 1 651 24 is_stmt 0 view .LVU888
 2687 0160 4A6354A5 		movslq	0(%rbp,%r12,4), %rdx
 2687      00
 2688 0165 418B8FD8 		movl	472(%r15), %ecx
 2688      010000
 651:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2689              		.loc 1 651 10 view .LVU889
 2690 016c 4589E6   		movl	%r12d, %r14d
 2691              	.LVL286:
 651:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2692              		.loc 1 651 14 view .LVU890
 2693 016f 0FBF1453 		movswl	(%rbx,%rdx,2), %edx
 2694              	.LVL287:
 651:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2695              		.loc 1 651 10 view .LVU891
 2696 0173 85D2     		testl	%edx, %edx
 2697 0175 79C9     		jns	.L259
 662:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2698              		.loc 1 662 2 is_stmt 1 view .LVU892
 662:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v >>= cinfo->Al) {
 2699              		.loc 1 662 4 is_stmt 0 view .LVU893
 2700 0177 F7DA     		negl	%edx
 2701              	.LVL288:
 663:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2702              		.loc 1 663 2 is_stmt 1 view .LVU894
 663:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2703              		.loc 1 663 8 is_stmt 0 view .LVU895
 2704 0179 D3FA     		sarl	%cl, %edx
 2705              	.LVL289:
 663:fltk-1.3.4-1/jpeg/jcarith.c **** 	  if (v >> 1)			/* previously nonzero coef */
 2706              		.loc 1 663 5 view .LVU896
 2707 017b 85D2     		testl	%edx, %edx
 2708 017d 74CB     		je	.L227
 664:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 2709              		.loc 1 664 4 is_stmt 1 view .LVU897
 664:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 2710              		.loc 1 664 7 is_stmt 0 view .LVU898
 2711 017f 89D0     		movl	%edx, %eax
 2712 0181 D1E8     		shrl	%eax
 2713 0183 0F858700 		jne	.L252
 2713      0000
 667:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 1);
 2714              		.loc 1 667 6 is_stmt 1 view .LVU899
 2715 0189 498D7501 		leaq	1(%r13), %rsi
 2716 018d BA010000 		movl	$1, %edx
 2716      00
 2717              	.LVL290:
 667:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 1);
 2718              		.loc 1 667 6 is_stmt 0 view .LVU900
 2719 0192 4C89FF   		movq	%r15, %rdi
 2720 0195 E8000000 		call	arith_encode
 2720      00
 2721              	.LVL291:
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2722              		.loc 1 668 6 is_stmt 1 view .LVU901
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2723              		.loc 1 668 33 is_stmt 0 view .LVU902
 2724 019a 488B4424 		movq	8(%rsp), %rax
 2724      08
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2725              		.loc 1 668 6 view .LVU903
 2726 019f BA010000 		movl	$1, %edx
 2726      00
 2727 01a4 4C89FF   		movq	%r15, %rdi
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2728              		.loc 1 668 33 view .LVU904
 2729 01a7 488DB068 		leaq	360(%rax), %rsi
 2729      010000
 668:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2730              		.loc 1 668 6 view .LVU905
 2731 01ae E8000000 		call	arith_encode
 2731      00
 2732              	.LVL292:
 2733              	.L229:
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2734              		.loc 1 646 27 is_stmt 1 discriminator 1 view .LVU906
 646:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2735              		.loc 1 646 3 is_stmt 0 discriminator 1 view .LVU907
 2736 01b3 443B7424 		cmpl	24(%rsp), %r14d
 2736      18
 2737 01b8 0F8C52FF 		jl	.L232
 2737      FFFF
 2738 01be 418BB7D0 		movl	464(%r15), %esi
 2738      010000
 2739              	.LVL293:
 2740              	.L224:
 678:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2741              		.loc 1 678 3 is_stmt 1 view .LVU908
 678:fltk-1.3.4-1/jpeg/jcarith.c ****     st = entropy->ac_stats[tbl] + 3 * k;
 2742              		.loc 1 678 6 is_stmt 0 view .LVU909
 2743 01c5 4139F6   		cmpl	%esi, %r14d
 2744 01c8 7C7D     		jl	.L260
 2745              	.LVL294:
 2746              	.L233:
 683:fltk-1.3.4-1/jpeg/jcarith.c **** }
 2747              		.loc 1 683 3 is_stmt 1 view .LVU910
 684:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2748              		.loc 1 684 1 is_stmt 0 view .LVU911
 2749 01ca 4883C428 		addq	$40, %rsp
 2750              		.cfi_remember_state
 2751              		.cfi_def_cfa_offset 56
 2752 01ce B8010000 		movl	$1, %eax
 2752      00
 2753 01d3 5B       		popq	%rbx
 2754              		.cfi_def_cfa_offset 48
 2755 01d4 5D       		popq	%rbp
 2756              		.cfi_def_cfa_offset 40
 2757              	.LVL295:
 684:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2758              		.loc 1 684 1 view .LVU912
 2759 01d5 415C     		popq	%r12
 2760              		.cfi_def_cfa_offset 32
 2761 01d7 415D     		popq	%r13
 2762              		.cfi_def_cfa_offset 24
 2763 01d9 415E     		popq	%r14
 2764              		.cfi_def_cfa_offset 16
 2765              	.LVL296:
 684:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2766              		.loc 1 684 1 view .LVU913
 2767 01db 415F     		popq	%r15
 2768              		.cfi_def_cfa_offset 8
 2769              	.LVL297:
 684:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2770              		.loc 1 684 1 view .LVU914
 2771 01dd C3       		ret
 2772              	.LVL298:
 2773 01de 6690     		.p2align 4,,10
 2774              		.p2align 3
 2775              	.L258:
 2776              		.cfi_restore_state
 653:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 2777              		.loc 1 653 4 is_stmt 1 view .LVU915
 653:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st + 2, (v & 1));
 2778              		.loc 1 653 7 is_stmt 0 view .LVU916
 2779 01e0 89D0     		movl	%edx, %eax
 2780 01e2 D1E8     		shrl	%eax
 2781 01e4 752A     		jne	.L252
 656:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 0);
 2782              		.loc 1 656 6 is_stmt 1 view .LVU917
 2783 01e6 498D7501 		leaq	1(%r13), %rsi
 2784 01ea 4C89FF   		movq	%r15, %rdi
 2785 01ed BA010000 		movl	$1, %edx
 2785      00
 2786              	.LVL299:
 656:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, entropy->fixed_bin, 0);
 2787              		.loc 1 656 6 is_stmt 0 view .LVU918
 2788 01f2 E8000000 		call	arith_encode
 2788      00
 2789              	.LVL300:
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2790              		.loc 1 657 6 is_stmt 1 view .LVU919
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2791              		.loc 1 657 33 is_stmt 0 view .LVU920
 2792 01f7 488B4424 		movq	8(%rsp), %rax
 2792      08
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2793              		.loc 1 657 6 view .LVU921
 2794 01fc 31D2     		xorl	%edx, %edx
 2795 01fe 4C89FF   		movq	%r15, %rdi
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2796              		.loc 1 657 33 view .LVU922
 2797 0201 488DB068 		leaq	360(%rax), %rsi
 2797      010000
 657:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 2798              		.loc 1 657 6 view .LVU923
 2799 0208 E8000000 		call	arith_encode
 2799      00
 2800              	.LVL301:
 2801 020d EBA4     		jmp	.L229
 2802              	.LVL302:
 2803 020f 90       		.p2align 4,,10
 2804              		.p2align 3
 2805              	.L252:
 665:fltk-1.3.4-1/jpeg/jcarith.c **** 	  else {			/* newly nonzero coef */
 2806              		.loc 1 665 6 is_stmt 1 view .LVU924
 2807 0210 83E201   		andl	$1, %edx
 2808              	.LVL303:
 665:fltk-1.3.4-1/jpeg/jcarith.c **** 	  else {			/* newly nonzero coef */
 2809              		.loc 1 665 6 is_stmt 0 view .LVU925
 2810 0213 498D7502 		leaq	2(%r13), %rsi
 2811 0217 4C89FF   		movq	%r15, %rdi
 2812 021a E8000000 		call	arith_encode
 2812      00
 2813              	.LVL304:
 2814 021f EB92     		jmp	.L229
 2815              	.LVL305:
 2816              		.p2align 4,,10
 2817 0221 0F1F8000 		.p2align 3
 2817      000000
 2818              	.L257:
 649:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 2819              		.loc 1 649 7 is_stmt 1 view .LVU926
 2820 0228 31D2     		xorl	%edx, %edx
 2821 022a 4C89C6   		movq	%r8, %rsi
 2822 022d 4C89FF   		movq	%r15, %rdi
 2823 0230 E8000000 		call	arith_encode
 2823      00
 2824              	.LVL306:
 649:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 2825              		.loc 1 649 7 is_stmt 0 view .LVU927
 2826 0235 E9FAFEFF 		jmp	.L225
 2826      FF
 2827              	.LVL307:
 2828              	.L254:
 649:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 2829              		.loc 1 649 7 view .LVU928
 2830 023a C7442418 		movl	$0, 24(%rsp)
 2830      00000000 
 2831              	.LVL308:
 649:fltk-1.3.4-1/jpeg/jcarith.c ****     for (;;) {
 2832              		.loc 1 649 7 view .LVU929
 2833 0242 E99FFEFF 		jmp	.L219
 2833      FF
 2834              	.LVL309:
 2835              	.L260:
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2836              		.loc 1 679 5 is_stmt 1 view .LVU930
 680:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2837              		.loc 1 680 5 view .LVU931
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2838              		.loc 1 679 27 is_stmt 0 view .LVU932
 2839 0247 48634424 		movslq	28(%rsp), %rax
 2839      1C
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2840              		.loc 1 679 8 view .LVU933
 2841 024c 488B5C24 		movq	8(%rsp), %rbx
 2841      08
 2842              	.LVL310:
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2843              		.loc 1 679 37 view .LVU934
 2844 0251 438D3476 		leal	(%r14,%r14,2), %esi
 680:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2845              		.loc 1 680 5 view .LVU935
 2846 0255 4C89FF   		movq	%r15, %rdi
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2847              		.loc 1 679 37 view .LVU936
 2848 0258 4863F6   		movslq	%esi, %rsi
 680:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2849              		.loc 1 680 5 view .LVU937
 2850 025b BA010000 		movl	$1, %edx
 2850      00
 679:fltk-1.3.4-1/jpeg/jcarith.c ****     arith_encode(cinfo, st, 1);
 2851              		.loc 1 679 8 view .LVU938
 2852 0260 4803B4C3 		addq	232(%rbx,%rax,8), %rsi
 2852      E8000000 
 680:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2853              		.loc 1 680 5 view .LVU939
 2854 0268 E8000000 		call	arith_encode
 2854      00
 2855              	.LVL311:
 680:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2856              		.loc 1 680 5 view .LVU940
 2857 026d E958FFFF 		jmp	.L233
 2857      FF
 2858              	.LVL312:
 2859              	.L253:
 605:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2860              		.loc 1 605 7 is_stmt 1 view .LVU941
 2861 0272 4C8B7424 		movq	8(%rsp), %r14
 2861      08
 2862 0277 4C89FF   		movq	%r15, %rdi
 2863              	.LVL313:
 605:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2864              		.loc 1 605 7 is_stmt 0 view .LVU942
 2865 027a 418B7664 		movl	100(%r14), %esi
 2866 027e E8000000 		call	emit_restart
 2866      00
 2867              	.LVL314:
 606:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2868              		.loc 1 606 7 is_stmt 1 view .LVU943
 607:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2869              		.loc 1 607 32 is_stmt 0 view .LVU944
 2870 0283 418B4E64 		movl	100(%r14), %ecx
 606:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 2871              		.loc 1 606 38 view .LVU945
 2872 0287 418B873C 		movl	316(%r15), %eax
 2872      010000
 607:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2873              		.loc 1 607 7 is_stmt 1 view .LVU946
 608:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2874              		.loc 1 608 7 view .LVU947
 607:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 2875              		.loc 1 607 32 is_stmt 0 view .LVU948
 2876 028e 8D5101   		leal	1(%rcx), %edx
 2877 0291 894C2404 		movl	%ecx, 4(%rsp)
 608:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 2878              		.loc 1 608 33 view .LVU949
 2879 0295 83E207   		andl	$7, %edx
 2880 0298 41895664 		movl	%edx, 100(%r14)
 2881 029c E998FDFF 		jmp	.L214
 2881      FF
 2882              	.LVL315:
 2883              	.L255:
 637:fltk-1.3.4-1/jpeg/jcarith.c ****     if ((v = (*block)[natural_order[kex]]) >= 0) {
 2884              		.loc 1 637 3 view .LVU950
 2885 02a1 8B442418 		movl	24(%rsp), %eax
 2886 02a5 89442404 		movl	%eax, 4(%rsp)
 2887 02a9 E938FEFF 		jmp	.L219
 2887      FF
 2888              		.cfi_endproc
 2889              	.LFE58:
 2891              		.section	.text.encode_mcu,"ax",@progbits
 2892              		.p2align 4
 2894              	encode_mcu:
 2895              	.LVL316:
 2896              	.LFB59:
 693:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2897              		.loc 1 693 1 is_stmt 1 view -0
 2898              		.cfi_startproc
 693:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2899              		.loc 1 693 1 is_stmt 0 view .LVU952
 2900 0000 F30F1EFA 		endbr64
 694:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2901              		.loc 1 694 3 is_stmt 1 view .LVU953
 693:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2902              		.loc 1 693 1 is_stmt 0 view .LVU954
 2903 0004 4157     		pushq	%r15
 2904              		.cfi_def_cfa_offset 16
 2905              		.cfi_offset 15, -16
 2906 0006 4989FF   		movq	%rdi, %r15
 2907 0009 4156     		pushq	%r14
 2908              		.cfi_def_cfa_offset 24
 2909              		.cfi_offset 14, -24
 2910 000b 4155     		pushq	%r13
 2911              		.cfi_def_cfa_offset 32
 2912              		.cfi_offset 13, -32
 2913 000d 4154     		pushq	%r12
 2914              		.cfi_def_cfa_offset 40
 2915              		.cfi_offset 12, -40
 2916 000f 55       		pushq	%rbp
 2917              		.cfi_def_cfa_offset 48
 2918              		.cfi_offset 6, -48
 2919 0010 53       		pushq	%rbx
 2920              		.cfi_def_cfa_offset 56
 2921              		.cfi_offset 3, -56
 2922 0011 4883EC68 		subq	$104, %rsp
 2923              		.cfi_def_cfa_offset 160
 694:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2924              		.loc 1 694 21 view .LVU955
 2925 0015 488B8730 		movq	560(%rdi), %rax
 2925      020000
 704:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2926              		.loc 1 704 6 view .LVU956
 2927 001c 8B973C01 		movl	316(%rdi), %edx
 2927      0000
 693:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy = (arith_entropy_ptr) cinfo->entropy;
 2928              		.loc 1 693 1 view .LVU957
 2929 0022 48897424 		movq	%rsi, 64(%rsp)
 2929      40
 694:fltk-1.3.4-1/jpeg/jcarith.c ****   const int * natural_order;
 2930              		.loc 1 694 21 view .LVU958
 2931 0027 48894424 		movq	%rax, 56(%rsp)
 2931      38
 2932              	.LVL317:
 695:fltk-1.3.4-1/jpeg/jcarith.c ****   JBLOCKROW block;
 2933              		.loc 1 695 3 is_stmt 1 view .LVU959
 696:fltk-1.3.4-1/jpeg/jcarith.c ****   unsigned char *st;
 2934              		.loc 1 696 3 view .LVU960
 697:fltk-1.3.4-1/jpeg/jcarith.c ****   int tbl, k, ke;
 2935              		.loc 1 697 3 view .LVU961
 698:fltk-1.3.4-1/jpeg/jcarith.c ****   int v, v2, m;
 2936              		.loc 1 698 3 view .LVU962
 699:fltk-1.3.4-1/jpeg/jcarith.c ****   int blkn, ci;
 2937              		.loc 1 699 3 view .LVU963
 700:fltk-1.3.4-1/jpeg/jcarith.c ****   jpeg_component_info * compptr;
 2938              		.loc 1 700 3 view .LVU964
 701:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2939              		.loc 1 701 3 view .LVU965
 704:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2940              		.loc 1 704 3 view .LVU966
 704:fltk-1.3.4-1/jpeg/jcarith.c ****     if (entropy->restarts_to_go == 0) {
 2941              		.loc 1 704 6 is_stmt 0 view .LVU967
 2942 002c 85D2     		testl	%edx, %edx
 2943 002e 7416     		je	.L262
 705:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2944              		.loc 1 705 5 is_stmt 1 view .LVU968
 705:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2945              		.loc 1 705 16 is_stmt 0 view .LVU969
 2946 0030 8B4060   		movl	96(%rax), %eax
 2947              	.LVL318:
 705:fltk-1.3.4-1/jpeg/jcarith.c ****       emit_restart(cinfo, entropy->next_restart_num);
 2948              		.loc 1 705 8 view .LVU970
 2949 0033 85C0     		testl	%eax, %eax
 2950 0035 0F842F05 		je	.L323
 2950      0000
 2951              	.LVL319:
 2952              	.L263:
 711:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2953              		.loc 1 711 5 is_stmt 1 view .LVU971
 711:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 2954              		.loc 1 711 28 is_stmt 0 view .LVU972
 2955 003b 488B4C24 		movq	56(%rsp), %rcx
 2955      38
 2956 0040 83E801   		subl	$1, %eax
 2957 0043 894160   		movl	%eax, 96(%rcx)
 2958              	.L262:
 714:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2959              		.loc 1 714 3 is_stmt 1 view .LVU973
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2960              		.loc 1 717 3 is_stmt 0 view .LVU974
 2961 0046 418B87A0 		movl	416(%r15), %eax
 2961      010000
 714:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2962              		.loc 1 714 17 view .LVU975
 2963 004d 4D8BB7E0 		movq	480(%r15), %r14
 2963      010000
 2964              	.LVL320:
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2965              		.loc 1 717 3 is_stmt 1 view .LVU976
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2966              		.loc 1 717 18 view .LVU977
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2967              		.loc 1 717 3 is_stmt 0 view .LVU978
 2968 0054 48C74424 		movq	$0, 24(%rsp)
 2968      18000000 
 2968      00
 2969 005d 85C0     		testl	%eax, %eax
 2970 005f 0F8E2704 		jle	.L320
 2970      0000
 2971 0065 4C897424 		movq	%r14, 80(%rsp)
 2971      50
 2972 006a EB1C     		jmp	.L264
 2973              	.LVL321:
 2974 006c 0F1F4000 		.p2align 4,,10
 2975              		.p2align 3
 2976              	.L276:
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2977              		.loc 1 717 47 is_stmt 1 discriminator 2 view .LVU979
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2978              		.loc 1 717 18 discriminator 2 view .LVU980
 2979 0070 48834424 		addq	$1, 24(%rsp)
 2979      1801
 2980              	.LVL322:
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2981              		.loc 1 717 18 is_stmt 0 discriminator 2 view .LVU981
 2982 0076 488B4424 		movq	24(%rsp), %rax
 2982      18
 717:fltk-1.3.4-1/jpeg/jcarith.c ****     block = MCU_data[blkn];
 2983              		.loc 1 717 3 discriminator 2 view .LVU982
 2984 007b 413987A0 		cmpl	%eax, 416(%r15)
 2984      010000
 2985 0082 0F8E0404 		jle	.L320
 2985      0000
 2986              	.LVL323:
 2987              	.L264:
 718:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 2988              		.loc 1 718 5 is_stmt 1 view .LVU983
 718:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 2989              		.loc 1 718 11 is_stmt 0 view .LVU984
 2990 0088 488B4424 		movq	24(%rsp), %rax
 2990      18
 2991 008d 488B4C24 		movq	64(%rsp), %rcx
 2991      40
 720:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2992              		.loc 1 720 13 view .LVU985
 2993 0092 49639487 		movslq	420(%r15,%rax,4), %rdx
 2993      A4010000 
 718:fltk-1.3.4-1/jpeg/jcarith.c ****     ci = cinfo->MCU_membership[blkn];
 2994              		.loc 1 718 11 view .LVU986
 2995 009a 4C8B34C1 		movq	(%rcx,%rax,8), %r14
 2996              	.LVL324:
 719:fltk-1.3.4-1/jpeg/jcarith.c ****     compptr = cinfo->cur_comp_info[ci];
 2997              		.loc 1 719 5 is_stmt 1 view .LVU987
 720:fltk-1.3.4-1/jpeg/jcarith.c **** 
 2998              		.loc 1 720 5 view .LVU988
 2999 009e 488B4C24 		movq	56(%rsp), %rcx
 2999      38
 720:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3000              		.loc 1 720 13 is_stmt 0 view .LVU989
 3001 00a3 4D8BA4D7 		movq	376(%r15,%rdx,8), %r12
 3001      78010000 
 3002              	.LVL325:
 724:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3003              		.loc 1 724 5 is_stmt 1 view .LVU990
 727:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3004              		.loc 1 727 5 view .LVU991
 3005 00ab 488D1C91 		leaq	(%rcx,%rdx,4), %rbx
 3006 00af 4D634C24 		movslq	20(%r12), %r9
 3006      14
 730:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 3007              		.loc 1 730 48 is_stmt 0 view .LVU992
 3008 00b4 448B4340 		movl	64(%rbx), %r8d
 727:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3009              		.loc 1 727 54 view .LVU993
 3010 00b8 4C636B50 		movslq	80(%rbx), %r13
 3011 00bc 4A8D04C9 		leaq	(%rcx,%r9,8), %rax
 3012              	.LVL326:
 730:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 3013              		.loc 1 730 22 view .LVU994
 3014 00c0 410FBF0E 		movswl	(%r14), %ecx
 727:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3015              		.loc 1 727 8 view .LVU995
 3016 00c4 4C036868 		addq	104(%rax), %r13
 3017              	.LVL327:
 730:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 3018              		.loc 1 730 5 is_stmt 1 view .LVU996
 730:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 3019              		.loc 1 730 8 is_stmt 0 view .LVU997
 3020 00c8 89CD     		movl	%ecx, %ebp
 3021 00ca 4429C5   		subl	%r8d, %ebp
 3022              	.LVL328:
 730:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);
 3023              		.loc 1 730 8 view .LVU998
 3024 00cd 0F85A402 		jne	.L265
 3024      0000
 731:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->dc_context[ci] = 0;	/* zero diff category */
 3025              		.loc 1 731 7 is_stmt 1 view .LVU999
 3026 00d3 31D2     		xorl	%edx, %edx
 3027 00d5 4C89EE   		movq	%r13, %rsi
 3028 00d8 4C89FF   		movq	%r15, %rdi
 3029 00db E8000000 		call	arith_encode
 3029      00
 3030              	.LVL329:
 732:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 3031              		.loc 1 732 7 view .LVU1000
 732:fltk-1.3.4-1/jpeg/jcarith.c ****     } else {
 3032              		.loc 1 732 31 is_stmt 0 view .LVU1001
 3033 00e0 C7435000 		movl	$0, 80(%rbx)
 3033      000000
 3034              	.LVL330:
 3035              	.L266:
 775:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = compptr->ac_tbl_no;
 3036              		.loc 1 775 5 is_stmt 1 view .LVU1002
 775:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = compptr->ac_tbl_no;
 3037              		.loc 1 775 13 is_stmt 0 view .LVU1003
 3038 00e7 418B8FE8 		movl	488(%r15), %ecx
 3038      010000
 3039              	.LVL331:
 775:fltk-1.3.4-1/jpeg/jcarith.c ****     tbl = compptr->ac_tbl_no;
 3040              		.loc 1 775 8 view .LVU1004
 3041 00ee 85C9     		testl	%ecx, %ecx
 3042 00f0 0F847AFF 		je	.L276
 3042      FFFF
 776:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3043              		.loc 1 776 5 is_stmt 1 view .LVU1005
 776:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3044              		.loc 1 776 9 is_stmt 0 view .LVU1006
 3045 00f6 418B4424 		movl	24(%r12), %eax
 3045      18
 3046 00fb 488B7424 		movq	80(%rsp), %rsi
 3046      50
 3047 0100 8944244C 		movl	%eax, 76(%rsp)
 3048              	.LVL332:
 776:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3049              		.loc 1 776 9 view .LVU1007
 3050 0104 4863C1   		movslq	%ecx, %rax
 3051              	.LVL333:
 776:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3052              		.loc 1 776 9 view .LVU1008
 3053 0107 EB15     		jmp	.L280
 3054              	.LVL334:
 3055 0109 0F1F8000 		.p2align 4,,10
 3055      000000
 3056              		.p2align 3
 3057              	.L277:
 781:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3058              		.loc 1 781 13 is_stmt 1 view .LVU1009
 781:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3059              		.loc 1 781 13 is_stmt 0 view .LVU1010
 3060 0110 4883E801 		subq	$1, %rax
 3061              	.LVL335:
 781:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3062              		.loc 1 781 13 view .LVU1011
 3063 0114 89C3     		movl	%eax, %ebx
 781:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3064              		.loc 1 781 5 view .LVU1012
 3065 0116 85C0     		testl	%eax, %eax
 3066 0118 0F840C01 		je	.L279
 3066      0000
 3067              	.LVL336:
 3068              	.L280:
 780:fltk-1.3.4-1/jpeg/jcarith.c ****     } while (--ke);
 3069              		.loc 1 780 19 view .LVU1013
 3070 011e 48631486 		movslq	(%rsi,%rax,4), %rdx
 3071 0122 89C7     		movl	%eax, %edi
 3072              	.LVL337:
 779:fltk-1.3.4-1/jpeg/jcarith.c ****       if ((*block)[natural_order[ke]]) break;
 3073              		.loc 1 779 5 is_stmt 1 view .LVU1014
 780:fltk-1.3.4-1/jpeg/jcarith.c ****     } while (--ke);
 3074              		.loc 1 780 7 view .LVU1015
 780:fltk-1.3.4-1/jpeg/jcarith.c ****     } while (--ke);
 3075              		.loc 1 780 10 is_stmt 0 view .LVU1016
 3076 0124 6641833C 		cmpw	$0, (%r14,%rdx,2)
 3076      5600
 3077 012a 74E4     		je	.L277
 3078 012c 48637424 		movslq	76(%rsp), %rsi
 3078      4C
 3079 0131 4C8B6C24 		movq	80(%rsp), %r13
 3079      50
 3080 0136 89442428 		movl	%eax, 40(%rsp)
 3081              	.LVL338:
 784:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3082              		.loc 1 784 17 is_stmt 1 view .LVU1017
 3083 013a 488B4424 		movq	56(%rsp), %rax
 3083      38
 3084 013f 48897424 		movq	%rsi, 88(%rsp)
 3084      58
 3085 0144 488D9868 		leaq	360(%rax), %rbx
 3085      010000
 3086 014b 488D04F0 		leaq	(%rax,%rsi,8), %rax
 3087 014f 48895C24 		movq	%rbx, 48(%rsp)
 3087      30
 784:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3088              		.loc 1 784 12 is_stmt 0 view .LVU1018
 3089 0154 31DB     		xorl	%ebx, %ebx
 3090 0156 48894424 		movq	%rax, 32(%rsp)
 3090      20
 784:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3091              		.loc 1 784 5 view .LVU1019
 3092 015b 85FF     		testl	%edi, %edi
 3093 015d 0F8EC700 		jle	.L279
 3093      0000
 3094              	.LVL339:
 3095              		.p2align 4,,10
 3096 0163 0F1F4400 		.p2align 3
 3096      00
 3097              	.L292:
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 3098              		.loc 1 785 7 is_stmt 1 view .LVU1020
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 3099              		.loc 1 785 10 is_stmt 0 view .LVU1021
 3100 0168 488B4424 		movq	32(%rsp), %rax
 3100      20
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 3101              		.loc 1 785 39 view .LVU1022
 3102 016d 8D2C5B   		leal	(%rbx,%rbx,2), %ebp
 786:fltk-1.3.4-1/jpeg/jcarith.c ****       while ((v = (*block)[natural_order[++k]]) == 0) {
 3103              		.loc 1 786 7 view .LVU1023
 3104 0170 31D2     		xorl	%edx, %edx
 3105 0172 4C89FF   		movq	%r15, %rdi
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 3106              		.loc 1 785 39 view .LVU1024
 3107 0175 4863ED   		movslq	%ebp, %rbp
 785:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 0);	/* EOB decision */
 3108              		.loc 1 785 10 view .LVU1025
 3109 0178 4803A8E8 		addq	232(%rax), %rbp
 3109      000000
 3110              	.LVL340:
 786:fltk-1.3.4-1/jpeg/jcarith.c ****       while ((v = (*block)[natural_order[++k]]) == 0) {
 3111              		.loc 1 786 7 is_stmt 1 view .LVU1026
 3112 017f 4889EE   		movq	%rbp, %rsi
 3113 0182 E8000000 		call	arith_encode
 3113      00
 3114              	.LVL341:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3115              		.loc 1 787 7 view .LVU1027
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3116              		.loc 1 787 13 view .LVU1028
 3117 0187 8D5301   		leal	1(%rbx), %edx
 3118              	.LVL342:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3119              		.loc 1 787 42 is_stmt 0 view .LVU1029
 3120 018a 4863C2   		movslq	%edx, %rax
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3121              		.loc 1 787 27 view .LVU1030
 3122 018d 49634485 		movslq	0(%r13,%rax,4), %rax
 3122      00
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3123              		.loc 1 787 17 view .LVU1031
 3124 0192 410FBF04 		movswl	(%r14,%rax,2), %eax
 3124      46
 3125              	.LVL343:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3126              		.loc 1 787 13 view .LVU1032
 3127 0197 85C0     		testl	%eax, %eax
 3128 0199 0F85D101 		jne	.L298
 3128      0000
 3129 019f 83C302   		addl	$2, %ebx
 3130 01a2 4C63E3   		movslq	%ebx, %r12
 3131              	.LVL344:
 3132              		.p2align 4,,10
 3133 01a5 0F1F00   		.p2align 3
 3134              	.L282:
 788:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;
 3135              		.loc 1 788 2 is_stmt 1 view .LVU1033
 3136 01a8 488D7501 		leaq	1(%rbp), %rsi
 3137 01ac 31D2     		xorl	%edx, %edx
 3138 01ae 4C89FF   		movq	%r15, %rdi
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3139              		.loc 1 787 13 is_stmt 0 view .LVU1034
 3140 01b1 4489E3   		movl	%r12d, %ebx
 788:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;
 3141              		.loc 1 788 2 view .LVU1035
 3142 01b4 E8000000 		call	arith_encode
 3142      00
 3143              	.LVL345:
 789:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3144              		.loc 1 789 2 is_stmt 1 view .LVU1036
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3145              		.loc 1 787 27 is_stmt 0 view .LVU1037
 3146 01b9 4B6344A5 		movslq	0(%r13,%r12,4), %rax
 3146      00
 789:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3147              		.loc 1 789 5 view .LVU1038
 3148 01be 4883C503 		addq	$3, %rbp
 3149              	.LVL346:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3150              		.loc 1 787 13 is_stmt 1 view .LVU1039
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3151              		.loc 1 787 13 is_stmt 0 view .LVU1040
 3152 01c2 4983C401 		addq	$1, %r12
 3153              	.LVL347:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3154              		.loc 1 787 17 view .LVU1041
 3155 01c6 410FBF04 		movswl	(%r14,%rax,2), %eax
 3155      46
 3156              	.LVL348:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3157              		.loc 1 787 13 view .LVU1042
 3158 01cb 85C0     		testl	%eax, %eax
 3159 01cd 74D9     		je	.L282
 3160              	.L281:
 791:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 3161              		.loc 1 791 7 view .LVU1043
 3162 01cf 488D7501 		leaq	1(%rbp), %rsi
 3163 01d3 BA010000 		movl	$1, %edx
 3163      00
 3164 01d8 4C89FF   		movq	%r15, %rdi
 3165 01db 89442408 		movl	%eax, 8(%rsp)
 791:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 3166              		.loc 1 791 7 is_stmt 1 view .LVU1044
 3167 01df E8000000 		call	arith_encode
 3167      00
 3168              	.LVL349:
 794:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 0);
 3169              		.loc 1 794 7 view .LVU1045
 794:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 0);
 3170              		.loc 1 794 10 is_stmt 0 view .LVU1046
 3171 01e4 8B442408 		movl	8(%rsp), %eax
 3172 01e8 85C0     		testl	%eax, %eax
 3173 01ea 7E74     		jle	.L283
 795:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 3174              		.loc 1 795 2 is_stmt 1 view .LVU1047
 3175 01ec 488B7424 		movq	48(%rsp), %rsi
 3175      30
 3176 01f1 31D2     		xorl	%edx, %edx
 3177 01f3 4C89FF   		movq	%r15, %rdi
 800:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 3178              		.loc 1 800 10 is_stmt 0 view .LVU1048
 3179 01f6 4C8D6502 		leaq	2(%rbp), %r12
 795:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 3180              		.loc 1 795 2 view .LVU1049
 3181 01fa E8000000 		call	arith_encode
 3181      00
 3182              	.LVL350:
 3183 01ff 8B442408 		movl	8(%rsp), %eax
 3184              	.LVL351:
 800:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 3185              		.loc 1 800 7 is_stmt 1 view .LVU1050
 802:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3186              		.loc 1 802 7 view .LVU1051
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3187              		.loc 1 803 7 view .LVU1052
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3188              		.loc 1 803 10 is_stmt 0 view .LVU1053
 3189 0203 83E801   		subl	$1, %eax
 3190              	.LVL352:
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3191              		.loc 1 803 10 view .LVU1054
 3192 0206 89442408 		movl	%eax, 8(%rsp)
 3193 020a 757D     		jne	.L324
 3194              	.LVL353:
 3195              	.L285:
 819:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3196              		.loc 1 819 7 is_stmt 1 view .LVU1055
 3197 020c 31D2     		xorl	%edx, %edx
 3198 020e 4C89E6   		movq	%r12, %rsi
 3199 0211 4C89FF   		movq	%r15, %rdi
 3200 0214 E8000000 		call	arith_encode
 3200      00
 3201              	.LVL354:
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3202              		.loc 1 821 7 view .LVU1056
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3203              		.loc 1 822 7 view .LVU1057
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3204              		.loc 1 822 13 view .LVU1058
 3205              	.L290:
 784:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3206              		.loc 1 784 17 view .LVU1059
 784:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3207              		.loc 1 784 5 is_stmt 0 view .LVU1060
 3208 0219 395C2428 		cmpl	%ebx, 40(%rsp)
 3209 021d 0F8F45FF 		jg	.L292
 3209      FFFF
 3210 0223 418B8FE8 		movl	488(%r15), %ecx
 3210      010000
 3211              	.LVL355:
 3212              	.L279:
 826:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3213              		.loc 1 826 5 is_stmt 1 view .LVU1061
 826:fltk-1.3.4-1/jpeg/jcarith.c ****       st = entropy->ac_stats[tbl] + 3 * k;
 3214              		.loc 1 826 8 is_stmt 0 view .LVU1062
 3215 022a 39CB     		cmpl	%ecx, %ebx
 3216 022c 0F8D3EFE 		jge	.L276
 3216      FFFF
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3217              		.loc 1 827 7 is_stmt 1 view .LVU1063
 3218              	.LVL356:
 828:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3219              		.loc 1 828 7 view .LVU1064
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3220              		.loc 1 827 29 is_stmt 0 view .LVU1065
 3221 0232 48634424 		movslq	76(%rsp), %rax
 3221      4C
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3222              		.loc 1 827 10 view .LVU1066
 3223 0237 488B4C24 		movq	56(%rsp), %rcx
 3223      38
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3224              		.loc 1 827 39 view .LVU1067
 3225 023c 8D345B   		leal	(%rbx,%rbx,2), %esi
 828:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3226              		.loc 1 828 7 view .LVU1068
 3227 023f 4C89FF   		movq	%r15, %rdi
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3228              		.loc 1 827 39 view .LVU1069
 3229 0242 4863F6   		movslq	%esi, %rsi
 828:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3230              		.loc 1 828 7 view .LVU1070
 3231 0245 BA010000 		movl	$1, %edx
 3231      00
 827:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3232              		.loc 1 827 10 view .LVU1071
 3233 024a 4803B4C1 		addq	232(%rcx,%rax,8), %rsi
 3233      E8000000 
 828:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3234              		.loc 1 828 7 view .LVU1072
 3235 0252 E8000000 		call	arith_encode
 3235      00
 3236              	.LVL357:
 828:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3237              		.loc 1 828 7 view .LVU1073
 3238 0257 E914FEFF 		jmp	.L276
 3238      FF
 3239              	.LVL358:
 3240 025c 0F1F4000 		.p2align 4,,10
 3241              		.p2align 3
 3242              	.L283:
 797:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 1);
 3243              		.loc 1 797 2 is_stmt 1 view .LVU1074
 798:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3244              		.loc 1 798 2 is_stmt 0 view .LVU1075
 3245 0260 488B7424 		movq	48(%rsp), %rsi
 3245      30
 797:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 1);
 3246              		.loc 1 797 4 view .LVU1076
 3247 0265 F7D8     		negl	%eax
 798:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3248              		.loc 1 798 2 view .LVU1077
 3249 0267 BA010000 		movl	$1, %edx
 3249      00
 3250 026c 4C89FF   		movq	%r15, %rdi
 797:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, entropy->fixed_bin, 1);
 3251              		.loc 1 797 4 view .LVU1078
 3252 026f 89442408 		movl	%eax, 8(%rsp)
 3253              	.LVL359:
 798:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3254              		.loc 1 798 2 is_stmt 1 view .LVU1079
 800:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 3255              		.loc 1 800 10 is_stmt 0 view .LVU1080
 3256 0273 4C8D6502 		leaq	2(%rbp), %r12
 798:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3257              		.loc 1 798 2 view .LVU1081
 3258 0277 E8000000 		call	arith_encode
 3258      00
 3259              	.LVL360:
 798:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3260              		.loc 1 798 2 view .LVU1082
 3261 027c 8B442408 		movl	8(%rsp), %eax
 3262              	.LVL361:
 800:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.8: Encoding the magnitude category of v */
 3263              		.loc 1 800 7 is_stmt 1 view .LVU1083
 802:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3264              		.loc 1 802 7 view .LVU1084
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3265              		.loc 1 803 7 view .LVU1085
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3266              		.loc 1 803 10 is_stmt 0 view .LVU1086
 3267 0280 83E801   		subl	$1, %eax
 3268              	.LVL362:
 803:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3269              		.loc 1 803 10 view .LVU1087
 3270 0283 89442408 		movl	%eax, 8(%rsp)
 3271 0287 7483     		je	.L285
 3272              	.L324:
 804:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 3273              		.loc 1 804 2 is_stmt 1 view .LVU1088
 3274 0289 BA010000 		movl	$1, %edx
 3274      00
 3275 028e 4C89E6   		movq	%r12, %rsi
 3276 0291 4C89FF   		movq	%r15, %rdi
 3277 0294 E8000000 		call	arith_encode
 3277      00
 3278              	.LVL363:
 805:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 3279              		.loc 1 805 2 view .LVU1089
 806:fltk-1.3.4-1/jpeg/jcarith.c **** 	if (v2 >>= 1) {
 3280              		.loc 1 806 2 view .LVU1090
 807:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3281              		.loc 1 807 2 view .LVU1091
 807:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3282              		.loc 1 807 5 is_stmt 0 view .LVU1092
 3283 0299 8B442408 		movl	8(%rsp), %eax
 3284 029d D1E8     		shrl	%eax
 3285 029f 0F8467FF 		je	.L285
 3285      FFFF
 808:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 3286              		.loc 1 808 4 is_stmt 1 view .LVU1093
 3287 02a5 4C89E6   		movq	%r12, %rsi
 3288 02a8 BA010000 		movl	$1, %edx
 3288      00
 3289 02ad 4C89FF   		movq	%r15, %rdi
 3290 02b0 E8000000 		call	arith_encode
 3290      00
 3291              	.LVL364:
 809:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st = entropy->ac_stats[tbl] +
 3292              		.loc 1 809 4 view .LVU1094
 810:fltk-1.3.4-1/jpeg/jcarith.c **** 	       (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 3293              		.loc 1 810 4 view .LVU1095
 811:fltk-1.3.4-1/jpeg/jcarith.c **** 	  while (v2 >>= 1) {
 3294              		.loc 1 811 32 is_stmt 0 view .LVU1096
 3295 02b5 488B4424 		movq	88(%rsp), %rax
 3295      58
 811:fltk-1.3.4-1/jpeg/jcarith.c **** 	  while (v2 >>= 1) {
 3296              		.loc 1 811 44 view .LVU1097
 3297 02ba BEBD0000 		movl	$189, %esi
 3297      00
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3298              		.loc 1 812 10 view .LVU1098
 3299 02bf 8B6C2408 		movl	8(%rsp), %ebp
 811:fltk-1.3.4-1/jpeg/jcarith.c **** 	  while (v2 >>= 1) {
 3300              		.loc 1 811 32 view .LVU1099
 3301 02c3 410FB684 		movzbl	256(%r15,%rax), %eax
 3301      07000100 
 3301      00
 811:fltk-1.3.4-1/jpeg/jcarith.c **** 	  while (v2 >>= 1) {
 3302              		.loc 1 811 44 view .LVU1100
 3303 02cc 39D8     		cmpl	%ebx, %eax
 3304 02ce B8D90000 		movl	$217, %eax
 3304      00
 3305 02d3 480F4CF0 		cmovl	%rax, %rsi
 810:fltk-1.3.4-1/jpeg/jcarith.c **** 	       (k <= cinfo->arith_ac_K[tbl] ? 189 : 217);
 3306              		.loc 1 810 7 view .LVU1101
 3307 02d7 488B4424 		movq	32(%rsp), %rax
 3307      20
 3308 02dc 4803B0E8 		addq	232(%rax), %rsi
 3308      000000
 3309              	.LVL365:
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3310              		.loc 1 812 4 is_stmt 1 view .LVU1102
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3311              		.loc 1 812 10 view .LVU1103
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3312              		.loc 1 812 10 is_stmt 0 view .LVU1104
 3313 02e3 C1FD02   		sarl	$2, %ebp
 3314              	.LVL366:
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3315              		.loc 1 812 10 view .LVU1105
 3316 02e6 0F84A702 		je	.L287
 3316      0000
 809:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st = entropy->ac_stats[tbl] +
 3317              		.loc 1 809 6 view .LVU1106
 3318 02ec 895C2410 		movl	%ebx, 16(%rsp)
 3319 02f0 41BC0200 		movl	$2, %r12d
 3319      0000
 3320 02f6 4889F3   		movq	%rsi, %rbx
 3321              	.LVL367:
 3322 02f9 0F1F8000 		.p2align 4,,10
 3322      000000
 3323              		.p2align 3
 3324              	.L288:
 813:fltk-1.3.4-1/jpeg/jcarith.c **** 	    m <<= 1;
 3325              		.loc 1 813 6 is_stmt 1 view .LVU1107
 3326 0300 4889DE   		movq	%rbx, %rsi
 3327 0303 BA010000 		movl	$1, %edx
 3327      00
 3328 0308 4C89FF   		movq	%r15, %rdi
 814:fltk-1.3.4-1/jpeg/jcarith.c **** 	    st += 1;
 3329              		.loc 1 814 8 is_stmt 0 view .LVU1108
 3330 030b 4501E4   		addl	%r12d, %r12d
 3331              	.LVL368:
 813:fltk-1.3.4-1/jpeg/jcarith.c **** 	    m <<= 1;
 3332              		.loc 1 813 6 view .LVU1109
 3333 030e E8000000 		call	arith_encode
 3333      00
 3334              	.LVL369:
 814:fltk-1.3.4-1/jpeg/jcarith.c **** 	    st += 1;
 3335              		.loc 1 814 6 is_stmt 1 view .LVU1110
 815:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 3336              		.loc 1 815 6 view .LVU1111
 3337 0313 4889D8   		movq	%rbx, %rax
 815:fltk-1.3.4-1/jpeg/jcarith.c **** 	  }
 3338              		.loc 1 815 9 is_stmt 0 view .LVU1112
 3339 0316 4883C301 		addq	$1, %rbx
 3340              	.LVL370:
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3341              		.loc 1 812 10 is_stmt 1 view .LVU1113
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3342              		.loc 1 812 10 is_stmt 0 view .LVU1114
 3343 031a D1FD     		sarl	%ebp
 3344              	.LVL371:
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3345              		.loc 1 812 10 view .LVU1115
 3346 031c 75E2     		jne	.L288
 3347 031e 4489E5   		movl	%r12d, %ebp
 3348              	.LVL372:
 812:fltk-1.3.4-1/jpeg/jcarith.c **** 	    arith_encode(cinfo, st, 1);
 3349              		.loc 1 812 10 view .LVU1116
 3350 0321 4889DE   		movq	%rbx, %rsi
 3351 0324 4989C4   		movq	%rax, %r12
 3352              	.LVL373:
 819:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3353              		.loc 1 819 7 is_stmt 1 view .LVU1117
 3354 0327 31D2     		xorl	%edx, %edx
 3355 0329 4C89FF   		movq	%r15, %rdi
 3356 032c 8B5C2410 		movl	16(%rsp), %ebx
 3357              	.LVL374:
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3358              		.loc 1 821 10 is_stmt 0 view .LVU1118
 3359 0330 4983C40F 		addq	$15, %r12
 819:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3360              		.loc 1 819 7 view .LVU1119
 3361 0334 E8000000 		call	arith_encode
 3361      00
 3362              	.LVL375:
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3363              		.loc 1 821 7 is_stmt 1 view .LVU1120
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3364              		.loc 1 822 7 view .LVU1121
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3365              		.loc 1 822 13 view .LVU1122
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3366              		.loc 1 822 13 is_stmt 0 view .LVU1123
 3367 0339 D1FD     		sarl	%ebp
 3368              	.LVL376:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3369              		.loc 1 822 13 view .LVU1124
 3370 033b 0F84D8FE 		je	.L290
 3370      FFFF
 3371 0341 895C2410 		movl	%ebx, 16(%rsp)
 3372              	.LVL377:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3373              		.loc 1 822 13 view .LVU1125
 3374 0345 89EB     		movl	%ebp, %ebx
 3375 0347 8B6C2408 		movl	8(%rsp), %ebp
 3376              	.LVL378:
 3377 034b 0F1F4400 		.p2align 4,,10
 3377      00
 3378              		.p2align 3
 3379              	.L289:
 823:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3380              		.loc 1 823 2 is_stmt 1 view .LVU1126
 3381 0350 31D2     		xorl	%edx, %edx
 3382 0352 85DD     		testl	%ebx, %ebp
 3383 0354 4C89E6   		movq	%r12, %rsi
 3384 0357 4C89FF   		movq	%r15, %rdi
 3385 035a 0F95C2   		setne	%dl
 3386 035d E8000000 		call	arith_encode
 3386      00
 3387              	.LVL379:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3388              		.loc 1 822 13 view .LVU1127
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3389              		.loc 1 822 13 is_stmt 0 view .LVU1128
 3390 0362 D1FB     		sarl	%ebx
 3391              	.LVL380:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3392              		.loc 1 822 13 view .LVU1129
 3393 0364 75EA     		jne	.L289
 3394 0366 8B5C2410 		movl	16(%rsp), %ebx
 3395              	.LVL381:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3396              		.loc 1 822 13 view .LVU1130
 3397 036a E9AAFEFF 		jmp	.L290
 3397      FF
 3398              	.LVL382:
 3399 036f 90       		.p2align 4,,10
 3400              		.p2align 3
 3401              	.L298:
 787:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);
 3402              		.loc 1 787 13 view .LVU1131
 3403 0370 89D3     		movl	%edx, %ebx
 3404 0372 E958FEFF 		jmp	.L281
 3404      FF
 3405              	.LVL383:
 3406              	.L265:
 734:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3407              		.loc 1 734 32 view .LVU1132
 3408 0377 894B40   		movl	%ecx, 64(%rbx)
 3409              	.LVL384:
 735:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 3410              		.loc 1 735 7 view .LVU1133
 3411 037a 4C89EE   		movq	%r13, %rsi
 3412 037d BA010000 		movl	$1, %edx
 3412      00
 3413              	.LVL385:
 735:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 3414              		.loc 1 735 7 view .LVU1134
 3415 0382 4C89FF   		movq	%r15, %rdi
 3416 0385 4C894C24 		movq	%r9, 40(%rsp)
 3416      28
 3417 038a 44894424 		movl	%r8d, 32(%rsp)
 3417      20
 3418 038f 48894424 		movq	%rax, 16(%rsp)
 3418      10
 734:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3419              		.loc 1 734 7 is_stmt 1 view .LVU1135
 734:fltk-1.3.4-1/jpeg/jcarith.c ****       arith_encode(cinfo, st, 1);
 3420              		.loc 1 734 32 is_stmt 0 view .LVU1136
 3421 0394 894C2408 		movl	%ecx, 8(%rsp)
 735:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.6: Encoding nonzero value v */
 3422              		.loc 1 735 7 is_stmt 1 view .LVU1137
 3423 0398 E8000000 		call	arith_encode
 3423      00
 3424              	.LVL386:
 738:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 3425              		.loc 1 738 7 view .LVU1138
 738:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
 3426              		.loc 1 738 10 is_stmt 0 view .LVU1139
 3427 039d 488B4424 		movq	16(%rsp), %rax
 3427      10
 3428 03a2 85ED     		testl	%ebp, %ebp
 3429 03a4 8B4C2408 		movl	8(%rsp), %ecx
 3430 03a8 4C8B4C24 		movq	40(%rsp), %r9
 3430      28
 3431 03ad 448B4424 		movl	32(%rsp), %r8d
 3431      20
 3432 03b2 498D7501 		leaq	1(%r13), %rsi
 3433 03b6 48894424 		movq	%rax, 8(%rsp)
 3433      08
 3434 03bb 4C894C24 		movq	%r9, 16(%rsp)
 3434      10
 3435 03c0 0F8EDA00 		jle	.L267
 3435      0000
 739:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 2;			/* Table F.4: SP = S0 + 2 */
 3436              		.loc 1 739 2 is_stmt 1 view .LVU1140
 3437 03c6 31D2     		xorl	%edx, %edx
 3438 03c8 4C89FF   		movq	%r15, %rdi
 3439 03cb E8000000 		call	arith_encode
 3439      00
 3440              	.LVL387:
 740:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 3441              		.loc 1 740 2 view .LVU1141
 740:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 4;	/* small positive diff category */
 3442              		.loc 1 740 5 is_stmt 0 view .LVU1142
 3443 03d0 498D7502 		leaq	2(%r13), %rsi
 3444              	.LVL388:
 741:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 3445              		.loc 1 741 2 is_stmt 1 view .LVU1143
 749:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3446              		.loc 1 749 9 is_stmt 0 view .LVU1144
 3447 03d4 4531C0   		xorl	%r8d, %r8d
 3448 03d7 4531ED   		xorl	%r13d, %r13d
 741:fltk-1.3.4-1/jpeg/jcarith.c ****       } else {
 3449              		.loc 1 741 26 view .LVU1145
 3450 03da C7435004 		movl	$4, 80(%rbx)
 3450      000000
 3451 03e1 488B4424 		movq	8(%rsp), %rax
 3451      08
 3452 03e6 4C8B4C24 		movq	16(%rsp), %r9
 3452      10
 749:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3453              		.loc 1 749 7 is_stmt 1 view .LVU1146
 3454              	.LVL389:
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3455              		.loc 1 750 7 view .LVU1147
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3456              		.loc 1 750 10 is_stmt 0 view .LVU1148
 3457 03eb 83ED01   		subl	$1, %ebp
 3458              	.LVL390:
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3459              		.loc 1 750 10 view .LVU1149
 3460 03ee 0F85E300 		jne	.L325
 3460      0000
 3461              	.LVL391:
 3462              	.L269:
 761:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 3463              		.loc 1 761 7 view .LVU1150
 3464 03f4 31D2     		xorl	%edx, %edx
 3465 03f6 4C89FF   		movq	%r15, %rdi
 3466 03f9 4C894C24 		movq	%r9, 32(%rsp)
 3466      20
 3467 03fe 44894424 		movl	%r8d, 16(%rsp)
 3467      10
 761:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
 3468              		.loc 1 761 7 is_stmt 1 view .LVU1151
 3469 0403 48897424 		movq	%rsi, 8(%rsp)
 3469      08
 3470 0408 E8000000 		call	arith_encode
 3470      00
 3471              	.LVL392:
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3472              		.loc 1 763 7 view .LVU1152
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3473              		.loc 1 763 46 is_stmt 0 view .LVU1153
 3474 040d 4C8B4C24 		movq	32(%rsp), %r9
 3474      20
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3475              		.loc 1 763 26 view .LVU1154
 3476 0412 B8010000 		movl	$1, %eax
 3476      00
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3477              		.loc 1 763 10 view .LVU1155
 3478 0417 448B4424 		movl	16(%rsp), %r8d
 3478      10
 3479 041c 488B7424 		movq	8(%rsp), %rsi
 3479      08
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3480              		.loc 1 763 46 view .LVU1156
 3481 0421 430FB68C 		movzbl	224(%r15,%r9), %ecx
 3481      0FE00000 
 3481      00
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3482              		.loc 1 763 26 view .LVU1157
 3483 042a 48D3E0   		salq	%cl, %rax
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3484              		.loc 1 763 53 view .LVU1158
 3485 042d 48D1F8   		sarq	%rax
 763:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 0;	/* zero diff category */
 3486              		.loc 1 763 10 view .LVU1159
 3487 0430 4139C0   		cmpl	%eax, %r8d
 3488 0433 7D38     		jge	.L271
 764:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 3489              		.loc 1 764 2 is_stmt 1 view .LVU1160
 764:fltk-1.3.4-1/jpeg/jcarith.c ****       else if (m > (int) ((1L << cinfo->arith_dc_U[tbl]) >> 1))
 3490              		.loc 1 764 26 is_stmt 0 view .LVU1161
 3491 0435 C7435000 		movl	$0, 80(%rbx)
 3491      000000
 3492              	.L272:
 768:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3493              		.loc 1 768 7 is_stmt 1 view .LVU1162
 768:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3494              		.loc 1 768 10 is_stmt 0 view .LVU1163
 3495 043c 488D5E0E 		leaq	14(%rsi), %rbx
 3496              	.LVL393:
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3497              		.loc 1 769 7 is_stmt 1 view .LVU1164
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3498              		.loc 1 769 13 view .LVU1165
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3499              		.loc 1 769 13 is_stmt 0 view .LVU1166
 3500 0440 4585ED   		testl	%r13d, %r13d
 3501 0443 0F849EFC 		je	.L266
 3501      FFFF
 3502 0449 0F1F8000 		.p2align 4,,10
 3502      000000
 3503              		.p2align 3
 3504              	.L273:
 3505              	.LVL394:
 770:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3506              		.loc 1 770 2 is_stmt 1 view .LVU1167
 3507 0450 31D2     		xorl	%edx, %edx
 3508 0452 4485ED   		testl	%r13d, %ebp
 3509 0455 4889DE   		movq	%rbx, %rsi
 3510 0458 4C89FF   		movq	%r15, %rdi
 3511 045b 0F95C2   		setne	%dl
 3512 045e E8000000 		call	arith_encode
 3512      00
 3513              	.LVL395:
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3514              		.loc 1 769 13 view .LVU1168
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3515              		.loc 1 769 13 is_stmt 0 view .LVU1169
 3516 0463 41D1FD   		sarl	%r13d
 3517              	.LVL396:
 769:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3518              		.loc 1 769 13 view .LVU1170
 3519 0466 75E8     		jne	.L273
 3520 0468 E97AFCFF 		jmp	.L266
 3520      FF
 3521              	.LVL397:
 3522              	.L271:
 765:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 3523              		.loc 1 765 12 is_stmt 1 view .LVU1171
 765:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 3524              		.loc 1 765 51 is_stmt 0 view .LVU1172
 3525 046d 430FB68C 		movzbl	240(%r15,%r9), %ecx
 3525      0FF00000 
 3525      00
 765:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 3526              		.loc 1 765 31 view .LVU1173
 3527 0476 B8010000 		movl	$1, %eax
 3527      00
 3528 047b 48D3E0   		salq	%cl, %rax
 765:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 3529              		.loc 1 765 58 view .LVU1174
 3530 047e 48D1F8   		sarq	%rax
 765:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] += 8;	/* large diff category */
 3531              		.loc 1 765 15 view .LVU1175
 3532 0481 4139C0   		cmpl	%eax, %r8d
 3533 0484 7EB6     		jle	.L272
 766:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3534              		.loc 1 766 2 is_stmt 1 view .LVU1176
 766:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3535              		.loc 1 766 26 is_stmt 0 view .LVU1177
 3536 0486 83435008 		addl	$8, 80(%rbx)
 3537 048a EBB0     		jmp	.L272
 3538              	.LVL398:
 3539              	.L320:
 833:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3540              		.loc 1 833 1 view .LVU1178
 3541 048c 4883C468 		addq	$104, %rsp
 3542              		.cfi_remember_state
 3543              		.cfi_def_cfa_offset 56
 3544 0490 B8010000 		movl	$1, %eax
 3544      00
 3545 0495 5B       		popq	%rbx
 3546              		.cfi_def_cfa_offset 48
 3547 0496 5D       		popq	%rbp
 3548              		.cfi_def_cfa_offset 40
 3549 0497 415C     		popq	%r12
 3550              		.cfi_def_cfa_offset 32
 3551 0499 415D     		popq	%r13
 3552              		.cfi_def_cfa_offset 24
 3553 049b 415E     		popq	%r14
 3554              		.cfi_def_cfa_offset 16
 3555 049d 415F     		popq	%r15
 3556              		.cfi_def_cfa_offset 8
 3557              	.LVL399:
 833:fltk-1.3.4-1/jpeg/jcarith.c **** 
 3558              		.loc 1 833 1 view .LVU1179
 3559 049f C3       		ret
 3560              	.LVL400:
 3561              	.L267:
 3562              		.cfi_restore_state
 743:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 3563              		.loc 1 743 2 is_stmt 1 view .LVU1180
 743:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 3564              		.loc 1 743 4 is_stmt 0 view .LVU1181
 3565 04a0 4129C8   		subl	%ecx, %r8d
 744:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 3566              		.loc 1 744 2 view .LVU1182
 3567 04a3 BA010000 		movl	$1, %edx
 3567      00
 3568 04a8 4C89FF   		movq	%r15, %rdi
 743:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
 3569              		.loc 1 743 4 view .LVU1183
 3570 04ab 4489C5   		movl	%r8d, %ebp
 3571              	.LVL401:
 744:fltk-1.3.4-1/jpeg/jcarith.c **** 	st += 3;			/* Table F.4: SN = S0 + 3 */
 3572              		.loc 1 744 2 is_stmt 1 view .LVU1184
 3573 04ae E8000000 		call	arith_encode
 3573      00
 3574              	.LVL402:
 745:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 3575              		.loc 1 745 2 view .LVU1185
 745:fltk-1.3.4-1/jpeg/jcarith.c **** 	entropy->dc_context[ci] = 8;	/* small negative diff category */
 3576              		.loc 1 745 5 is_stmt 0 view .LVU1186
 3577 04b3 498D7503 		leaq	3(%r13), %rsi
 3578              	.LVL403:
 746:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3579              		.loc 1 746 2 is_stmt 1 view .LVU1187
 749:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3580              		.loc 1 749 9 is_stmt 0 view .LVU1188
 3581 04b7 4531C0   		xorl	%r8d, %r8d
 3582 04ba 4531ED   		xorl	%r13d, %r13d
 746:fltk-1.3.4-1/jpeg/jcarith.c ****       }
 3583              		.loc 1 746 26 view .LVU1189
 3584 04bd C7435008 		movl	$8, 80(%rbx)
 3584      000000
 3585 04c4 4C8B4C24 		movq	16(%rsp), %r9
 3585      10
 3586 04c9 488B4424 		movq	8(%rsp), %rax
 3586      08
 749:fltk-1.3.4-1/jpeg/jcarith.c ****       if (v -= 1) {
 3587              		.loc 1 749 7 is_stmt 1 view .LVU1190
 3588              	.LVL404:
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3589              		.loc 1 750 7 view .LVU1191
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3590              		.loc 1 750 10 is_stmt 0 view .LVU1192
 3591 04ce 83ED01   		subl	$1, %ebp
 3592              	.LVL405:
 750:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, 1);
 3593              		.loc 1 750 10 view .LVU1193
 3594 04d1 0F841DFF 		je	.L269
 3594      FFFF
 3595              	.L325:
 751:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 3596              		.loc 1 751 2 view .LVU1194
 3597 04d7 BA010000 		movl	$1, %edx
 3597      00
 3598 04dc 4C89FF   		movq	%r15, %rdi
 3599 04df 4C894C24 		movq	%r9, 16(%rsp)
 3599      10
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3600              		.loc 1 755 8 view .LVU1195
 3601 04e4 4189ED   		movl	%ebp, %r13d
 3602 04e7 48894424 		movq	%rax, 8(%rsp)
 3602      08
 751:fltk-1.3.4-1/jpeg/jcarith.c **** 	m = 1;
 3603              		.loc 1 751 2 is_stmt 1 view .LVU1196
 3604 04ec E8000000 		call	arith_encode
 3604      00
 3605              	.LVL406:
 752:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 3606              		.loc 1 752 2 view .LVU1197
 753:fltk-1.3.4-1/jpeg/jcarith.c **** 	st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
 3607              		.loc 1 753 2 view .LVU1198
 754:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 3608              		.loc 1 754 2 view .LVU1199
 754:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 3609              		.loc 1 754 5 is_stmt 0 view .LVU1200
 3610 04f1 488B4424 		movq	8(%rsp), %rax
 3610      08
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3611              		.loc 1 755 8 view .LVU1201
 3612 04f6 4C8B4C24 		movq	16(%rsp), %r9
 3612      10
 752:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 3613              		.loc 1 752 4 view .LVU1202
 3614 04fb 41B80100 		movl	$1, %r8d
 3614      0000
 754:fltk-1.3.4-1/jpeg/jcarith.c **** 	while (v2 >>= 1) {
 3615              		.loc 1 754 5 view .LVU1203
 3616 0501 488B7068 		movq	104(%rax), %rsi
 3617 0505 4883C614 		addq	$20, %rsi
 3618              	.LVL407:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3619              		.loc 1 755 2 is_stmt 1 view .LVU1204
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3620              		.loc 1 755 8 view .LVU1205
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3621              		.loc 1 755 8 is_stmt 0 view .LVU1206
 3622 0509 41D1FD   		sarl	%r13d
 3623              	.LVL408:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3624              		.loc 1 755 8 view .LVU1207
 3625 050c 0F84E2FE 		je	.L269
 3625      FFFF
 752:fltk-1.3.4-1/jpeg/jcarith.c **** 	v2 = v;
 3626              		.loc 1 752 4 view .LVU1208
 3627 0512 4C894C24 		movq	%r9, 32(%rsp)
 3627      20
 3628 0517 48895C24 		movq	%rbx, 8(%rsp)
 3628      08
 3629 051c 4489C3   		movl	%r8d, %ebx
 3630 051f 896C2410 		movl	%ebp, 16(%rsp)
 3631 0523 4889F5   		movq	%rsi, %rbp
 3632              	.LVL409:
 3633 0526 662E0F1F 		.p2align 4,,10
 3633      84000000 
 3633      0000
 3634              		.p2align 3
 3635              	.L270:
 756:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 3636              		.loc 1 756 4 is_stmt 1 view .LVU1209
 3637 0530 4889EE   		movq	%rbp, %rsi
 3638 0533 BA010000 		movl	$1, %edx
 3638      00
 3639 0538 4C89FF   		movq	%r15, %rdi
 757:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 3640              		.loc 1 757 6 is_stmt 0 view .LVU1210
 3641 053b 01DB     		addl	%ebx, %ebx
 756:fltk-1.3.4-1/jpeg/jcarith.c **** 	  m <<= 1;
 3642              		.loc 1 756 4 view .LVU1211
 3643 053d E8000000 		call	arith_encode
 3643      00
 3644              	.LVL410:
 757:fltk-1.3.4-1/jpeg/jcarith.c **** 	  st += 1;
 3645              		.loc 1 757 4 is_stmt 1 view .LVU1212
 758:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 3646              		.loc 1 758 4 view .LVU1213
 758:fltk-1.3.4-1/jpeg/jcarith.c **** 	}
 3647              		.loc 1 758 7 is_stmt 0 view .LVU1214
 3648 0542 4883C501 		addq	$1, %rbp
 3649              	.LVL411:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3650              		.loc 1 755 8 is_stmt 1 view .LVU1215
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3651              		.loc 1 755 8 is_stmt 0 view .LVU1216
 3652 0546 41D1FD   		sarl	%r13d
 3653              	.LVL412:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3654              		.loc 1 755 8 view .LVU1217
 3655 0549 75E5     		jne	.L270
 3656 054b 4189D8   		movl	%ebx, %r8d
 3657 054e 4889EE   		movq	%rbp, %rsi
 3658 0551 488B5C24 		movq	8(%rsp), %rbx
 3658      08
 3659 0556 8B6C2410 		movl	16(%rsp), %ebp
 3660              	.LVL413:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3661              		.loc 1 755 8 view .LVU1218
 3662 055a 4589C5   		movl	%r8d, %r13d
 3663              	.LVL414:
 755:fltk-1.3.4-1/jpeg/jcarith.c **** 	  arith_encode(cinfo, st, 1);
 3664              		.loc 1 755 8 view .LVU1219
 3665 055d 4C8B4C24 		movq	32(%rsp), %r9
 3665      20
 3666 0562 41D1FD   		sarl	%r13d
 3667 0565 E98AFEFF 		jmp	.L269
 3667      FF
 3668              	.LVL415:
 3669              	.L323:
 706:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 3670              		.loc 1 706 7 is_stmt 1 view .LVU1220
 3671 056a 488B5C24 		movq	56(%rsp), %rbx
 3671      38
 3672 056f 8B7364   		movl	100(%rbx), %esi
 3673              	.LVL416:
 706:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 3674              		.loc 1 706 7 is_stmt 0 view .LVU1221
 3675 0572 E8000000 		call	emit_restart
 3675      00
 3676              	.LVL417:
 707:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 3677              		.loc 1 707 7 is_stmt 1 view .LVU1222
 708:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 3678              		.loc 1 708 32 is_stmt 0 view .LVU1223
 3679 0577 8B7B64   		movl	100(%rbx), %edi
 707:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num++;
 3680              		.loc 1 707 38 view .LVU1224
 3681 057a 418B873C 		movl	316(%r15), %eax
 3681      010000
 708:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 3682              		.loc 1 708 7 is_stmt 1 view .LVU1225
 709:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3683              		.loc 1 709 7 view .LVU1226
 708:fltk-1.3.4-1/jpeg/jcarith.c ****       entropy->next_restart_num &= 7;
 3684              		.loc 1 708 32 is_stmt 0 view .LVU1227
 3685 0581 8D5701   		leal	1(%rdi), %edx
 3686 0584 897C2408 		movl	%edi, 8(%rsp)
 709:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3687              		.loc 1 709 33 view .LVU1228
 3688 0588 83E207   		andl	$7, %edx
 3689 058b 895364   		movl	%edx, 100(%rbx)
 3690 058e E9A8FAFF 		jmp	.L263
 3690      FF
 3691              	.LVL418:
 3692              	.L287:
 819:fltk-1.3.4-1/jpeg/jcarith.c ****       /* Figure F.9: Encoding the magnitude bit pattern of v */
 3693              		.loc 1 819 7 is_stmt 1 view .LVU1229
 3694 0593 31D2     		xorl	%edx, %edx
 3695 0595 4C89FF   		movq	%r15, %rdi
 3696 0598 48897424 		movq	%rsi, 16(%rsp)
 3696      10
 3697 059d E8000000 		call	arith_encode
 3697      00
 3698              	.LVL419:
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3699              		.loc 1 821 7 view .LVU1230
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3700              		.loc 1 822 7 view .LVU1231
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3701              		.loc 1 822 13 view .LVU1232
 823:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3702              		.loc 1 823 2 view .LVU1233
 3703 05a2 8B542408 		movl	8(%rsp), %edx
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3704              		.loc 1 821 10 is_stmt 0 view .LVU1234
 3705 05a6 488B7424 		movq	16(%rsp), %rsi
 3705      10
 823:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3706              		.loc 1 823 2 view .LVU1235
 3707 05ab 4C89FF   		movq	%r15, %rdi
 3708 05ae 83E201   		andl	$1, %edx
 821:fltk-1.3.4-1/jpeg/jcarith.c ****       while (m >>= 1)
 3709              		.loc 1 821 10 view .LVU1236
 3710 05b1 4883C60E 		addq	$14, %rsi
 3711              	.LVL420:
 823:fltk-1.3.4-1/jpeg/jcarith.c ****     }
 3712              		.loc 1 823 2 view .LVU1237
 3713 05b5 E8000000 		call	arith_encode
 3713      00
 3714              	.LVL421:
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3715              		.loc 1 822 13 is_stmt 1 view .LVU1238
 822:fltk-1.3.4-1/jpeg/jcarith.c **** 	arith_encode(cinfo, st, (m & v) ? 1 : 0);
 3716              		.loc 1 822 13 is_stmt 0 view .LVU1239
 3717 05ba E95AFCFF 		jmp	.L290
 3717      FF
 3718              		.cfi_endproc
 3719              	.LFE59:
 3721              		.section	.text.jinit_arith_encoder,"ax",@progbits
 3722              		.p2align 4
 3723              		.globl	jinit_arith_encoder
 3725              	jinit_arith_encoder:
 3726              	.LVL422:
 3727              	.LFB61:
 917:fltk-1.3.4-1/jpeg/jcarith.c **** 
 918:fltk-1.3.4-1/jpeg/jcarith.c **** 
 919:fltk-1.3.4-1/jpeg/jcarith.c **** /*
 920:fltk-1.3.4-1/jpeg/jcarith.c ****  * Module initialization routine for arithmetic entropy encoding.
 921:fltk-1.3.4-1/jpeg/jcarith.c ****  */
 922:fltk-1.3.4-1/jpeg/jcarith.c **** 
 923:fltk-1.3.4-1/jpeg/jcarith.c **** GLOBAL(void)
 924:fltk-1.3.4-1/jpeg/jcarith.c **** jinit_arith_encoder (j_compress_ptr cinfo)
 925:fltk-1.3.4-1/jpeg/jcarith.c **** {
 3728              		.loc 1 925 1 is_stmt 1 view -0
 3729              		.cfi_startproc
 3730              		.loc 1 925 1 is_stmt 0 view .LVU1241
 3731 0000 F30F1EFA 		endbr64
 926:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy;
 3732              		.loc 1 926 3 is_stmt 1 view .LVU1242
 927:fltk-1.3.4-1/jpeg/jcarith.c ****   int i;
 3733              		.loc 1 927 3 view .LVU1243
 928:fltk-1.3.4-1/jpeg/jcarith.c **** 
 929:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy = (arith_entropy_ptr)
 3734              		.loc 1 929 3 view .LVU1244
 930:fltk-1.3.4-1/jpeg/jcarith.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 3735              		.loc 1 930 6 is_stmt 0 view .LVU1245
 3736 0004 488B4708 		movq	8(%rdi), %rax
 925:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy;
 3737              		.loc 1 925 1 view .LVU1246
 3738 0008 53       		pushq	%rbx
 3739              		.cfi_def_cfa_offset 16
 3740              		.cfi_offset 3, -16
 3741              		.loc 1 930 6 view .LVU1247
 3742 0009 BA700100 		movl	$368, %edx
 3742      00
 925:fltk-1.3.4-1/jpeg/jcarith.c ****   arith_entropy_ptr entropy;
 3743              		.loc 1 925 1 view .LVU1248
 3744 000e 4889FB   		movq	%rdi, %rbx
 3745              		.loc 1 930 6 view .LVU1249
 3746 0011 BE010000 		movl	$1, %esi
 3746      00
 3747 0016 FF10     		call	*(%rax)
 3748              	.LVL423:
 931:fltk-1.3.4-1/jpeg/jcarith.c **** 				SIZEOF(arith_entropy_encoder));
 932:fltk-1.3.4-1/jpeg/jcarith.c ****   cinfo->entropy = &entropy->pub;
 3749              		.loc 1 932 3 is_stmt 1 view .LVU1250
 933:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->pub.start_pass = start_pass;
 3750              		.loc 1 933 27 is_stmt 0 view .LVU1251
 3751 0018 488D3500 		leaq	start_pass(%rip), %rsi
 3751      000000
 932:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->pub.start_pass = start_pass;
 3752              		.loc 1 932 18 view .LVU1252
 3753 001f 48898330 		movq	%rax, 560(%rbx)
 3753      020000
 3754              		.loc 1 933 3 is_stmt 1 view .LVU1253
 3755 0026 488D5068 		leaq	104(%rax), %rdx
 3756 002a 488D88E8 		leaq	232(%rax), %rcx
 3756      000000
 3757              		.loc 1 933 27 is_stmt 0 view .LVU1254
 3758 0031 488930   		movq	%rsi, (%rax)
 934:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->pub.finish_pass = finish_pass;
 3759              		.loc 1 934 3 is_stmt 1 view .LVU1255
 3760              		.loc 1 934 28 is_stmt 0 view .LVU1256
 3761 0034 488D3500 		leaq	finish_pass(%rip), %rsi
 3761      000000
 3762 003b 48897010 		movq	%rsi, 16(%rax)
 935:fltk-1.3.4-1/jpeg/jcarith.c **** 
 936:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Mark tables unallocated */
 937:fltk-1.3.4-1/jpeg/jcarith.c ****   for (i = 0; i < NUM_ARITH_TBLS; i++) {
 3763              		.loc 1 937 3 is_stmt 1 view .LVU1257
 3764              	.LVL424:
 3765              		.loc 1 937 15 view .LVU1258
 3766 003f 90       		.p2align 4,,10
 3767              		.p2align 3
 3768              	.L327:
 938:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->dc_stats[i] = NULL;
 3769              		.loc 1 938 5 discriminator 3 view .LVU1259
 3770              		.loc 1 938 26 is_stmt 0 discriminator 3 view .LVU1260
 3771 0040 48C70200 		movq	$0, (%rdx)
 3771      000000
 939:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->ac_stats[i] = NULL;
 3772              		.loc 1 939 5 is_stmt 1 discriminator 3 view .LVU1261
 3773 0047 4883C208 		addq	$8, %rdx
 3774              		.loc 1 939 26 is_stmt 0 discriminator 3 view .LVU1262
 3775 004b 48C74278 		movq	$0, 120(%rdx)
 3775      00000000 
 937:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->dc_stats[i] = NULL;
 3776              		.loc 1 937 35 is_stmt 1 discriminator 3 view .LVU1263
 937:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->dc_stats[i] = NULL;
 3777              		.loc 1 937 15 discriminator 3 view .LVU1264
 937:fltk-1.3.4-1/jpeg/jcarith.c ****     entropy->dc_stats[i] = NULL;
 3778              		.loc 1 937 3 is_stmt 0 discriminator 3 view .LVU1265
 3779 0053 4839CA   		cmpq	%rcx, %rdx
 3780 0056 75E8     		jne	.L327
 940:fltk-1.3.4-1/jpeg/jcarith.c ****   }
 941:fltk-1.3.4-1/jpeg/jcarith.c **** 
 942:fltk-1.3.4-1/jpeg/jcarith.c ****   /* Initialize index for fixed probability estimation */
 943:fltk-1.3.4-1/jpeg/jcarith.c ****   entropy->fixed_bin[0] = 113;
 3781              		.loc 1 943 3 is_stmt 1 view .LVU1266
 3782              		.loc 1 943 25 is_stmt 0 view .LVU1267
 3783 0058 C6806801 		movb	$113, 360(%rax)
 3783      000071
 944:fltk-1.3.4-1/jpeg/jcarith.c **** }
 3784              		.loc 1 944 1 view .LVU1268
 3785 005f 5B       		popq	%rbx
 3786              		.cfi_def_cfa_offset 8
 3787              	.LVL425:
 3788              		.loc 1 944 1 view .LVU1269
 3789 0060 C3       		ret
 3790              		.cfi_endproc
 3791              	.LFE61:
 3793              		.text
 3794              	.Letext0:
 3795              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 3796              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3797              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 3798              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 3799              		.file 7 "/usr/include/stdio.h"
 3800              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3801              		.file 9 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 3802              		.file 10 "fltk-1.3.4-1/jpeg/jpeglib.h"
 3803              		.file 11 "fltk-1.3.4-1/jpeg/jpegint.h"
 3804              		.file 12 "fltk-1.3.4-1/jpeg/jerror.h"
 21645              		.section	.note.gnu.property,"a"
 21646              		.align 8
 21647 0000 04000000 		.long	 1f - 0f
 21648 0004 10000000 		.long	 4f - 1f
 21649 0008 05000000 		.long	 5
 21650              	0:
 21651 000c 474E5500 		.string	 "GNU"
 21652              	1:
 21653              		.align 8
 21654 0010 020000C0 		.long	 0xc0000002
 21655 0014 04000000 		.long	 3f - 2f
 21656              	2:
 21657 0018 03000000 		.long	 0x3
 21658              	3:
 21659 001c 00000000 		.align 8
 21660              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jcarith.c
     /tmp/cc5thmuH.s:7      .text.start_pass:0000000000000000 start_pass
     /tmp/cc5thmuH.s:1754   .text.encode_mcu_AC_first:0000000000000000 encode_mcu_AC_first
     /tmp/cc5thmuH.s:1309   .text.encode_mcu_DC_first:0000000000000000 encode_mcu_DC_first
     /tmp/cc5thmuH.s:2894   .text.encode_mcu:0000000000000000 encode_mcu
     /tmp/cc5thmuH.s:2443   .text.encode_mcu_AC_refine:0000000000000000 encode_mcu_AC_refine
     /tmp/cc5thmuH.s:2298   .text.encode_mcu_DC_refine:0000000000000000 encode_mcu_DC_refine
     /tmp/cc5thmuH.s:345    .text.emit_byte:0000000000000000 emit_byte
     /tmp/cc5thmuH.s:429    .text.finish_pass:0000000000000000 finish_pass
     /tmp/cc5thmuH.s:745    .text.arith_encode:0000000000000000 arith_encode
     /tmp/cc5thmuH.s:1114   .text.emit_restart:0000000000000000 emit_restart
     /tmp/cc5thmuH.s:3725   .text.jinit_arith_encoder:0000000000000000 jinit_arith_encoder
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
jpeg_aritab
