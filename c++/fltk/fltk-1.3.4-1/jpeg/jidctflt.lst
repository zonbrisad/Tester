   1              		.file	"jidctflt.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.jpeg_idct_float,"ax",@progbits
   5              		.p2align 4
   6              		.globl	jpeg_idct_float
   8              	jpeg_idct_float:
   9              	.LVL0:
  10              	.LFB51:
  11              		.file 1 "fltk-1.3.4-1/jpeg/jidctflt.c"
   1:fltk-1.3.4-1/jpeg/jidctflt.c **** /*
   2:fltk-1.3.4-1/jpeg/jidctflt.c ****  * jidctflt.c
   3:fltk-1.3.4-1/jpeg/jidctflt.c ****  *
   4:fltk-1.3.4-1/jpeg/jidctflt.c ****  * Copyright (C) 1994-1998, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jidctflt.c ****  * Modified 2010 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jidctflt.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jidctflt.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jidctflt.c ****  *
   9:fltk-1.3.4-1/jpeg/jidctflt.c ****  * This file contains a floating-point implementation of the
  10:fltk-1.3.4-1/jpeg/jidctflt.c ****  * inverse DCT (Discrete Cosine Transform).  In the IJG code, this routine
  11:fltk-1.3.4-1/jpeg/jidctflt.c ****  * must also perform dequantization of the input coefficients.
  12:fltk-1.3.4-1/jpeg/jidctflt.c ****  *
  13:fltk-1.3.4-1/jpeg/jidctflt.c ****  * This implementation should be more accurate than either of the integer
  14:fltk-1.3.4-1/jpeg/jidctflt.c ****  * IDCT implementations.  However, it may not give the same results on all
  15:fltk-1.3.4-1/jpeg/jidctflt.c ****  * machines because of differences in roundoff behavior.  Speed will depend
  16:fltk-1.3.4-1/jpeg/jidctflt.c ****  * on the hardware's floating point capacity.
  17:fltk-1.3.4-1/jpeg/jidctflt.c ****  *
  18:fltk-1.3.4-1/jpeg/jidctflt.c ****  * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT
  19:fltk-1.3.4-1/jpeg/jidctflt.c ****  * on each row (or vice versa, but it's more convenient to emit a row at
  20:fltk-1.3.4-1/jpeg/jidctflt.c ****  * a time).  Direct algorithms are also available, but they are much more
  21:fltk-1.3.4-1/jpeg/jidctflt.c ****  * complex and seem not to be any faster when reduced to code.
  22:fltk-1.3.4-1/jpeg/jidctflt.c ****  *
  23:fltk-1.3.4-1/jpeg/jidctflt.c ****  * This implementation is based on Arai, Agui, and Nakajima's algorithm for
  24:fltk-1.3.4-1/jpeg/jidctflt.c ****  * scaled DCT.  Their original paper (Trans. IEICE E-71(11):1095) is in
  25:fltk-1.3.4-1/jpeg/jidctflt.c ****  * Japanese, but the algorithm is described in the Pennebaker & Mitchell
  26:fltk-1.3.4-1/jpeg/jidctflt.c ****  * JPEG textbook (see REFERENCES section in file README).  The following code
  27:fltk-1.3.4-1/jpeg/jidctflt.c ****  * is based directly on figure 4-8 in P&M.
  28:fltk-1.3.4-1/jpeg/jidctflt.c ****  * While an 8-point DCT cannot be done in less than 11 multiplies, it is
  29:fltk-1.3.4-1/jpeg/jidctflt.c ****  * possible to arrange the computation so that many of the multiplies are
  30:fltk-1.3.4-1/jpeg/jidctflt.c ****  * simple scalings of the final outputs.  These multiplies can then be
  31:fltk-1.3.4-1/jpeg/jidctflt.c ****  * folded into the multiplications or divisions by the JPEG quantization
  32:fltk-1.3.4-1/jpeg/jidctflt.c ****  * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
  33:fltk-1.3.4-1/jpeg/jidctflt.c ****  * to be done in the DCT itself.
  34:fltk-1.3.4-1/jpeg/jidctflt.c ****  * The primary disadvantage of this method is that with a fixed-point
  35:fltk-1.3.4-1/jpeg/jidctflt.c ****  * implementation, accuracy is lost due to imprecise representation of the
  36:fltk-1.3.4-1/jpeg/jidctflt.c ****  * scaled quantization values.  However, that problem does not arise if
  37:fltk-1.3.4-1/jpeg/jidctflt.c ****  * we use floating point arithmetic.
  38:fltk-1.3.4-1/jpeg/jidctflt.c ****  */
  39:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  40:fltk-1.3.4-1/jpeg/jidctflt.c **** #define JPEG_INTERNALS
  41:fltk-1.3.4-1/jpeg/jidctflt.c **** #include "jinclude.h"
  42:fltk-1.3.4-1/jpeg/jidctflt.c **** #include "jpeglib.h"
  43:fltk-1.3.4-1/jpeg/jidctflt.c **** #include "jdct.h"		/* Private declarations for DCT subsystem */
  44:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  45:fltk-1.3.4-1/jpeg/jidctflt.c **** #ifdef DCT_FLOAT_SUPPORTED
  46:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  47:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  48:fltk-1.3.4-1/jpeg/jidctflt.c **** /*
  49:fltk-1.3.4-1/jpeg/jidctflt.c ****  * This module is specialized to the case DCTSIZE = 8.
  50:fltk-1.3.4-1/jpeg/jidctflt.c ****  */
  51:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  52:fltk-1.3.4-1/jpeg/jidctflt.c **** #if DCTSIZE != 8
  53:fltk-1.3.4-1/jpeg/jidctflt.c ****   Sorry, this code only copes with 8x8 DCTs. /* deliberate syntax err */
  54:fltk-1.3.4-1/jpeg/jidctflt.c **** #endif
  55:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  56:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  57:fltk-1.3.4-1/jpeg/jidctflt.c **** /* Dequantize a coefficient by multiplying it by the multiplier-table
  58:fltk-1.3.4-1/jpeg/jidctflt.c ****  * entry; produce a float result.
  59:fltk-1.3.4-1/jpeg/jidctflt.c ****  */
  60:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  61:fltk-1.3.4-1/jpeg/jidctflt.c **** #define DEQUANTIZE(coef,quantval)  (((FAST_FLOAT) (coef)) * (quantval))
  62:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  63:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  64:fltk-1.3.4-1/jpeg/jidctflt.c **** /*
  65:fltk-1.3.4-1/jpeg/jidctflt.c ****  * Perform dequantization and inverse DCT on one block of coefficients.
  66:fltk-1.3.4-1/jpeg/jidctflt.c ****  */
  67:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  68:fltk-1.3.4-1/jpeg/jidctflt.c **** GLOBAL(void)
  69:fltk-1.3.4-1/jpeg/jidctflt.c **** jpeg_idct_float (j_decompress_ptr cinfo, jpeg_component_info * compptr,
  70:fltk-1.3.4-1/jpeg/jidctflt.c **** 		 JCOEFPTR coef_block,
  71:fltk-1.3.4-1/jpeg/jidctflt.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
  72:fltk-1.3.4-1/jpeg/jidctflt.c **** {
  12              		.loc 1 72 1 view -0
  13              		.cfi_startproc
  14              		.loc 1 72 1 is_stmt 0 view .LVU1
  15 0000 F30F1EFA 		endbr64
  16 0004 4157     		pushq	%r15
  17              		.cfi_def_cfa_offset 16
  18              		.cfi_offset 15, -16
  19 0006 4156     		pushq	%r14
  20              		.cfi_def_cfa_offset 24
  21              		.cfi_offset 14, -24
  22 0008 4155     		pushq	%r13
  23              		.cfi_def_cfa_offset 32
  24              		.cfi_offset 13, -32
  25 000a 4154     		pushq	%r12
  26              		.cfi_def_cfa_offset 40
  27              		.cfi_offset 12, -40
  28 000c 55       		pushq	%rbp
  29              		.cfi_def_cfa_offset 48
  30              		.cfi_offset 6, -48
  31 000d 53       		pushq	%rbx
  32              		.cfi_def_cfa_offset 56
  33              		.cfi_offset 3, -56
  34 000e 4881EC28 		subq	$296, %rsp
  34      010000
  35              		.cfi_def_cfa_offset 352
  73:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  74:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT tmp10, tmp11, tmp12, tmp13;
  75:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT z5, z10, z11, z12, z13;
  76:fltk-1.3.4-1/jpeg/jidctflt.c ****   JCOEFPTR inptr;
  77:fltk-1.3.4-1/jpeg/jidctflt.c ****   FLOAT_MULT_TYPE * quantptr;
  78:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT * wsptr;
  79:fltk-1.3.4-1/jpeg/jidctflt.c ****   JSAMPROW outptr;
  80:fltk-1.3.4-1/jpeg/jidctflt.c ****   JSAMPLE *range_limit = cinfo->sample_range_limit;
  36              		.loc 1 80 12 view .LVU2
  37 0015 4C8BB7B8 		movq	440(%rdi), %r14
  37      010000
  81:fltk-1.3.4-1/jpeg/jidctflt.c ****   int ctr;
  82:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT workspace[DCTSIZE2]; /* buffers data between passes */
  83:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  84:fltk-1.3.4-1/jpeg/jidctflt.c ****   /* Pass 1: process columns from input, store into work array. */
  85:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  86:fltk-1.3.4-1/jpeg/jidctflt.c ****   inptr = coef_block;
  87:fltk-1.3.4-1/jpeg/jidctflt.c ****   quantptr = (FLOAT_MULT_TYPE *) compptr->dct_table;
  38              		.loc 1 87 12 view .LVU3
  39 001c 4C8B5E58 		movq	88(%rsi), %r11
  72:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  40              		.loc 1 72 1 view .LVU4
  41 0020 48894C24 		movq	%rcx, 8(%rsp)
  41      08
  88:fltk-1.3.4-1/jpeg/jidctflt.c ****   wsptr = workspace;
  42              		.loc 1 88 9 view .LVU5
  43 0025 4C8D4C24 		leaq	16(%rsp), %r9
  43      10
  44 002a F30F1015 		movss	.LC0(%rip), %xmm2
  44      00000000 
  45 0032 4C8D7C24 		leaq	48(%rsp), %r15
  45      30
  46 0037 F30F101D 		movss	.LC1(%rip), %xmm3
  46      00000000 
  47 003f F30F1025 		movss	.LC2(%rip), %xmm4
  47      00000000 
  48 0047 4D89CA   		movq	%r9, %r10
  49 004a F30F102D 		movss	.LC3(%rip), %xmm5
  49      00000000 
  72:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  50              		.loc 1 72 1 view .LVU6
  51 0052 64488B04 		movq	%fs:40, %rax
  51      25280000 
  51      00
  52 005b 48898424 		movq	%rax, 280(%rsp)
  52      18010000 
  53 0063 31C0     		xorl	%eax, %eax
  73:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT tmp10, tmp11, tmp12, tmp13;
  54              		.loc 1 73 3 is_stmt 1 view .LVU7
  74:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT z5, z10, z11, z12, z13;
  55              		.loc 1 74 3 view .LVU8
  75:fltk-1.3.4-1/jpeg/jidctflt.c ****   JCOEFPTR inptr;
  56              		.loc 1 75 3 view .LVU9
  76:fltk-1.3.4-1/jpeg/jidctflt.c ****   FLOAT_MULT_TYPE * quantptr;
  57              		.loc 1 76 3 view .LVU10
  77:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT * wsptr;
  58              		.loc 1 77 3 view .LVU11
  78:fltk-1.3.4-1/jpeg/jidctflt.c ****   JSAMPROW outptr;
  59              		.loc 1 78 3 view .LVU12
  79:fltk-1.3.4-1/jpeg/jidctflt.c ****   JSAMPLE *range_limit = cinfo->sample_range_limit;
  60              		.loc 1 79 3 view .LVU13
  80:fltk-1.3.4-1/jpeg/jidctflt.c ****   int ctr;
  61              		.loc 1 80 3 view .LVU14
  62              	.LVL1:
  81:fltk-1.3.4-1/jpeg/jidctflt.c ****   FAST_FLOAT workspace[DCTSIZE2]; /* buffers data between passes */
  63              		.loc 1 81 3 view .LVU15
  82:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  64              		.loc 1 82 3 view .LVU16
  86:fltk-1.3.4-1/jpeg/jidctflt.c ****   quantptr = (FLOAT_MULT_TYPE *) compptr->dct_table;
  65              		.loc 1 86 3 view .LVU17
  87:fltk-1.3.4-1/jpeg/jidctflt.c ****   wsptr = workspace;
  66              		.loc 1 87 3 view .LVU18
  67              		.loc 1 88 3 view .LVU19
  89:fltk-1.3.4-1/jpeg/jidctflt.c ****   for (ctr = DCTSIZE; ctr > 0; ctr--) {
  68              		.loc 1 89 3 view .LVU20
  69              		.loc 1 89 23 view .LVU21
  70 0065 E9860100 		jmp	.L4
  70      00
  71              	.LVL2:
  72 006a 660F1F44 		.p2align 4,,10
  72      0000
  73              		.p2align 3
  74              	.L2:
  90:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Due to quantization, we will usually find that many of the input
  91:fltk-1.3.4-1/jpeg/jidctflt.c ****      * coefficients are zero, especially the AC terms.  We can exploit this
  92:fltk-1.3.4-1/jpeg/jidctflt.c ****      * by short-circuiting the IDCT calculation for any column in which all
  93:fltk-1.3.4-1/jpeg/jidctflt.c ****      * the AC terms are zero.  In that case each output is equal to the
  94:fltk-1.3.4-1/jpeg/jidctflt.c ****      * DC coefficient (with scale factor as needed).
  95:fltk-1.3.4-1/jpeg/jidctflt.c ****      * With typical images and quantization tables, half or more of the
  96:fltk-1.3.4-1/jpeg/jidctflt.c ****      * column DCT calculations can be simplified this way.
  97:fltk-1.3.4-1/jpeg/jidctflt.c ****      */
  98:fltk-1.3.4-1/jpeg/jidctflt.c ****     
  99:fltk-1.3.4-1/jpeg/jidctflt.c ****     if (inptr[DCTSIZE*1] == 0 && inptr[DCTSIZE*2] == 0 &&
 100:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 101:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 102:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*7] == 0) {
 103:fltk-1.3.4-1/jpeg/jidctflt.c ****       /* AC terms all zero */
 104:fltk-1.3.4-1/jpeg/jidctflt.c ****       FAST_FLOAT dcval = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 105:fltk-1.3.4-1/jpeg/jidctflt.c ****       
 106:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*0] = dcval;
 107:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*1] = dcval;
 108:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*2] = dcval;
 109:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*3] = dcval;
 110:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*4] = dcval;
 111:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*5] = dcval;
 112:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*6] = dcval;
 113:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*7] = dcval;
 114:fltk-1.3.4-1/jpeg/jidctflt.c ****       
 115:fltk-1.3.4-1/jpeg/jidctflt.c ****       inptr++;			/* advance pointers to next column */
 116:fltk-1.3.4-1/jpeg/jidctflt.c ****       quantptr++;
 117:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr++;
 118:fltk-1.3.4-1/jpeg/jidctflt.c ****       continue;
 119:fltk-1.3.4-1/jpeg/jidctflt.c ****     }
 120:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 121:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Even part */
 122:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 123:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
  75              		.loc 1 123 5 view .LVU22
 124:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
  76              		.loc 1 124 5 view .LVU23
 125:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  77              		.loc 1 125 12 is_stmt 0 view .LVU24
  78 0070 660FEFFF 		pxor	%xmm7, %xmm7
 124:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
  79              		.loc 1 124 12 view .LVU25
  80 0074 660FEFC0 		pxor	%xmm0, %xmm0
 126:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
  81              		.loc 1 126 12 view .LVU26
  82 0078 660FEFF6 		pxor	%xmm6, %xmm6
 125:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  83              		.loc 1 125 12 view .LVU27
  84 007c F3410F2A 		cvtsi2ssl	%r12d, %xmm7
  84      FC
 125:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  85              		.loc 1 125 10 view .LVU28
  86 0081 F3410F59 		mulss	124(%r11), %xmm7
  86      7B7C
 127:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 128:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = tmp0 + tmp2;	/* phase 3 */
 129:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = tmp0 - tmp2;
 130:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 131:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp13 = tmp1 + tmp3;	/* phases 5-3 */
 132:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (tmp1 - tmp3) * ((FAST_FLOAT) 1.414213562) - tmp13; /* 2*c4 */
 133:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 134:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp0 = tmp10 + tmp13;	/* phase 2 */
 135:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 136:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 137:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 138:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 139:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Odd part */
 140:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 141:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
  87              		.loc 1 141 12 view .LVU29
  88 0087 66450FEF 		pxor	%xmm11, %xmm11
  88      DB
 124:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  89              		.loc 1 124 12 view .LVU30
  90 008c F3410F2A 		cvtsi2ssl	%r13d, %xmm0
  90      C5
 124:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  91              		.loc 1 124 10 view .LVU31
  92 0091 F3410F59 		mulss	60(%r11), %xmm0
  92      433C
  93              	.LVL3:
 125:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
  94              		.loc 1 125 5 is_stmt 1 view .LVU32
 126:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  95              		.loc 1 126 5 view .LVU33
 126:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  96              		.loc 1 126 12 is_stmt 0 view .LVU34
  97 0097 F30F2AF5 		cvtsi2ssl	%ebp, %xmm6
 126:fltk-1.3.4-1/jpeg/jidctflt.c **** 
  98              		.loc 1 126 10 view .LVU35
  99 009b F3410F59 		mulss	188(%r11), %xmm6
  99      B3BC0000 
  99      00
 100              	.LVL4:
 128:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = tmp0 - tmp2;
 101              		.loc 1 128 5 is_stmt 1 view .LVU36
 102              		.loc 1 141 12 is_stmt 0 view .LVU37
 103 00a4 F3440F2A 		cvtsi2ssl	%ebx, %xmm11
 103      DB
 104              		.loc 1 141 10 view .LVU38
 105 00a9 F3450F59 		mulss	28(%r11), %xmm11
 105      5B1C
 128:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = tmp0 - tmp2;
 106              		.loc 1 128 11 view .LVU39
 107 00af 440F28C7 		movaps	%xmm7, %xmm8
 108 00b3 F3440F58 		addss	%xmm1, %xmm8
 108      C1
 109              	.LVL5:
 129:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 110              		.loc 1 129 5 is_stmt 1 view .LVU40
 129:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 111              		.loc 1 129 11 is_stmt 0 view .LVU41
 112 00b8 F30F5CCF 		subss	%xmm7, %xmm1
 113              	.LVL6:
 131:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (tmp1 - tmp3) * ((FAST_FLOAT) 1.414213562) - tmp13; /* 2*c4 */
 114              		.loc 1 131 5 is_stmt 1 view .LVU42
 131:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (tmp1 - tmp3) * ((FAST_FLOAT) 1.414213562) - tmp13; /* 2*c4 */
 115              		.loc 1 131 11 is_stmt 0 view .LVU43
 116 00bc 0F28F8   		movaps	%xmm0, %xmm7
 117              	.LVL7:
 132:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 118              		.loc 1 132 19 view .LVU44
 119 00bf F30F5CC6 		subss	%xmm6, %xmm0
 120              	.LVL8:
 131:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (tmp1 - tmp3) * ((FAST_FLOAT) 1.414213562) - tmp13; /* 2*c4 */
 121              		.loc 1 131 11 view .LVU45
 122 00c3 F30F58FE 		addss	%xmm6, %xmm7
 123              	.LVL9:
 132:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 124              		.loc 1 132 5 is_stmt 1 view .LVU46
 142:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 143:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 144:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 125              		.loc 1 144 12 is_stmt 0 view .LVU47
 126 00c7 660FEFF6 		pxor	%xmm6, %xmm6
 127              	.LVL10:
 128              		.loc 1 144 12 view .LVU48
 129 00cb F30F2AF1 		cvtsi2ssl	%ecx, %xmm6
 130              		.loc 1 144 10 view .LVU49
 131 00cf F3410F59 		mulss	220(%r11), %xmm6
 131      B3DC0000 
 131      00
 134:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 132              		.loc 1 134 10 view .LVU50
 133 00d8 450F28D0 		movaps	%xmm8, %xmm10
 136:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 134              		.loc 1 136 10 view .LVU51
 135 00dc 440F28C9 		movaps	%xmm1, %xmm9
 132:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 136              		.loc 1 132 27 view .LVU52
 137 00e0 F30F59C2 		mulss	%xmm2, %xmm0
 134:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 138              		.loc 1 134 10 view .LVU53
 139 00e4 F3440F58 		addss	%xmm7, %xmm10
 139      D7
 135:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 140              		.loc 1 135 10 view .LVU54
 141 00e9 F3440F5C 		subss	%xmm7, %xmm8
 141      C7
 142              	.LVL11:
 132:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 143              		.loc 1 132 11 view .LVU55
 144 00ee F30F5CC7 		subss	%xmm7, %xmm0
 145              	.LVL12:
 134:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 146              		.loc 1 134 5 is_stmt 1 view .LVU56
 135:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 147              		.loc 1 135 5 view .LVU57
 136:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 148              		.loc 1 136 5 view .LVU58
 142:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 149              		.loc 1 142 12 is_stmt 0 view .LVU59
 150 00f2 660FEFFF 		pxor	%xmm7, %xmm7
 151              	.LVL13:
 142:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 152              		.loc 1 142 12 view .LVU60
 153 00f6 F30F2AFF 		cvtsi2ssl	%edi, %xmm7
 142:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 154              		.loc 1 142 10 view .LVU61
 155 00fa F3410F59 		mulss	92(%r11), %xmm7
 155      7B5C
 136:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 156              		.loc 1 136 10 view .LVU62
 157 0100 F3440F58 		addss	%xmm0, %xmm9
 157      C8
 158              	.LVL14:
 137:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 159              		.loc 1 137 5 is_stmt 1 view .LVU63
 137:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 160              		.loc 1 137 10 is_stmt 0 view .LVU64
 161 0105 F30F5CC8 		subss	%xmm0, %xmm1
 162              	.LVL15:
 141:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 163              		.loc 1 141 5 is_stmt 1 view .LVU65
 142:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 164              		.loc 1 142 5 view .LVU66
 143:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 165              		.loc 1 143 5 view .LVU67
 143:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 166              		.loc 1 143 12 is_stmt 0 view .LVU68
 167 0109 660FEFC0 		pxor	%xmm0, %xmm0
 168              	.LVL16:
 143:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 169              		.loc 1 143 12 view .LVU69
 170 010d F30F2AC6 		cvtsi2ssl	%esi, %xmm0
 143:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 171              		.loc 1 143 10 view .LVU70
 172 0111 F3410F59 		mulss	156(%r11), %xmm0
 172      839C0000 
 172      00
 173              	.LVL17:
 174              		.loc 1 144 5 is_stmt 1 view .LVU71
 145:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 146:fltk-1.3.4-1/jpeg/jidctflt.c ****     z13 = tmp6 + tmp5;		/* phase 6 */
 175              		.loc 1 146 5 view .LVU72
 176              		.loc 1 146 9 is_stmt 0 view .LVU73
 177 011a 440F28E7 		movaps	%xmm7, %xmm12
 178 011e F3440F58 		addss	%xmm0, %xmm12
 178      E0
 179              	.LVL18:
 147:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = tmp6 - tmp5;
 180              		.loc 1 147 5 is_stmt 1 view .LVU74
 181              		.loc 1 147 9 is_stmt 0 view .LVU75
 182 0123 F30F5CC7 		subss	%xmm7, %xmm0
 183              	.LVL19:
 148:fltk-1.3.4-1/jpeg/jidctflt.c ****     z11 = tmp4 + tmp7;
 184              		.loc 1 148 5 is_stmt 1 view .LVU76
 185              		.loc 1 148 9 is_stmt 0 view .LVU77
 186 0127 410F28FB 		movaps	%xmm11, %xmm7
 187              	.LVL20:
 149:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = tmp4 - tmp7;
 188              		.loc 1 149 9 view .LVU78
 189 012b F3440F5C 		subss	%xmm6, %xmm11
 189      DE
 190              	.LVL21:
 148:fltk-1.3.4-1/jpeg/jidctflt.c ****     z11 = tmp4 + tmp7;
 191              		.loc 1 148 9 view .LVU79
 192 0130 F30F58FE 		addss	%xmm6, %xmm7
 193              	.LVL22:
 194              		.loc 1 149 5 is_stmt 1 view .LVU80
 150:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 151:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = z11 + z13;		/* phase 5 */
 195              		.loc 1 151 5 view .LVU81
 152:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562); /* 2*c4 */
 153:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 154:fltk-1.3.4-1/jpeg/jidctflt.c ****     z5 = (z10 + z12) * ((FAST_FLOAT) 1.847759065); /* 2*c2 */
 196              		.loc 1 154 15 is_stmt 0 view .LVU82
 197 0134 0F28F0   		movaps	%xmm0, %xmm6
 198              	.LVL23:
 151:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562); /* 2*c4 */
 199              		.loc 1 151 10 view .LVU83
 200 0137 450F28EC 		movaps	%xmm12, %xmm13
 201              		.loc 1 154 15 view .LVU84
 202 013b F3410F58 		addss	%xmm11, %xmm6
 202      F3
 155:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 156:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 203              		.loc 1 156 22 view .LVU85
 204 0140 F30F59C4 		mulss	%xmm4, %xmm0
 205              	.LVL24:
 151:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562); /* 2*c4 */
 206              		.loc 1 151 10 view .LVU86
 207 0144 F3440F58 		addss	%xmm7, %xmm13
 207      EF
 208              	.LVL25:
 152:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 209              		.loc 1 152 5 is_stmt 1 view .LVU87
 154:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 210              		.loc 1 154 5 view .LVU88
 152:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 211              		.loc 1 152 18 is_stmt 0 view .LVU89
 212 0149 F3410F5C 		subss	%xmm12, %xmm7
 212      FC
 213              	.LVL26:
 155:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 214              		.loc 1 155 22 view .LVU90
 215 014e F3440F59 		mulss	%xmm5, %xmm11
 215      DD
 216              	.LVL27:
 154:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 217              		.loc 1 154 8 view .LVU91
 218 0153 F30F59F3 		mulss	%xmm3, %xmm6
 219              	.LVL28:
 155:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 220              		.loc 1 155 5 is_stmt 1 view .LVU92
 221              		.loc 1 156 5 view .LVU93
 157:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 158:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = tmp12 - tmp7;	/* phase 2 */
 222              		.loc 1 158 5 view .LVU94
 156:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 223              		.loc 1 156 11 is_stmt 0 view .LVU95
 224 0157 440F28F6 		movaps	%xmm6, %xmm14
 155:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 225              		.loc 1 155 11 view .LVU96
 226 015b F3410F5C 		subss	%xmm11, %xmm6
 226      F3
 227              	.LVL29:
 156:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 228              		.loc 1 156 11 view .LVU97
 229 0160 F3440F5C 		subss	%xmm0, %xmm14
 229      F0
 230              	.LVL30:
 152:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 231              		.loc 1 152 18 view .LVU98
 232 0165 0F28C7   		movaps	%xmm7, %xmm0
 159:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 160:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = tmp10 - tmp5;
 161:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 162:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*0] = tmp0 + tmp7;
 233              		.loc 1 162 29 view .LVU99
 234 0168 410F28FA 		movaps	%xmm10, %xmm7
 152:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 235              		.loc 1 152 11 view .LVU100
 236 016c F30F59C2 		mulss	%xmm2, %xmm0
 237              		.loc 1 162 29 view .LVU101
 238 0170 F3410F58 		addss	%xmm13, %xmm7
 238      FD
 163:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*7] = tmp0 - tmp7;
 239              		.loc 1 163 29 view .LVU102
 240 0175 F3450F5C 		subss	%xmm13, %xmm10
 240      D5
 241              	.LVL31:
 158:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 242              		.loc 1 158 10 view .LVU103
 243 017a F3450F5C 		subss	%xmm13, %xmm14
 243      F5
 244              	.LVL32:
 159:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 245              		.loc 1 159 5 is_stmt 1 view .LVU104
 162:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*7] = tmp0 - tmp7;
 246              		.loc 1 162 22 is_stmt 0 view .LVU105
 247 017f F3410F11 		movss	%xmm7, -4(%r10)
 247      7AFC
 164:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*1] = tmp1 + tmp6;
 248              		.loc 1 164 29 view .LVU106
 249 0185 410F28F9 		movaps	%xmm9, %xmm7
 163:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*1] = tmp1 + tmp6;
 250              		.loc 1 163 22 view .LVU107
 251 0189 F3450F11 		movss	%xmm10, 220(%r10)
 251      92DC0000 
 251      00
 159:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = tmp10 - tmp5;
 252              		.loc 1 159 10 view .LVU108
 253 0192 F3410F5C 		subss	%xmm14, %xmm0
 253      C6
 254              	.LVL33:
 160:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 255              		.loc 1 160 5 is_stmt 1 view .LVU109
 256              		.loc 1 164 29 is_stmt 0 view .LVU110
 257 0197 F3410F58 		addss	%xmm14, %xmm7
 257      FE
 165:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*6] = tmp1 - tmp6;
 258              		.loc 1 165 29 view .LVU111
 259 019c F3450F5C 		subss	%xmm14, %xmm9
 259      CE
 260              	.LVL34:
 160:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 261              		.loc 1 160 10 view .LVU112
 262 01a1 F30F5CF0 		subss	%xmm0, %xmm6
 263              	.LVL35:
 162:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*7] = tmp0 - tmp7;
 264              		.loc 1 162 5 is_stmt 1 view .LVU113
 163:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*1] = tmp1 + tmp6;
 265              		.loc 1 163 5 view .LVU114
 164:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*6] = tmp1 - tmp6;
 266              		.loc 1 164 5 view .LVU115
 164:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*6] = tmp1 - tmp6;
 267              		.loc 1 164 22 is_stmt 0 view .LVU116
 268 01a5 F3410F11 		movss	%xmm7, 28(%r10)
 268      7A1C
 269              		.loc 1 165 5 is_stmt 1 view .LVU117
 166:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*2] = tmp2 + tmp5;
 270              		.loc 1 166 29 is_stmt 0 view .LVU118
 271 01ab 0F28F9   		movaps	%xmm1, %xmm7
 167:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*5] = tmp2 - tmp5;
 272              		.loc 1 167 29 view .LVU119
 273 01ae F30F5CC8 		subss	%xmm0, %xmm1
 274              	.LVL36:
 165:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*2] = tmp2 + tmp5;
 275              		.loc 1 165 22 view .LVU120
 276 01b2 F3450F11 		movss	%xmm9, 188(%r10)
 276      8ABC0000 
 276      00
 166:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*2] = tmp2 + tmp5;
 277              		.loc 1 166 5 is_stmt 1 view .LVU121
 166:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*2] = tmp2 + tmp5;
 278              		.loc 1 166 29 is_stmt 0 view .LVU122
 279 01bb F30F58F8 		addss	%xmm0, %xmm7
 280              	.LVL37:
 168:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*3] = tmp3 + tmp4;
 281              		.loc 1 168 29 view .LVU123
 282 01bf 410F28C0 		movaps	%xmm8, %xmm0
 283              	.LVL38:
 284              		.loc 1 168 29 view .LVU124
 285 01c3 F30F58C6 		addss	%xmm6, %xmm0
 169:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*4] = tmp3 - tmp4;
 286              		.loc 1 169 29 view .LVU125
 287 01c7 F3440F5C 		subss	%xmm6, %xmm8
 287      C6
 288              	.LVL39:
 167:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*3] = tmp3 + tmp4;
 289              		.loc 1 167 22 view .LVU126
 290 01cc F3410F11 		movss	%xmm1, 156(%r10)
 290      8A9C0000 
 290      00
 166:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*5] = tmp2 - tmp5;
 291              		.loc 1 166 22 view .LVU127
 292 01d5 F3410F11 		movss	%xmm7, 60(%r10)
 292      7A3C
 167:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*3] = tmp3 + tmp4;
 293              		.loc 1 167 5 is_stmt 1 view .LVU128
 168:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*4] = tmp3 - tmp4;
 294              		.loc 1 168 5 view .LVU129
 168:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr[DCTSIZE*4] = tmp3 - tmp4;
 295              		.loc 1 168 22 is_stmt 0 view .LVU130
 296 01db F3410F11 		movss	%xmm0, 92(%r10)
 296      425C
 297              		.loc 1 169 5 is_stmt 1 view .LVU131
 298              		.loc 1 169 22 is_stmt 0 view .LVU132
 299 01e1 F3450F11 		movss	%xmm8, 124(%r10)
 299      427C
 170:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 171:fltk-1.3.4-1/jpeg/jidctflt.c ****     inptr++;			/* advance pointers to next column */
 300              		.loc 1 171 5 is_stmt 1 view .LVU133
 301              	.LVL40:
 172:fltk-1.3.4-1/jpeg/jidctflt.c ****     quantptr++;
 302              		.loc 1 172 5 view .LVU134
 173:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr++;
 303              		.loc 1 173 5 view .LVU135
 304              	.L3:
  89:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Due to quantization, we will usually find that many of the input
 305              		.loc 1 89 32 discriminator 2 view .LVU136
  89:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Due to quantization, we will usually find that many of the input
 306              		.loc 1 89 23 discriminator 2 view .LVU137
  89:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Due to quantization, we will usually find that many of the input
 307              		.loc 1 89 3 is_stmt 0 discriminator 2 view .LVU138
 308 01e7 4D39FA   		cmpq	%r15, %r10
 309 01ea 0F849000 		je	.L11
 309      0000
 310              	.L4:
  99:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 311              		.loc 1 99 5 is_stmt 1 view .LVU139
 312 01f0 0FBF02   		movswl	(%rdx), %eax
  99:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 313              		.loc 1 99 14 is_stmt 0 view .LVU140
 314 01f3 0FBF5A10 		movswl	16(%rdx), %ebx
 315 01f7 660FEFC9 		pxor	%xmm1, %xmm1
 316 01fb 4883C202 		addq	$2, %rdx
 317              	.LVL41:
  99:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 318              		.loc 1 99 14 view .LVU141
 319 01ff 0FBF7A2E 		movswl	46(%rdx), %edi
 320 0203 0FBF724E 		movswl	78(%rdx), %esi
 321 0207 4983C304 		addq	$4, %r11
 322              	.LVL42:
  99:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 323              		.loc 1 99 14 view .LVU142
 324 020b 4983C204 		addq	$4, %r10
 325              	.LVL43:
  99:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 326              		.loc 1 99 14 view .LVU143
 327 020f 440FBF6A 		movswl	30(%rdx), %r13d
 327      1E
 328 0214 F30F2AC8 		cvtsi2ssl	%eax, %xmm1
 101:fltk-1.3.4-1/jpeg/jidctflt.c **** 	inptr[DCTSIZE*7] == 0) {
 329              		.loc 1 101 49 view .LVU144
 330 0218 89D8     		movl	%ebx, %eax
 331 021a 440FBF62 		movswl	62(%rdx), %r12d
 331      3E
 332 021f 0FBF6A5E 		movswl	94(%rdx), %ebp
 333 0223 0FBF4A6E 		movswl	110(%rdx), %ecx
 334 0227 F3410F59 		mulss	-4(%r11), %xmm1
 334      4BFC
 335 022d 4409E8   		orl	%r13d, %eax
 336 0230 09F8     		orl	%edi, %eax
 337 0232 4409E0   		orl	%r12d, %eax
 338 0235 09F0     		orl	%esi, %eax
 339 0237 09E8     		orl	%ebp, %eax
 340 0239 6609C8   		orw	%cx, %ax
 341 023c 0F852EFE 		jne	.L2
 341      FFFF
 342              	.LBB2:
 104:fltk-1.3.4-1/jpeg/jidctflt.c ****       
 343              		.loc 1 104 7 is_stmt 1 view .LVU145
 344              	.LVL44:
 106:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*1] = dcval;
 345              		.loc 1 106 7 view .LVU146
 106:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*1] = dcval;
 346              		.loc 1 106 24 is_stmt 0 view .LVU147
 347 0242 F3410F11 		movss	%xmm1, -4(%r10)
 347      4AFC
 107:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*2] = dcval;
 348              		.loc 1 107 7 is_stmt 1 view .LVU148
 107:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*2] = dcval;
 349              		.loc 1 107 24 is_stmt 0 view .LVU149
 350 0248 F3410F11 		movss	%xmm1, 28(%r10)
 350      4A1C
 108:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*3] = dcval;
 351              		.loc 1 108 7 is_stmt 1 view .LVU150
 108:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*3] = dcval;
 352              		.loc 1 108 24 is_stmt 0 view .LVU151
 353 024e F3410F11 		movss	%xmm1, 60(%r10)
 353      4A3C
 109:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*4] = dcval;
 354              		.loc 1 109 7 is_stmt 1 view .LVU152
 109:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*4] = dcval;
 355              		.loc 1 109 24 is_stmt 0 view .LVU153
 356 0254 F3410F11 		movss	%xmm1, 92(%r10)
 356      4A5C
 110:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*5] = dcval;
 357              		.loc 1 110 7 is_stmt 1 view .LVU154
 110:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*5] = dcval;
 358              		.loc 1 110 24 is_stmt 0 view .LVU155
 359 025a F3410F11 		movss	%xmm1, 124(%r10)
 359      4A7C
 111:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*6] = dcval;
 360              		.loc 1 111 7 is_stmt 1 view .LVU156
 111:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*6] = dcval;
 361              		.loc 1 111 24 is_stmt 0 view .LVU157
 362 0260 F3410F11 		movss	%xmm1, 156(%r10)
 362      8A9C0000 
 362      00
 112:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*7] = dcval;
 363              		.loc 1 112 7 is_stmt 1 view .LVU158
 112:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr[DCTSIZE*7] = dcval;
 364              		.loc 1 112 24 is_stmt 0 view .LVU159
 365 0269 F3410F11 		movss	%xmm1, 188(%r10)
 365      8ABC0000 
 365      00
 113:fltk-1.3.4-1/jpeg/jidctflt.c ****       
 366              		.loc 1 113 7 is_stmt 1 view .LVU160
 113:fltk-1.3.4-1/jpeg/jidctflt.c ****       
 367              		.loc 1 113 24 is_stmt 0 view .LVU161
 368 0272 F3410F11 		movss	%xmm1, 220(%r10)
 368      8ADC0000 
 368      00
 115:fltk-1.3.4-1/jpeg/jidctflt.c ****       quantptr++;
 369              		.loc 1 115 7 is_stmt 1 view .LVU162
 370              	.LVL45:
 116:fltk-1.3.4-1/jpeg/jidctflt.c ****       wsptr++;
 371              		.loc 1 116 7 view .LVU163
 117:fltk-1.3.4-1/jpeg/jidctflt.c ****       continue;
 372              		.loc 1 117 7 view .LVU164
 118:fltk-1.3.4-1/jpeg/jidctflt.c ****     }
 373              		.loc 1 118 7 view .LVU165
 374 027b E967FFFF 		jmp	.L3
 374      FF
 375              	.LVL46:
 376              		.p2align 4,,10
 377              		.p2align 3
 378              	.L11:
 118:fltk-1.3.4-1/jpeg/jidctflt.c ****     }
 379              		.loc 1 118 7 is_stmt 0 view .LVU166
 380 0280 488B4C24 		movq	8(%rsp), %rcx
 380      08
 381 0285 4589C0   		movl	%r8d, %r8d
 118:fltk-1.3.4-1/jpeg/jidctflt.c ****     }
 382              		.loc 1 118 7 view .LVU167
 383 0288 F3440F10 		movss	.LC4(%rip), %xmm9
 383      0D000000 
 383      00
 384 0291 488DB424 		leaq	272(%rsp), %rsi
 384      10010000 
 385              	.LVL47:
 386 0299 0F1F8000 		.p2align 4,,10
 386      000000
 387              		.p2align 3
 388              	.L5:
 118:fltk-1.3.4-1/jpeg/jidctflt.c ****     }
 389              		.loc 1 118 7 view .LVU168
 390              	.LBE2:
 174:fltk-1.3.4-1/jpeg/jidctflt.c ****   }
 175:fltk-1.3.4-1/jpeg/jidctflt.c ****   
 176:fltk-1.3.4-1/jpeg/jidctflt.c ****   /* Pass 2: process rows from work array, store into output array. */
 177:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 178:fltk-1.3.4-1/jpeg/jidctflt.c ****   wsptr = workspace;
 179:fltk-1.3.4-1/jpeg/jidctflt.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
 180:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr = output_buf[ctr] + output_col;
 391              		.loc 1 180 5 is_stmt 1 discriminator 3 view .LVU169
 181:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 182:fltk-1.3.4-1/jpeg/jidctflt.c ****      * However, the column calculation has created many nonzero AC terms, so
 183:fltk-1.3.4-1/jpeg/jidctflt.c ****      * the simplification applies less often (typically 5% to 10% of the time).
 184:fltk-1.3.4-1/jpeg/jidctflt.c ****      * And testing floats for zero is relatively expensive, so we don't bother.
 185:fltk-1.3.4-1/jpeg/jidctflt.c ****      */
 186:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 187:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Even part */
 188:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 189:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Apply signed->unsigned and prepare float->int conversion */
 190:fltk-1.3.4-1/jpeg/jidctflt.c ****     z5 = wsptr[0] + ((FAST_FLOAT) CENTERJSAMPLE + (FAST_FLOAT) 0.5);
 392              		.loc 1 190 8 is_stmt 0 discriminator 3 view .LVU170
 393 02a0 F3450F10 		movss	(%r9), %xmm10
 393      11
 191:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 + wsptr[4];
 394              		.loc 1 191 23 discriminator 3 view .LVU171
 395 02a5 F3410F10 		movss	16(%r9), %xmm1
 395      4910
 192:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = z5 - wsptr[4];
 193:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp13 = wsptr[2] + wsptr[6];
 195:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 196:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 197:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp0 = tmp10 + tmp13;
 198:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 199:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 200:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 201:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 202:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Odd part */
 203:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z13 = wsptr[5] + wsptr[3];
 205:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z11 = wsptr[1] + wsptr[7];
 207:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 208:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 209:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp7 = z11 + z13;
 210:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562);
 211:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 212:fltk-1.3.4-1/jpeg/jidctflt.c ****     z5 = (z10 + z12) * ((FAST_FLOAT) 1.847759065); /* 2*c2 */
 213:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 214:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 215:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 216:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp6 = tmp12 - tmp7;
 217:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 218:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = tmp10 - tmp5;
 219:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 220:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Final output stage: float->int conversion and range-limit */
 221:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[0] = range_limit[((int) (tmp0 + tmp7)) & RANGE_MASK];
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 230:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 231:fltk-1.3.4-1/jpeg/jidctflt.c ****     wsptr += DCTSIZE;		/* advance pointer to next row */
 396              		.loc 1 231 11 discriminator 3 view .LVU172
 397 02ab 4983C120 		addq	$32, %r9
 398              	.LVL48:
 399              		.loc 1 231 11 discriminator 3 view .LVU173
 400 02af 4883C108 		addq	$8, %rcx
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 401              		.loc 1 194 29 discriminator 3 view .LVU174
 402 02b3 F3410F10 		movss	-8(%r9), %xmm6
 402      71F8
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 403              		.loc 1 204 16 discriminator 3 view .LVU175
 404 02b9 F3450F10 		movss	-12(%r9), %xmm12
 404      61F4
 190:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 + wsptr[4];
 405              		.loc 1 190 8 discriminator 3 view .LVU176
 406 02bf F3450F58 		addss	%xmm9, %xmm10
 406      D1
 191:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = z5 - wsptr[4];
 407              		.loc 1 191 11 discriminator 3 view .LVU177
 408 02c4 0F28C1   		movaps	%xmm1, %xmm0
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 409              		.loc 1 206 16 discriminator 3 view .LVU178
 410 02c7 F3450F10 		movss	-28(%r9), %xmm11
 410      59E4
 180:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 411              		.loc 1 180 12 discriminator 3 view .LVU179
 412 02cd 488B41F8 		movq	-8(%rcx), %rax
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 413              		.loc 1 204 9 discriminator 3 view .LVU180
 414 02d1 450F28F4 		movaps	%xmm12, %xmm14
 180:fltk-1.3.4-1/jpeg/jidctflt.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 415              		.loc 1 180 12 discriminator 3 view .LVU181
 416 02d5 4C01C0   		addq	%r8, %rax
 417              	.LVL49:
 190:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 + wsptr[4];
 418              		.loc 1 190 5 is_stmt 1 discriminator 3 view .LVU182
 191:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = z5 - wsptr[4];
 419              		.loc 1 191 5 discriminator 3 view .LVU183
 191:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = z5 - wsptr[4];
 420              		.loc 1 191 11 is_stmt 0 discriminator 3 view .LVU184
 421 02d8 F3410F58 		addss	%xmm10, %xmm0
 421      C2
 422              	.LVL50:
 192:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 423              		.loc 1 192 5 is_stmt 1 discriminator 3 view .LVU185
 192:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 424              		.loc 1 192 11 is_stmt 0 discriminator 3 view .LVU186
 425 02dd F3440F5C 		subss	%xmm1, %xmm10
 425      D1
 426              	.LVL51:
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 427              		.loc 1 194 5 is_stmt 1 discriminator 3 view .LVU187
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 428              		.loc 1 194 18 is_stmt 0 discriminator 3 view .LVU188
 429 02e2 F3410F10 		movss	-24(%r9), %xmm1
 429      49E8
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 430              		.loc 1 194 11 discriminator 3 view .LVU189
 431 02e8 0F28F9   		movaps	%xmm1, %xmm7
 195:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 432              		.loc 1 195 23 discriminator 3 view .LVU190
 433 02eb F30F5CCE 		subss	%xmm6, %xmm1
 194:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = (wsptr[2] - wsptr[6]) * ((FAST_FLOAT) 1.414213562) - tmp13;
 434              		.loc 1 194 11 discriminator 3 view .LVU191
 435 02ef F30F58FE 		addss	%xmm6, %xmm7
 436              	.LVL52:
 195:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 437              		.loc 1 195 5 is_stmt 1 discriminator 3 view .LVU192
 197:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 438              		.loc 1 197 10 is_stmt 0 discriminator 3 view .LVU193
 439 02f3 440F28C0 		movaps	%xmm0, %xmm8
 198:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 440              		.loc 1 198 10 discriminator 3 view .LVU194
 441 02f7 0F28F0   		movaps	%xmm0, %xmm6
 200:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 442              		.loc 1 200 10 discriminator 3 view .LVU195
 443 02fa 410F28C2 		movaps	%xmm10, %xmm0
 444              	.LVL53:
 195:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 445              		.loc 1 195 35 discriminator 3 view .LVU196
 446 02fe F30F59CA 		mulss	%xmm2, %xmm1
 197:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 447              		.loc 1 197 10 discriminator 3 view .LVU197
 448 0302 F3440F58 		addss	%xmm7, %xmm8
 448      C7
 198:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 449              		.loc 1 198 10 discriminator 3 view .LVU198
 450 0307 F30F5CF7 		subss	%xmm7, %xmm6
 451              	.LVL54:
 195:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 452              		.loc 1 195 11 discriminator 3 view .LVU199
 453 030b F30F5CCF 		subss	%xmm7, %xmm1
 454              	.LVL55:
 197:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp3 = tmp10 - tmp13;
 455              		.loc 1 197 5 is_stmt 1 discriminator 3 view .LVU200
 198:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp1 = tmp11 + tmp12;
 456              		.loc 1 198 5 discriminator 3 view .LVU201
 199:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 457              		.loc 1 199 5 discriminator 3 view .LVU202
 199:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 458              		.loc 1 199 10 is_stmt 0 discriminator 3 view .LVU203
 459 030f 410F28FA 		movaps	%xmm10, %xmm7
 460              	.LVL56:
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 461              		.loc 1 206 27 discriminator 3 view .LVU204
 462 0313 F3450F10 		movss	-4(%r9), %xmm10
 462      51FC
 463              	.LVL57:
 199:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp2 = tmp11 - tmp12;
 464              		.loc 1 199 10 discriminator 3 view .LVU205
 465 0319 F30F58F9 		addss	%xmm1, %xmm7
 466              	.LVL58:
 200:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 467              		.loc 1 200 5 is_stmt 1 discriminator 3 view .LVU206
 200:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 468              		.loc 1 200 10 is_stmt 0 discriminator 3 view .LVU207
 469 031d F30F5CC1 		subss	%xmm1, %xmm0
 470              	.LVL59:
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 471              		.loc 1 204 5 is_stmt 1 discriminator 3 view .LVU208
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 472              		.loc 1 204 27 is_stmt 0 discriminator 3 view .LVU209
 473 0321 F3410F10 		movss	-20(%r9), %xmm1
 473      49EC
 474              	.LVL60:
 205:fltk-1.3.4-1/jpeg/jidctflt.c ****     z11 = wsptr[1] + wsptr[7];
 475              		.loc 1 205 9 discriminator 3 view .LVU210
 476 0327 F3440F5C 		subss	%xmm1, %xmm12
 476      E1
 204:fltk-1.3.4-1/jpeg/jidctflt.c ****     z10 = wsptr[5] - wsptr[3];
 477              		.loc 1 204 9 discriminator 3 view .LVU211
 478 032c F3440F58 		addss	%xmm1, %xmm14
 478      F1
 479              	.LVL61:
 205:fltk-1.3.4-1/jpeg/jidctflt.c ****     z11 = wsptr[1] + wsptr[7];
 480              		.loc 1 205 5 is_stmt 1 discriminator 3 view .LVU212
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 481              		.loc 1 206 5 discriminator 3 view .LVU213
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 482              		.loc 1 206 9 is_stmt 0 discriminator 3 view .LVU214
 483 0331 410F28CB 		movaps	%xmm11, %xmm1
 207:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 484              		.loc 1 207 9 discriminator 3 view .LVU215
 485 0335 F3450F5C 		subss	%xmm10, %xmm11
 485      DA
 206:fltk-1.3.4-1/jpeg/jidctflt.c ****     z12 = wsptr[1] - wsptr[7];
 486              		.loc 1 206 9 discriminator 3 view .LVU216
 487 033a F3410F58 		addss	%xmm10, %xmm1
 487      CA
 488              	.LVL62:
 207:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 489              		.loc 1 207 5 is_stmt 1 discriminator 3 view .LVU217
 209:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562);
 490              		.loc 1 209 5 discriminator 3 view .LVU218
 212:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 491              		.loc 1 212 15 is_stmt 0 discriminator 3 view .LVU219
 492 033f 450F28D4 		movaps	%xmm12, %xmm10
 209:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562);
 493              		.loc 1 209 10 discriminator 3 view .LVU220
 494 0343 450F28EE 		movaps	%xmm14, %xmm13
 212:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 495              		.loc 1 212 15 discriminator 3 view .LVU221
 496 0347 F3450F58 		addss	%xmm11, %xmm10
 496      D3
 213:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 497              		.loc 1 213 22 discriminator 3 view .LVU222
 498 034c F3440F59 		mulss	%xmm5, %xmm11
 498      DD
 499              	.LVL63:
 209:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp11 = (z11 - z13) * ((FAST_FLOAT) 1.414213562);
 500              		.loc 1 209 10 discriminator 3 view .LVU223
 501 0351 F3440F58 		addss	%xmm1, %xmm13
 501      E9
 502              	.LVL64:
 210:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 503              		.loc 1 210 5 is_stmt 1 discriminator 3 view .LVU224
 212:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 504              		.loc 1 212 5 discriminator 3 view .LVU225
 214:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 505              		.loc 1 214 22 is_stmt 0 discriminator 3 view .LVU226
 506 0356 F3440F59 		mulss	%xmm4, %xmm12
 506      E4
 507              	.LVL65:
 210:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 508              		.loc 1 210 18 discriminator 3 view .LVU227
 509 035b F3410F5C 		subss	%xmm14, %xmm1
 509      CE
 510              	.LVL66:
 212:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp10 = z5 - z12 * ((FAST_FLOAT) 1.082392200); /* 2*(c2-c6) */
 511              		.loc 1 212 8 discriminator 3 view .LVU228
 512 0360 F3440F59 		mulss	%xmm3, %xmm10
 512      D3
 513              	.LVL67:
 213:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 514              		.loc 1 213 5 is_stmt 1 discriminator 3 view .LVU229
 214:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 515              		.loc 1 214 5 discriminator 3 view .LVU230
 216:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 516              		.loc 1 216 5 discriminator 3 view .LVU231
 210:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 517              		.loc 1 210 11 is_stmt 0 discriminator 3 view .LVU232
 518 0365 F30F59CA 		mulss	%xmm2, %xmm1
 214:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 519              		.loc 1 214 11 discriminator 3 view .LVU233
 520 0369 450F28FA 		movaps	%xmm10, %xmm15
 213:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp12 = z5 - z10 * ((FAST_FLOAT) 2.613125930); /* 2*(c2+c6) */
 521              		.loc 1 213 11 discriminator 3 view .LVU234
 522 036d F3450F5C 		subss	%xmm11, %xmm10
 522      D3
 523              	.LVL68:
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 524              		.loc 1 222 42 discriminator 3 view .LVU235
 525 0372 450F28D8 		movaps	%xmm8, %xmm11
 526 0376 F3450F58 		addss	%xmm13, %xmm11
 526      DD
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 527              		.loc 1 223 42 discriminator 3 view .LVU236
 528 037b F3450F5C 		subss	%xmm13, %xmm8
 528      C5
 529              	.LVL69:
 214:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 530              		.loc 1 214 11 discriminator 3 view .LVU237
 531 0380 F3450F5C 		subss	%xmm12, %xmm15
 531      FC
 532              	.LVL70:
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 533              		.loc 1 222 30 discriminator 3 view .LVU238
 534 0385 F3410F2C 		cvttss2sil	%xmm11, %edx
 534      D3
 214:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 535              		.loc 1 214 11 discriminator 3 view .LVU239
 536 038a 450F28E7 		movaps	%xmm15, %xmm12
 216:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp5 = tmp11 - tmp6;
 537              		.loc 1 216 10 discriminator 3 view .LVU240
 538 038e F3450F5C 		subss	%xmm13, %xmm12
 538      E5
 539              	.LVL71:
 217:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = tmp10 - tmp5;
 540              		.loc 1 217 5 is_stmt 1 discriminator 3 view .LVU241
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 541              		.loc 1 222 51 is_stmt 0 discriminator 3 view .LVU242
 542 0393 81E2FF03 		andl	$1023, %edx
 542      0000
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 543              		.loc 1 222 28 discriminator 3 view .LVU243
 544 0399 410FB614 		movzbl	(%r14,%rdx), %edx
 544      16
 217:fltk-1.3.4-1/jpeg/jidctflt.c ****     tmp4 = tmp10 - tmp5;
 545              		.loc 1 217 10 discriminator 3 view .LVU244
 546 039e F3410F5C 		subss	%xmm12, %xmm1
 546      CC
 547              	.LVL72:
 218:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 548              		.loc 1 218 5 is_stmt 1 discriminator 3 view .LVU245
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 549              		.loc 1 222 15 is_stmt 0 discriminator 3 view .LVU246
 550 03a3 8810     		movb	%dl, (%rax)
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 551              		.loc 1 223 30 discriminator 3 view .LVU247
 552 03a5 F3410F2C 		cvttss2sil	%xmm8, %edx
 552      D0
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 553              		.loc 1 224 42 discriminator 3 view .LVU248
 554 03aa 440F28C7 		movaps	%xmm7, %xmm8
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 555              		.loc 1 225 42 discriminator 3 view .LVU249
 556 03ae F3410F5C 		subss	%xmm12, %xmm7
 556      FC
 557              	.LVL73:
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 558              		.loc 1 224 42 discriminator 3 view .LVU250
 559 03b3 F3450F58 		addss	%xmm12, %xmm8
 559      C4
 560              	.LVL74:
 218:fltk-1.3.4-1/jpeg/jidctflt.c **** 
 561              		.loc 1 218 10 discriminator 3 view .LVU251
 562 03b8 F3440F5C 		subss	%xmm1, %xmm10
 562      D1
 563              	.LVL75:
 222:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[7] = range_limit[((int) (tmp0 - tmp7)) & RANGE_MASK];
 564              		.loc 1 222 5 is_stmt 1 discriminator 3 view .LVU252
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 565              		.loc 1 223 5 discriminator 3 view .LVU253
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 566              		.loc 1 223 51 is_stmt 0 discriminator 3 view .LVU254
 567 03bd 81E2FF03 		andl	$1023, %edx
 567      0000
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 568              		.loc 1 223 28 discriminator 3 view .LVU255
 569 03c3 410FB614 		movzbl	(%r14,%rdx), %edx
 569      16
 223:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[1] = range_limit[((int) (tmp1 + tmp6)) & RANGE_MASK];
 570              		.loc 1 223 15 discriminator 3 view .LVU256
 571 03c8 885007   		movb	%dl, 7(%rax)
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 572              		.loc 1 224 5 is_stmt 1 discriminator 3 view .LVU257
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 573              		.loc 1 224 30 is_stmt 0 discriminator 3 view .LVU258
 574 03cb F3410F2C 		cvttss2sil	%xmm8, %edx
 574      D0
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 575              		.loc 1 224 51 discriminator 3 view .LVU259
 576 03d0 81E2FF03 		andl	$1023, %edx
 576      0000
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 577              		.loc 1 224 28 discriminator 3 view .LVU260
 578 03d6 410FB614 		movzbl	(%r14,%rdx), %edx
 578      16
 224:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[6] = range_limit[((int) (tmp1 - tmp6)) & RANGE_MASK];
 579              		.loc 1 224 15 discriminator 3 view .LVU261
 580 03db 885001   		movb	%dl, 1(%rax)
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 581              		.loc 1 225 5 is_stmt 1 discriminator 3 view .LVU262
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 582              		.loc 1 225 30 is_stmt 0 discriminator 3 view .LVU263
 583 03de F30F2CD7 		cvttss2sil	%xmm7, %edx
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 584              		.loc 1 226 42 discriminator 3 view .LVU264
 585 03e2 0F28F8   		movaps	%xmm0, %xmm7
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 586              		.loc 1 227 42 discriminator 3 view .LVU265
 587 03e5 F30F5CC1 		subss	%xmm1, %xmm0
 588              	.LVL76:
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 589              		.loc 1 226 42 discriminator 3 view .LVU266
 590 03e9 F30F58F9 		addss	%xmm1, %xmm7
 591              	.LVL77:
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 592              		.loc 1 225 51 discriminator 3 view .LVU267
 593 03ed 81E2FF03 		andl	$1023, %edx
 593      0000
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 594              		.loc 1 225 28 discriminator 3 view .LVU268
 595 03f3 410FB614 		movzbl	(%r14,%rdx), %edx
 595      16
 225:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[2] = range_limit[((int) (tmp2 + tmp5)) & RANGE_MASK];
 596              		.loc 1 225 15 discriminator 3 view .LVU269
 597 03f8 885006   		movb	%dl, 6(%rax)
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 598              		.loc 1 226 5 is_stmt 1 discriminator 3 view .LVU270
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 599              		.loc 1 226 30 is_stmt 0 discriminator 3 view .LVU271
 600 03fb F30F2CD7 		cvttss2sil	%xmm7, %edx
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 601              		.loc 1 226 51 discriminator 3 view .LVU272
 602 03ff 81E2FF03 		andl	$1023, %edx
 602      0000
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 603              		.loc 1 226 28 discriminator 3 view .LVU273
 604 0405 410FB614 		movzbl	(%r14,%rdx), %edx
 604      16
 226:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[5] = range_limit[((int) (tmp2 - tmp5)) & RANGE_MASK];
 605              		.loc 1 226 15 discriminator 3 view .LVU274
 606 040a 885002   		movb	%dl, 2(%rax)
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 607              		.loc 1 227 5 is_stmt 1 discriminator 3 view .LVU275
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 608              		.loc 1 227 30 is_stmt 0 discriminator 3 view .LVU276
 609 040d F30F2CD0 		cvttss2sil	%xmm0, %edx
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 610              		.loc 1 228 42 discriminator 3 view .LVU277
 611 0411 0F28C6   		movaps	%xmm6, %xmm0
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 612              		.loc 1 229 42 discriminator 3 view .LVU278
 613 0414 F3410F5C 		subss	%xmm10, %xmm6
 613      F2
 614              	.LVL78:
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 615              		.loc 1 228 42 discriminator 3 view .LVU279
 616 0419 F3410F58 		addss	%xmm10, %xmm0
 616      C2
 617              	.LVL79:
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 618              		.loc 1 227 51 discriminator 3 view .LVU280
 619 041e 81E2FF03 		andl	$1023, %edx
 619      0000
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 620              		.loc 1 227 28 discriminator 3 view .LVU281
 621 0424 410FB614 		movzbl	(%r14,%rdx), %edx
 621      16
 227:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[3] = range_limit[((int) (tmp3 + tmp4)) & RANGE_MASK];
 622              		.loc 1 227 15 discriminator 3 view .LVU282
 623 0429 885005   		movb	%dl, 5(%rax)
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 624              		.loc 1 228 5 is_stmt 1 discriminator 3 view .LVU283
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 625              		.loc 1 228 30 is_stmt 0 discriminator 3 view .LVU284
 626 042c F30F2CD0 		cvttss2sil	%xmm0, %edx
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 627              		.loc 1 228 51 discriminator 3 view .LVU285
 628 0430 81E2FF03 		andl	$1023, %edx
 628      0000
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 629              		.loc 1 228 28 discriminator 3 view .LVU286
 630 0436 410FB614 		movzbl	(%r14,%rdx), %edx
 630      16
 228:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr[4] = range_limit[((int) (tmp3 - tmp4)) & RANGE_MASK];
 631              		.loc 1 228 15 discriminator 3 view .LVU287
 632 043b 885003   		movb	%dl, 3(%rax)
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 633              		.loc 1 229 5 is_stmt 1 discriminator 3 view .LVU288
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 634              		.loc 1 229 30 is_stmt 0 discriminator 3 view .LVU289
 635 043e F30F2CD6 		cvttss2sil	%xmm6, %edx
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 636              		.loc 1 229 51 discriminator 3 view .LVU290
 637 0442 81E2FF03 		andl	$1023, %edx
 637      0000
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 638              		.loc 1 229 28 discriminator 3 view .LVU291
 639 0448 410FB614 		movzbl	(%r14,%rdx), %edx
 639      16
 229:fltk-1.3.4-1/jpeg/jidctflt.c ****     
 640              		.loc 1 229 15 discriminator 3 view .LVU292
 641 044d 885004   		movb	%dl, 4(%rax)
 642              		.loc 1 231 5 is_stmt 1 discriminator 3 view .LVU293
 643              	.LVL80:
 179:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr = output_buf[ctr] + output_col;
 644              		.loc 1 179 32 discriminator 3 view .LVU294
 179:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr = output_buf[ctr] + output_col;
 645              		.loc 1 179 17 discriminator 3 view .LVU295
 179:fltk-1.3.4-1/jpeg/jidctflt.c ****     outptr = output_buf[ctr] + output_col;
 646              		.loc 1 179 3 is_stmt 0 discriminator 3 view .LVU296
 647 0450 4939F1   		cmpq	%rsi, %r9
 648 0453 0F8547FE 		jne	.L5
 648      FFFF
 232:fltk-1.3.4-1/jpeg/jidctflt.c ****   }
 233:fltk-1.3.4-1/jpeg/jidctflt.c **** }
 649              		.loc 1 233 1 view .LVU297
 650 0459 488B8424 		movq	280(%rsp), %rax
 650      18010000 
 651 0461 64483304 		xorq	%fs:40, %rax
 651      25280000 
 651      00
 652              	.LVL81:
 653              		.loc 1 233 1 view .LVU298
 654 046a 7512     		jne	.L12
 655 046c 4881C428 		addq	$296, %rsp
 655      010000
 656              		.cfi_remember_state
 657              		.cfi_def_cfa_offset 56
 658 0473 5B       		popq	%rbx
 659              		.cfi_def_cfa_offset 48
 660 0474 5D       		popq	%rbp
 661              		.cfi_def_cfa_offset 40
 662 0475 415C     		popq	%r12
 663              		.cfi_def_cfa_offset 32
 664 0477 415D     		popq	%r13
 665              		.cfi_def_cfa_offset 24
 666 0479 415E     		popq	%r14
 667              		.cfi_def_cfa_offset 16
 668              	.LVL82:
 669              		.loc 1 233 1 view .LVU299
 670 047b 415F     		popq	%r15
 671              		.cfi_def_cfa_offset 8
 672 047d C3       		ret
 673              	.LVL83:
 674              	.L12:
 675              		.cfi_restore_state
 676              		.loc 1 233 1 view .LVU300
 677 047e E8000000 		call	__stack_chk_fail@PLT
 677      00
 678              	.LVL84:
 679              		.loc 1 233 1 view .LVU301
 680              		.cfi_endproc
 681              	.LFE51:
 683              		.section	.rodata.cst4,"aM",@progbits,4
 684              		.align 4
 685              	.LC0:
 686 0000 F304B53F 		.long	1068827891
 687              		.align 4
 688              	.LC1:
 689 0004 5E83EC3F 		.long	1072464734
 690              		.align 4
 691              	.LC2:
 692 0008 753D2740 		.long	1076313461
 693              		.align 4
 694              	.LC3:
 695 000c D48B8A3F 		.long	1066044372
 696              		.align 4
 697              	.LC4:
 698 0010 00800043 		.long	1124106240
 699              		.text
 700              	.Letext0:
 701              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 702              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 703              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 704              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 705              		.file 6 "/usr/include/stdio.h"
 706              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 707              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 708              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 709              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 710              		.file 11 "fltk-1.3.4-1/jpeg/jdct.h"
 12253              		.section	.note.gnu.property,"a"
 12254              		.align 8
 12255 0000 04000000 		.long	 1f - 0f
 12256 0004 10000000 		.long	 4f - 1f
 12257 0008 05000000 		.long	 5
 12258              	0:
 12259 000c 474E5500 		.string	 "GNU"
 12260              	1:
 12261              		.align 8
 12262 0010 020000C0 		.long	 0xc0000002
 12263 0014 04000000 		.long	 3f - 2f
 12264              	2:
 12265 0018 03000000 		.long	 0x3
 12266              	3:
 12267 001c 00000000 		.align 8
 12268              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jidctflt.c
     /tmp/ccNIw5bC.s:8      .text.jpeg_idct_float:0000000000000000 jpeg_idct_float
     /tmp/ccNIw5bC.s:685    .rodata.cst4:0000000000000000 .LC0
     /tmp/ccNIw5bC.s:688    .rodata.cst4:0000000000000004 .LC1
     /tmp/ccNIw5bC.s:691    .rodata.cst4:0000000000000008 .LC2
     /tmp/ccNIw5bC.s:694    .rodata.cst4:000000000000000c .LC3
     /tmp/ccNIw5bC.s:697    .rodata.cst4:0000000000000010 .LC4
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2
                           .group:0000000000000000 wm4.jdct.h.68.77a1fce97df2af4ec80ad9c80171cb02

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
