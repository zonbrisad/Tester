   1              		.file	"jcmaster.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely.validate_script,"ax",@progbits
   5              	.LCOLDB0:
   6              		.section	.text.validate_script,"ax",@progbits
   7              	.LHOTB0:
   8              		.p2align 4,,15
   9              		.section	.text.unlikely.validate_script
  10              	.Ltext_cold0:
  11              		.section	.text.validate_script
  13              	validate_script:
  14              	.LFB64:
  15              		.file 1 "fltk-1.3.4-1/jpeg/jcmaster.c"
   1:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
   2:fltk-1.3.4-1/jpeg/jcmaster.c ****  * jcmaster.c
   3:fltk-1.3.4-1/jpeg/jcmaster.c ****  *
   4:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Copyright (C) 1991-1997, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Modified 2003-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jcmaster.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jcmaster.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jcmaster.c ****  *
   9:fltk-1.3.4-1/jpeg/jcmaster.c ****  * This file contains master control logic for the JPEG compressor.
  10:fltk-1.3.4-1/jpeg/jcmaster.c ****  * These routines are concerned with parameter validation, initial setup,
  11:fltk-1.3.4-1/jpeg/jcmaster.c ****  * and inter-pass control (determining the number of passes and the work 
  12:fltk-1.3.4-1/jpeg/jcmaster.c ****  * to be done in each pass).
  13:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
  14:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  15:fltk-1.3.4-1/jpeg/jcmaster.c **** #define JPEG_INTERNALS
  16:fltk-1.3.4-1/jpeg/jcmaster.c **** #include "jinclude.h"
  17:fltk-1.3.4-1/jpeg/jcmaster.c **** #include "jpeglib.h"
  18:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  19:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  20:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Private state */
  21:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  22:fltk-1.3.4-1/jpeg/jcmaster.c **** typedef enum {
  23:fltk-1.3.4-1/jpeg/jcmaster.c **** 	main_pass,		/* input data, also do first output step */
  24:fltk-1.3.4-1/jpeg/jcmaster.c **** 	huff_opt_pass,		/* Huffman code optimization pass */
  25:fltk-1.3.4-1/jpeg/jcmaster.c **** 	output_pass		/* data output pass */
  26:fltk-1.3.4-1/jpeg/jcmaster.c **** } c_pass_type;
  27:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  28:fltk-1.3.4-1/jpeg/jcmaster.c **** typedef struct {
  29:fltk-1.3.4-1/jpeg/jcmaster.c ****   struct jpeg_comp_master pub;	/* public fields */
  30:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  31:fltk-1.3.4-1/jpeg/jcmaster.c ****   c_pass_type pass_type;	/* the type of the current pass */
  32:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  33:fltk-1.3.4-1/jpeg/jcmaster.c ****   int pass_number;		/* # of passes completed */
  34:fltk-1.3.4-1/jpeg/jcmaster.c ****   int total_passes;		/* total # of passes needed */
  35:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  36:fltk-1.3.4-1/jpeg/jcmaster.c ****   int scan_number;		/* current index in scan_info[] */
  37:fltk-1.3.4-1/jpeg/jcmaster.c **** } my_comp_master;
  38:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  39:fltk-1.3.4-1/jpeg/jcmaster.c **** typedef my_comp_master * my_master_ptr;
  40:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  41:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  42:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
  43:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Support routines that do various essential calculations.
  44:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
  45:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  46:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
  47:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Compute JPEG image dimensions and related values.
  48:fltk-1.3.4-1/jpeg/jcmaster.c ****  * NOTE: this is exported for possible use by application.
  49:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Hence it mustn't do anything that can't be done twice.
  50:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
  51:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  52:fltk-1.3.4-1/jpeg/jcmaster.c **** GLOBAL(void)
  53:fltk-1.3.4-1/jpeg/jcmaster.c **** jpeg_calc_jpeg_dimensions (j_compress_ptr cinfo)
  54:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Do computations that are needed before master selection phase */
  55:fltk-1.3.4-1/jpeg/jcmaster.c **** {
  56:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
  57:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  58:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Sanity check on input image dimensions to prevent overflow in
  59:fltk-1.3.4-1/jpeg/jcmaster.c ****    * following calculation.
  60:fltk-1.3.4-1/jpeg/jcmaster.c ****    * We do check jpeg_width and jpeg_height in initial_setup below,
  61:fltk-1.3.4-1/jpeg/jcmaster.c ****    * but image_width and image_height can come from arbitrary data,
  62:fltk-1.3.4-1/jpeg/jcmaster.c ****    * and we need some space for multiplication by block_size.
  63:fltk-1.3.4-1/jpeg/jcmaster.c ****    */
  64:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (((long) cinfo->image_width >> 24) || ((long) cinfo->image_height >> 24))
  65:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_IMAGE_TOO_BIG, (unsigned int) JPEG_MAX_DIMENSION);
  66:fltk-1.3.4-1/jpeg/jcmaster.c **** 
  67:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Compute actual JPEG image dimensions and DCT scaling choices. */
  68:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->scale_num >= cinfo->scale_denom * cinfo->block_size) {
  69:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/1 scaling */
  70:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = cinfo->image_width * cinfo->block_size;
  71:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = cinfo->image_height * cinfo->block_size;
  72:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 1;
  73:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 1;
  74:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 2 >= cinfo->scale_denom * cinfo->block_size) {
  75:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/2 scaling */
  76:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
  77:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 2L);
  78:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
  79:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 2L);
  80:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 2;
  81:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 2;
  82:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 3 >= cinfo->scale_denom * cinfo->block_size) {
  83:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/3 scaling */
  84:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
  85:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 3L);
  86:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
  87:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 3L);
  88:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 3;
  89:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 3;
  90:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 4 >= cinfo->scale_denom * cinfo->block_size) {
  91:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/4 scaling */
  92:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
  93:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 4L);
  94:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
  95:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 4L);
  96:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 4;
  97:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 4;
  98:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 5 >= cinfo->scale_denom * cinfo->block_size) {
  99:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/5 scaling */
 100:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 101:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 5L);
 102:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 103:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 5L);
 104:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 5;
 105:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 5;
 106:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 6 >= cinfo->scale_denom * cinfo->block_size) {
 107:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/6 scaling */
 108:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 109:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 6L);
 110:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 111:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 6L);
 112:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 6;
 113:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 6;
 114:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 7 >= cinfo->scale_denom * cinfo->block_size) {
 115:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/7 scaling */
 116:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 117:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 7L);
 118:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 119:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 7L);
 120:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 7;
 121:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 7;
 122:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 8 >= cinfo->scale_denom * cinfo->block_size) {
 123:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/8 scaling */
 124:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 125:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 8L);
 126:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 127:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 8L);
 128:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 8;
 129:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 8;
 130:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 9 >= cinfo->scale_denom * cinfo->block_size) {
 131:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/9 scaling */
 132:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 133:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 9L);
 134:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 135:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 9L);
 136:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 9;
 137:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 9;
 138:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 10 >= cinfo->scale_denom * cinfo->block_size) {
 139:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/10 scaling */
 140:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 141:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 10L);
 142:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 143:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 10L);
 144:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 10;
 145:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 10;
 146:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 11 >= cinfo->scale_denom * cinfo->block_size) {
 147:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/11 scaling */
 148:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 149:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 11L);
 150:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 151:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 11L);
 152:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 11;
 153:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 11;
 154:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 12 >= cinfo->scale_denom * cinfo->block_size) {
 155:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/12 scaling */
 156:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 157:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 12L);
 158:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 159:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 12L);
 160:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 12;
 161:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 12;
 162:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 13 >= cinfo->scale_denom * cinfo->block_size) {
 163:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/13 scaling */
 164:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 165:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 13L);
 166:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 167:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 13L);
 168:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 13;
 169:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 13;
 170:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 14 >= cinfo->scale_denom * cinfo->block_size) {
 171:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/14 scaling */
 172:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 173:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 14L);
 174:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 175:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 14L);
 176:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 14;
 177:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 14;
 178:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 15 >= cinfo->scale_denom * cinfo->block_size) {
 179:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/15 scaling */
 180:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 181:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 15L);
 182:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 183:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 15L);
 184:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 15;
 185:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 15;
 186:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 187:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/16 scaling */
 188:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_width = (JDIMENSION)
 189:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 16L);
 190:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 191:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 16L);
 192:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 16;
 193:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 16;
 194:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 195:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 196:fltk-1.3.4-1/jpeg/jcmaster.c **** #else /* !DCT_SCALING_SUPPORTED */
 197:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 198:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Hardwire it to "no scaling" */
 199:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->jpeg_width = cinfo->image_width;
 200:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->jpeg_height = cinfo->image_height;
 201:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->min_DCT_h_scaled_size = DCTSIZE;
 202:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->min_DCT_v_scaled_size = DCTSIZE;
 203:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 204:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif /* DCT_SCALING_SUPPORTED */
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 206:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 207:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 208:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 209:fltk-1.3.4-1/jpeg/jcmaster.c **** jpeg_calc_trans_dimensions (j_compress_ptr cinfo)
 210:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 211:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->min_DCT_h_scaled_size != cinfo->min_DCT_v_scaled_size)
 212:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE,
 213:fltk-1.3.4-1/jpeg/jcmaster.c **** 	     cinfo->min_DCT_h_scaled_size, cinfo->min_DCT_v_scaled_size);
 214:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 215:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->block_size = cinfo->min_DCT_h_scaled_size;
 216:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 217:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 218:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 219:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 220:fltk-1.3.4-1/jpeg/jcmaster.c **** initial_setup (j_compress_ptr cinfo, boolean transcode_only)
 221:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Do computations that are needed before master selection phase */
 222:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 223:fltk-1.3.4-1/jpeg/jcmaster.c ****   int ci, ssize;
 224:fltk-1.3.4-1/jpeg/jcmaster.c ****   jpeg_component_info *compptr;
 225:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 226:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (transcode_only)
 227:fltk-1.3.4-1/jpeg/jcmaster.c ****     jpeg_calc_trans_dimensions(cinfo);
 228:fltk-1.3.4-1/jpeg/jcmaster.c ****   else
 229:fltk-1.3.4-1/jpeg/jcmaster.c ****     jpeg_calc_jpeg_dimensions(cinfo);
 230:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 231:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Sanity check on block_size */
 232:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->block_size < 1 || cinfo->block_size > 16)
 233:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE, cinfo->block_size, cinfo->block_size);
 234:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 235:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Derive natural_order from block_size */
 236:fltk-1.3.4-1/jpeg/jcmaster.c ****   switch (cinfo->block_size) {
 237:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 2: cinfo->natural_order = jpeg_natural_order2; break;
 238:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 3: cinfo->natural_order = jpeg_natural_order3; break;
 239:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 4: cinfo->natural_order = jpeg_natural_order4; break;
 240:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 5: cinfo->natural_order = jpeg_natural_order5; break;
 241:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 6: cinfo->natural_order = jpeg_natural_order6; break;
 242:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 7: cinfo->natural_order = jpeg_natural_order7; break;
 243:fltk-1.3.4-1/jpeg/jcmaster.c ****   default: cinfo->natural_order = jpeg_natural_order; break;
 244:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 245:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 246:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Derive lim_Se from block_size */
 247:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->lim_Se = cinfo->block_size < DCTSIZE ?
 248:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->block_size * cinfo->block_size - 1 : DCTSIZE2-1;
 249:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 250:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Sanity check on image dimensions */
 251:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->jpeg_height <= 0 || cinfo->jpeg_width <= 0 ||
 252:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->num_components <= 0)
 253:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT(cinfo, JERR_EMPTY_IMAGE);
 254:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 255:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Make sure image isn't bigger than I can handle */
 256:fltk-1.3.4-1/jpeg/jcmaster.c ****   if ((long) cinfo->jpeg_height > (long) JPEG_MAX_DIMENSION ||
 257:fltk-1.3.4-1/jpeg/jcmaster.c ****       (long) cinfo->jpeg_width > (long) JPEG_MAX_DIMENSION)
 258:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_IMAGE_TOO_BIG, (unsigned int) JPEG_MAX_DIMENSION);
 259:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 260:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Only 8 to 12 bits data precision are supported for DCT based JPEG */
 261:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->data_precision < 8 || cinfo->data_precision > 12)
 262:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 263:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 264:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Check that number of components won't exceed internal array sizes */
 265:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->num_components > MAX_COMPONENTS)
 266:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 267:fltk-1.3.4-1/jpeg/jcmaster.c **** 	     MAX_COMPONENTS);
 268:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 269:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Compute maximum sampling factors; check factor validity */
 270:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->max_h_samp_factor = 1;
 271:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->max_v_samp_factor = 1;
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 273:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 274:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 275:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 276:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT(cinfo, JERR_BAD_SAMPLING);
 277:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 278:fltk-1.3.4-1/jpeg/jcmaster.c **** 				   compptr->h_samp_factor);
 279:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->max_v_samp_factor = MAX(cinfo->max_v_samp_factor,
 280:fltk-1.3.4-1/jpeg/jcmaster.c **** 				   compptr->v_samp_factor);
 281:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 282:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 283:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Compute dimensions of components */
 284:fltk-1.3.4-1/jpeg/jcmaster.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 285:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 286:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Fill in the correct component_index value; don't rely on application */
 287:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->component_index = ci;
 288:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* In selecting the actual DCT scaling for each component, we try to
 289:fltk-1.3.4-1/jpeg/jcmaster.c ****      * scale down the chroma components via DCT scaling rather than downsampling.
 290:fltk-1.3.4-1/jpeg/jcmaster.c ****      * This saves time if the downsampler gets to use 1:1 scaling.
 291:fltk-1.3.4-1/jpeg/jcmaster.c ****      * Note this code adapts subsampling ratios which are powers of 2.
 292:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 293:fltk-1.3.4-1/jpeg/jcmaster.c ****     ssize = 1;
 294:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 295:fltk-1.3.4-1/jpeg/jcmaster.c ****     while (cinfo->min_DCT_h_scaled_size * ssize <=
 296:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->do_fancy_downsampling ? DCTSIZE : DCTSIZE / 2) &&
 297:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->max_h_samp_factor % (compptr->h_samp_factor * ssize * 2)) == 0) {
 298:fltk-1.3.4-1/jpeg/jcmaster.c ****       ssize = ssize * 2;
 299:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 300:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 301:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->DCT_h_scaled_size = cinfo->min_DCT_h_scaled_size * ssize;
 302:fltk-1.3.4-1/jpeg/jcmaster.c ****     ssize = 1;
 303:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 304:fltk-1.3.4-1/jpeg/jcmaster.c ****     while (cinfo->min_DCT_v_scaled_size * ssize <=
 305:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->do_fancy_downsampling ? DCTSIZE : DCTSIZE / 2) &&
 306:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->max_v_samp_factor % (compptr->v_samp_factor * ssize * 2)) == 0) {
 307:fltk-1.3.4-1/jpeg/jcmaster.c ****       ssize = ssize * 2;
 308:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 309:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 310:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->DCT_v_scaled_size = cinfo->min_DCT_v_scaled_size * ssize;
 311:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 312:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* We don't support DCT ratios larger than 2. */
 313:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (compptr->DCT_h_scaled_size > compptr->DCT_v_scaled_size * 2)
 314:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->DCT_h_scaled_size = compptr->DCT_v_scaled_size * 2;
 315:fltk-1.3.4-1/jpeg/jcmaster.c ****     else if (compptr->DCT_v_scaled_size > compptr->DCT_h_scaled_size * 2)
 316:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->DCT_v_scaled_size = compptr->DCT_h_scaled_size * 2;
 317:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 318:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Size in DCT blocks */
 319:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->width_in_blocks = (JDIMENSION)
 320:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width * (long) compptr->h_samp_factor,
 321:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 322:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->height_in_blocks = (JDIMENSION)
 323:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height * (long) compptr->v_samp_factor,
 324:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 325:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Size in samples */
 326:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->downsampled_width = (JDIMENSION)
 327:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width *
 328:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (compptr->h_samp_factor * compptr->DCT_h_scaled_size),
 329:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 330:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->downsampled_height = (JDIMENSION)
 331:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height *
 332:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (compptr->v_samp_factor * compptr->DCT_v_scaled_size),
 333:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 334:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Don't need quantization scale after DCT,
 335:fltk-1.3.4-1/jpeg/jcmaster.c ****      * until color conversion says otherwise.
 336:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 337:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->component_needed = FALSE;
 338:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 339:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 340:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Compute number of fully interleaved MCU rows (number of times that
 341:fltk-1.3.4-1/jpeg/jcmaster.c ****    * main controller will call coefficient controller).
 342:fltk-1.3.4-1/jpeg/jcmaster.c ****    */
 343:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->total_iMCU_rows = (JDIMENSION)
 344:fltk-1.3.4-1/jpeg/jcmaster.c ****     jdiv_round_up((long) cinfo->jpeg_height,
 345:fltk-1.3.4-1/jpeg/jcmaster.c **** 		  (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 346:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 347:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 348:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 349:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_MULTISCAN_FILES_SUPPORTED
 350:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 351:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 352:fltk-1.3.4-1/jpeg/jcmaster.c **** validate_script (j_compress_ptr cinfo)
 353:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Verify that the scan script in cinfo->scan_info[] is valid; also
 354:fltk-1.3.4-1/jpeg/jcmaster.c ****  * determine whether it uses progressive JPEG, and set cinfo->progressive_mode.
 355:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 356:fltk-1.3.4-1/jpeg/jcmaster.c **** {
  16              		.loc 1 356 0
  17              		.cfi_startproc
  18              	.LVL0:
  19 0000 4157     		pushq	%r15
  20              		.cfi_def_cfa_offset 16
  21              		.cfi_offset 15, -16
  22 0002 4156     		pushq	%r14
  23              		.cfi_def_cfa_offset 24
  24              		.cfi_offset 14, -24
  25 0004 4989FE   		movq	%rdi, %r14
  26 0007 4155     		pushq	%r13
  27              		.cfi_def_cfa_offset 32
  28              		.cfi_offset 13, -32
  29 0009 4154     		pushq	%r12
  30              		.cfi_def_cfa_offset 40
  31              		.cfi_offset 12, -40
  32 000b 55       		pushq	%rbp
  33              		.cfi_def_cfa_offset 48
  34              		.cfi_offset 6, -48
  35 000c 53       		pushq	%rbx
  36              		.cfi_def_cfa_offset 56
  37              		.cfi_offset 3, -56
  38 000d 4881EC78 		subq	$2680, %rsp
  38      0A0000
  39              		.cfi_def_cfa_offset 2736
 357:fltk-1.3.4-1/jpeg/jcmaster.c ****   const jpeg_scan_info * scanptr;
 358:fltk-1.3.4-1/jpeg/jcmaster.c ****   int scanno, ncomps, ci, coefi, thisi;
 359:fltk-1.3.4-1/jpeg/jcmaster.c ****   int Ss, Se, Ah, Al;
 360:fltk-1.3.4-1/jpeg/jcmaster.c ****   boolean component_sent[MAX_COMPONENTS];
 361:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_PROGRESSIVE_SUPPORTED
 362:fltk-1.3.4-1/jpeg/jcmaster.c ****   int * last_bitpos_ptr;
 363:fltk-1.3.4-1/jpeg/jcmaster.c ****   int last_bitpos[MAX_COMPONENTS][DCTSIZE2];
 364:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* -1 until that coefficient has been seen; then last Al for it */
 365:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 366:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 367:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->num_scans <= 0)
  40              		.loc 1 367 0
  41 0014 8BBF1001 		movl	272(%rdi), %edi
  41      0000
  42              	.LVL1:
 356:fltk-1.3.4-1/jpeg/jcmaster.c ****   const jpeg_scan_info * scanptr;
  43              		.loc 1 356 0
  44 001a 64488B04 		movq	%fs:40, %rax
  44      25280000 
  44      00
  45 0023 48898424 		movq	%rax, 2664(%rsp)
  45      680A0000 
  46 002b 31C0     		xorl	%eax, %eax
  47              		.loc 1 367 0
  48 002d 85FF     		testl	%edi, %edi
  49 002f 0F8EC104 		jle	.L93
  49      0000
  50              	.L2:
 368:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, 0);
 369:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 370:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* For sequential JPEG, all scans must have Ss=0, Se=DCTSIZE2-1;
 371:fltk-1.3.4-1/jpeg/jcmaster.c ****    * for progressive JPEG, no scan can have this.
 372:fltk-1.3.4-1/jpeg/jcmaster.c ****    */
 373:fltk-1.3.4-1/jpeg/jcmaster.c ****   scanptr = cinfo->scan_info;
  51              		.loc 1 373 0
  52 0035 4D8BBE18 		movq	280(%r14), %r15
  52      010000
  53              	.LVL2:
 374:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (scanptr->Ss != 0 || scanptr->Se != DCTSIZE2-1) {
  54              		.loc 1 374 0
  55 003c 418B4714 		movl	20(%r15), %eax
  56 0040 85C0     		testl	%eax, %eax
  57 0042 750B     		jne	.L3
  58              		.loc 1 374 0 is_stmt 0 discriminator 1
  59 0044 41837F18 		cmpl	$63, 24(%r15)
  59      3F
  60 0049 0F846C04 		je	.L4
  60      0000
  61              	.L3:
 375:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_PROGRESSIVE_SUPPORTED
 376:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progressive_mode = TRUE;
 377:fltk-1.3.4-1/jpeg/jcmaster.c ****     last_bitpos_ptr = & last_bitpos[0][0];
 378:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) 
  62              		.loc 1 378 0 is_stmt 1
  63 004f 418B465C 		movl	92(%r14), %eax
 376:fltk-1.3.4-1/jpeg/jcmaster.c ****     last_bitpos_ptr = & last_bitpos[0][0];
  64              		.loc 1 376 0
  65 0053 41C7865C 		movl	$1, 348(%r14)
  65      01000001 
  65      000000
  66              	.LVL3:
  67              		.loc 1 378 0
  68 005e 85C0     		testl	%eax, %eax
  69 0060 0F8EB804 		jle	.L5
  69      0000
  70 0066 8D70FF   		leal	-1(%rax), %esi
  71 0069 488D5C24 		leaq	96(%rsp), %rbx
  71      60
  72              	.LVL4:
  73 006e 4883C601 		addq	$1, %rsi
  74              		.loc 1 378 0 is_stmt 0 discriminator 3
  75 0072 4889D8   		movq	%rbx, %rax
  76 0075 48C1E608 		salq	$8, %rsi
  77 0079 4801DE   		addq	%rbx, %rsi
  78              	.LVL5:
  79 007c 0F1F4000 		.p2align 4,,10
  80              		.p2align 3
  81              	.L7:
  82 0080 488D8800 		leaq	256(%rax), %rcx
  82      010000
  83              	.LVL6:
  84 0087 660F1F84 		.p2align 4,,10
  84      00000000 
  84      00
  85              		.p2align 3
  86              	.L6:
 379:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
 380:fltk-1.3.4-1/jpeg/jcmaster.c **** 	*last_bitpos_ptr++ = -1;
  87              		.loc 1 380 0 is_stmt 1 discriminator 3
  88 0090 4883C004 		addq	$4, %rax
  89              	.LVL7:
  90 0094 C740FCFF 		movl	$-1, -4(%rax)
  90      FFFFFF
  91              	.LVL8:
 379:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
  92              		.loc 1 379 0 discriminator 3
  93 009b 4839C8   		cmpq	%rcx, %rax
  94 009e 75F0     		jne	.L6
 378:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
  95              		.loc 1 378 0 discriminator 2
  96 00a0 4839C6   		cmpq	%rax, %rsi
  97 00a3 75DB     		jne	.L7
  98              	.LVL9:
 381:fltk-1.3.4-1/jpeg/jcmaster.c **** #else
 382:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT(cinfo, JERR_NOT_COMPILED);
 383:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 384:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 385:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progressive_mode = FALSE;
 386:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) 
 387:fltk-1.3.4-1/jpeg/jcmaster.c ****       component_sent[ci] = FALSE;
 388:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 389:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 390:fltk-1.3.4-1/jpeg/jcmaster.c ****   for (scanno = 1; scanno <= cinfo->num_scans; scanptr++, scanno++) {
  99              		.loc 1 390 0
 100 00a5 85FF     		testl	%edi, %edi
 101 00a7 0F8E1B02 		jle	.L49
 101      0000
 102              	.LVL10:
 103              	.L48:
 104 00ad 498D4704 		leaq	4(%r15), %rax
 378:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
 105              		.loc 1 378 0
 106 00b1 41BC0100 		movl	$1, %r12d
 106      0000
 107 00b7 48894424 		movq	%rax, 32(%rsp)
 107      20
 108              	.LVL11:
 109 00bc 0F1F4000 		.p2align 4,,10
 110              		.p2align 3
 111              	.L26:
 112 00c0 488B4424 		movq	32(%rsp), %rax
 112      20
 113 00c5 488D78FC 		leaq	-4(%rax), %rdi
 391:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Validate component indexes */
 392:fltk-1.3.4-1/jpeg/jcmaster.c ****     ncomps = scanptr->comps_in_scan;
 114              		.loc 1 392 0
 115 00c9 8B40FC   		movl	-4(%rax), %eax
 116 00cc 48897C24 		movq	%rdi, 40(%rsp)
 116      28
 117              	.LVL12:
 118 00d1 8944240C 		movl	%eax, 12(%rsp)
 119              	.LVL13:
 393:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (ncomps <= 0 || ncomps > MAX_COMPS_IN_SCAN)
 120              		.loc 1 393 0
 121 00d5 83E801   		subl	$1, %eax
 122              	.LVL14:
 123 00d8 83F803   		cmpl	$3, %eax
 124 00db 4189C7   		movl	%eax, %r15d
 125 00de 0F873703 		ja	.L94
 125      0000
 126              	.LVL15:
 127              	.L12:
 378:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
 128              		.loc 1 378 0
 129 00e4 488B6C24 		movq	32(%rsp), %rbp
 129      20
 130 00e9 31DB     		xorl	%ebx, %ebx
 131 00eb EB10     		jmp	.L18
 132              	.LVL16:
 133 00ed 0F1F00   		.p2align 4,,10
 134              		.p2align 3
 135              	.L17:
 394:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, ncomps, MAX_COMPS_IN_SCAN);
 395:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < ncomps; ci++) {
 136              		.loc 1 395 0 discriminator 2
 137 00f0 83C301   		addl	$1, %ebx
 138              	.LVL17:
 139 00f3 4883C504 		addq	$4, %rbp
 140 00f7 395C240C 		cmpl	%ebx, 12(%rsp)
 141 00fb 7458     		je	.L19
 142              	.LVL18:
 143              	.L18:
 396:fltk-1.3.4-1/jpeg/jcmaster.c ****       thisi = scanptr->component_index[ci];
 144              		.loc 1 396 0
 145 00fd 448B6D00 		movl	0(%rbp), %r13d
 146              	.LVL19:
 397:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (thisi < 0 || thisi >= cinfo->num_components)
 147              		.loc 1 397 0
 148 0101 4585ED   		testl	%r13d, %r13d
 149 0104 7806     		js	.L15
 150              		.loc 1 397 0 is_stmt 0 discriminator 1
 151 0106 453B6E5C 		cmpl	92(%r14), %r13d
 152 010a 7C19     		jl	.L16
 153              	.L15:
 398:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, scanno);
 154              		.loc 1 398 0 is_stmt 1
 155 010c 498B06   		movq	(%r14), %rax
 156 010f 4C89F7   		movq	%r14, %rdi
 157 0112 C7402814 		movl	$20, 40(%rax)
 157      000000
 158 0119 498B06   		movq	(%r14), %rax
 159 011c 4489602C 		movl	%r12d, 44(%rax)
 160 0120 498B06   		movq	(%r14), %rax
 161 0123 FF10     		call	*(%rax)
 162              	.LVL20:
 163              	.L16:
 399:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Components must appear in SOF order within each scan */
 400:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (ci > 0 && thisi <= scanptr->component_index[ci-1])
 164              		.loc 1 400 0
 165 0125 85DB     		testl	%ebx, %ebx
 166 0127 7EC7     		jle	.L17
 167              		.loc 1 400 0 is_stmt 0 discriminator 1
 168 0129 443B6DFC 		cmpl	-4(%rbp), %r13d
 169 012d 7FC1     		jg	.L17
 401:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, scanno);
 170              		.loc 1 401 0 is_stmt 1
 171 012f 498B06   		movq	(%r14), %rax
 172 0132 4C89F7   		movq	%r14, %rdi
 395:fltk-1.3.4-1/jpeg/jcmaster.c ****       thisi = scanptr->component_index[ci];
 173              		.loc 1 395 0
 174 0135 83C301   		addl	$1, %ebx
 175              	.LVL21:
 176 0138 4883C504 		addq	$4, %rbp
 177              		.loc 1 401 0
 178 013c C7402814 		movl	$20, 40(%rax)
 178      000000
 179 0143 498B06   		movq	(%r14), %rax
 180 0146 4489602C 		movl	%r12d, 44(%rax)
 181 014a 498B06   		movq	(%r14), %rax
 182 014d FF10     		call	*(%rax)
 183              	.LVL22:
 395:fltk-1.3.4-1/jpeg/jcmaster.c ****       thisi = scanptr->component_index[ci];
 184              		.loc 1 395 0
 185 014f 395C240C 		cmpl	%ebx, 12(%rsp)
 186 0153 75A8     		jne	.L18
 187              	.LVL23:
 188              	.L19:
 402:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 403:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Validate progression parameters */
 404:fltk-1.3.4-1/jpeg/jcmaster.c ****     Ss = scanptr->Ss;
 189              		.loc 1 404 0
 190 0155 488B4424 		movq	32(%rsp), %rax
 190      20
 191 015a 8B5010   		movl	16(%rax), %edx
 405:fltk-1.3.4-1/jpeg/jcmaster.c ****     Se = scanptr->Se;
 406:fltk-1.3.4-1/jpeg/jcmaster.c ****     Ah = scanptr->Ah;
 192              		.loc 1 406 0
 193 015d 8B7818   		movl	24(%rax), %edi
 405:fltk-1.3.4-1/jpeg/jcmaster.c ****     Se = scanptr->Se;
 194              		.loc 1 405 0
 195 0160 8B6814   		movl	20(%rax), %ebp
 407:fltk-1.3.4-1/jpeg/jcmaster.c ****     Al = scanptr->Al;
 196              		.loc 1 407 0
 197 0163 8B581C   		movl	28(%rax), %ebx
 408:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->progressive_mode) {
 198              		.loc 1 408 0
 199 0166 418B865C 		movl	348(%r14), %eax
 199      010000
 404:fltk-1.3.4-1/jpeg/jcmaster.c ****     Se = scanptr->Se;
 200              		.loc 1 404 0
 201 016d 8954241C 		movl	%edx, 28(%rsp)
 202              	.LVL24:
 406:fltk-1.3.4-1/jpeg/jcmaster.c ****     Al = scanptr->Al;
 203              		.loc 1 406 0
 204 0171 897C2408 		movl	%edi, 8(%rsp)
 205              	.LVL25:
 206              		.loc 1 408 0
 207 0175 85C0     		testl	%eax, %eax
 208 0177 0F84B001 		je	.L95
 208      0000
 409:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_PROGRESSIVE_SUPPORTED
 410:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* The JPEG spec simply gives the ranges 0..13 for Ah and Al, but that
 411:fltk-1.3.4-1/jpeg/jcmaster.c ****        * seems wrong: the upper bound ought to depend on data precision.
 412:fltk-1.3.4-1/jpeg/jcmaster.c ****        * Perhaps they really meant 0..N+1 for N-bit precision.
 413:fltk-1.3.4-1/jpeg/jcmaster.c ****        * Here we allow 0..10 for 8-bit data; Al larger than 10 results in
 414:fltk-1.3.4-1/jpeg/jcmaster.c ****        * out-of-range reconstructed DC values during the first DC scan,
 415:fltk-1.3.4-1/jpeg/jcmaster.c ****        * which might cause problems for some decoders.
 416:fltk-1.3.4-1/jpeg/jcmaster.c ****        */
 417:fltk-1.3.4-1/jpeg/jcmaster.c **** #if BITS_IN_JSAMPLE == 8
 418:fltk-1.3.4-1/jpeg/jcmaster.c **** #define MAX_AH_AL 10
 419:fltk-1.3.4-1/jpeg/jcmaster.c **** #else
 420:fltk-1.3.4-1/jpeg/jcmaster.c **** #define MAX_AH_AL 13
 421:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 422:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (Ss < 0 || Ss >= DCTSIZE2 || Se < Ss || Se >= DCTSIZE2 ||
 209              		.loc 1 422 0
 210 017d 8B44241C 		movl	28(%rsp), %eax
 211 0181 83F83F   		cmpl	$63, %eax
 212 0184 0F874302 		ja	.L20
 212      0000
 213 018a 39E8     		cmpl	%ebp, %eax
 214 018c 0F8F3B02 		jg	.L20
 214      0000
 215              		.loc 1 422 0 is_stmt 0 discriminator 1
 216 0192 83FD3F   		cmpl	$63, %ebp
 217 0195 0F8F3202 		jg	.L20
 217      0000
 423:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  Ah < 0 || Ah > MAX_AH_AL || Al < 0 || Al > MAX_AH_AL)
 218              		.loc 1 423 0 is_stmt 1
 219 019b 83FB0A   		cmpl	$10, %ebx
 220 019e 0F872902 		ja	.L20
 220      0000
 221 01a4 837C2408 		cmpl	$10, 8(%rsp)
 221      0A
 222 01a9 0F871E02 		ja	.L20
 222      0000
 424:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 425:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (Ss == 0) {
 223              		.loc 1 425 0
 224 01af 8B44241C 		movl	28(%rsp), %eax
 225 01b3 85C0     		testl	%eax, %eax
 226 01b5 0F853702 		jne	.L23
 226      0000
 227              	.LVL26:
 228              	.L100:
 426:fltk-1.3.4-1/jpeg/jcmaster.c **** 	if (Se != 0)		/* DC and AC together not OK */
 229              		.loc 1 426 0
 230 01bb 85ED     		testl	%ebp, %ebp
 231 01bd 0F853A02 		jne	.L86
 231      0000
 232              	.LVL27:
 233              	.L24:
 427:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 428:fltk-1.3.4-1/jpeg/jcmaster.c ****       } else {
 429:fltk-1.3.4-1/jpeg/jcmaster.c **** 	if (ncomps != 1)	/* AC scans must be for only one component */
 430:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 431:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 432:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (ci = 0; ci < ncomps; ci++) {
 234              		.loc 1 432 0 discriminator 1
 235 01c3 8B44240C 		movl	12(%rsp), %eax
 236 01c7 85C0     		testl	%eax, %eax
 237 01c9 0F8EC600 		jle	.L31
 237      0000
 238              	.LVL28:
 239              	.L25:
 433:fltk-1.3.4-1/jpeg/jcmaster.c **** 	last_bitpos_ptr = & last_bitpos[scanptr->component_index[ci]][0];
 434:fltk-1.3.4-1/jpeg/jcmaster.c **** 	if (Ss != 0 && last_bitpos_ptr[0] < 0) /* AC without prior DC scan */
 435:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 436:fltk-1.3.4-1/jpeg/jcmaster.c **** 	for (coefi = Ss; coefi <= Se; coefi++) {
 437:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  if (last_bitpos_ptr[coefi] < 0) {
 438:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    /* first scan of this coefficient */
 439:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    if (Ah != 0)
 440:fltk-1.3.4-1/jpeg/jcmaster.c **** 	      ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 441:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  } else {
 442:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    /* not first scan */
 443:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    if (Ah != last_bitpos_ptr[coefi] || Al != Ah-1)
 240              		.loc 1 443 0
 241 01cf 8B442408 		movl	8(%rsp), %eax
 378:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (coefi = 0; coefi < DCTSIZE2; coefi++)
 242              		.loc 1 378 0
 243 01d3 48C74424 		movq	$0, 16(%rsp)
 243      10000000 
 243      00
 244              		.loc 1 443 0
 245 01dc 83E801   		subl	$1, %eax
 246 01df 89442418 		movl	%eax, 24(%rsp)
 247              	.LVL29:
 248              	.L30:
 433:fltk-1.3.4-1/jpeg/jcmaster.c **** 	last_bitpos_ptr = & last_bitpos[scanptr->component_index[ci]][0];
 249              		.loc 1 433 0
 250 01e3 488B5424 		movq	16(%rsp), %rdx
 250      10
 251 01e8 488B4424 		movq	40(%rsp), %rax
 251      28
 252 01ed 4531FF   		xorl	%r15d, %r15d
 253 01f0 48634490 		movslq	4(%rax,%rdx,4), %rax
 253      04
 254 01f5 488D5424 		leaq	96(%rsp), %rdx
 254      60
 255 01fa 48C1E008 		salq	$8, %rax
 256 01fe 4C8D2C02 		leaq	(%rdx,%rax), %r13
 257              	.LVL30:
 434:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 258              		.loc 1 434 0
 259 0202 8B54241C 		movl	28(%rsp), %edx
 260 0206 85D2     		testl	%edx, %edx
 261 0208 740F     		je	.L28
 434:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 262              		.loc 1 434 0 is_stmt 0 discriminator 1
 263 020a 8B440460 		movl	96(%rsp,%rax), %eax
 264 020e 4189D7   		movl	%edx, %r15d
 265 0211 85C0     		testl	%eax, %eax
 266 0213 0F883502 		js	.L96
 266      0000
 267              	.L28:
 268              	.LVL31:
 269 0219 4963C7   		movslq	%r15d, %rax
 436:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  if (last_bitpos_ptr[coefi] < 0) {
 270              		.loc 1 436 0 is_stmt 1 discriminator 1
 271 021c 4439FD   		cmpl	%r15d, %ebp
 272 021f 4D8D6C85 		leaq	0(%r13,%rax,4), %r13
 272      00
 273              	.LVL32:
 274 0224 7D40     		jge	.L64
 275 0226 EB58     		jmp	.L36
 276              	.LVL33:
 277 0228 0F1F8400 		.p2align 4,,10
 277      00000000 
 278              		.p2align 3
 279              	.L32:
 280              		.loc 1 443 0
 281 0230 39742408 		cmpl	%esi, 8(%rsp)
 282 0234 7506     		jne	.L34
 283              		.loc 1 443 0 is_stmt 0 discriminator 1
 284 0236 3B5C2418 		cmpl	24(%rsp), %ebx
 285 023a 7419     		je	.L33
 286              	.L34:
 444:fltk-1.3.4-1/jpeg/jcmaster.c **** 	      ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 287              		.loc 1 444 0 is_stmt 1
 288 023c 498B36   		movq	(%r14), %rsi
 289 023f 4C89F7   		movq	%r14, %rdi
 290 0242 C7462812 		movl	$18, 40(%rsi)
 290      000000
 291 0249 498B36   		movq	(%r14), %rsi
 292 024c 4489662C 		movl	%r12d, 44(%rsi)
 293 0250 498B36   		movq	(%r14), %rsi
 294 0253 FF16     		call	*(%rsi)
 295              	.LVL34:
 296              	.L33:
 436:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  if (last_bitpos_ptr[coefi] < 0) {
 297              		.loc 1 436 0 discriminator 2
 298 0255 4183C701 		addl	$1, %r15d
 299              	.LVL35:
 445:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  }
 446:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  last_bitpos_ptr[coefi] = Al;
 300              		.loc 1 446 0 discriminator 2
 301 0259 41895D00 		movl	%ebx, 0(%r13)
 302 025d 4983C504 		addq	$4, %r13
 436:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  if (last_bitpos_ptr[coefi] < 0) {
 303              		.loc 1 436 0 discriminator 2
 304 0261 4439FD   		cmpl	%r15d, %ebp
 305 0264 7C1A     		jl	.L36
 306              	.L64:
 437:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    /* first scan of this coefficient */
 307              		.loc 1 437 0
 308 0266 418B7500 		movl	0(%r13), %esi
 309 026a 85F6     		testl	%esi, %esi
 310 026c 79C2     		jns	.L32
 439:fltk-1.3.4-1/jpeg/jcmaster.c **** 	      ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 311              		.loc 1 439 0
 312 026e 448B5C24 		movl	8(%rsp), %r11d
 312      08
 313 0273 4585DB   		testl	%r11d, %r11d
 314 0276 74DD     		je	.L33
 315 0278 EBC2     		jmp	.L34
 316 027a 660F1F44 		.p2align 4,,10
 316      0000
 317              		.p2align 3
 318              	.L36:
 319              	.LVL36:
 320 0280 48834424 		addq	$1, 16(%rsp)
 320      1001
 321              	.LVL37:
 322 0286 488B4424 		movq	16(%rsp), %rax
 322      10
 432:fltk-1.3.4-1/jpeg/jcmaster.c **** 	last_bitpos_ptr = & last_bitpos[scanptr->component_index[ci]][0];
 323              		.loc 1 432 0
 324 028b 3944240C 		cmpl	%eax, 12(%rsp)
 325 028f 0F8F4EFF 		jg	.L30
 325      FFFF
 326              	.LVL38:
 327              	.L31:
 390:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Validate component indexes */
 328              		.loc 1 390 0
 329 0295 4183C401 		addl	$1, %r12d
 330              	.LVL39:
 331 0299 48834424 		addq	$36, 32(%rsp)
 331      2024
 332              	.LVL40:
 333 029f 4539A610 		cmpl	%r12d, 272(%r14)
 333      010000
 334 02a6 0F8D14FE 		jge	.L26
 334      FFFF
 447:fltk-1.3.4-1/jpeg/jcmaster.c **** 	}
 448:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 449:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 450:fltk-1.3.4-1/jpeg/jcmaster.c ****     } else {
 451:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* For sequential JPEG, all progression parameters must be these: */
 452:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (Ss != 0 || Se != DCTSIZE2-1 || Ah != 0 || Al != 0)
 453:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 454:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Make sure components are not sent twice */
 455:fltk-1.3.4-1/jpeg/jcmaster.c ****       for (ci = 0; ci < ncomps; ci++) {
 456:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 457:fltk-1.3.4-1/jpeg/jcmaster.c **** 	if (component_sent[thisi])
 458:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, scanno);
 459:fltk-1.3.4-1/jpeg/jcmaster.c **** 	component_sent[thisi] = TRUE;
 460:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 461:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 462:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 463:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 464:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Now verify that everything got sent. */
 465:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->progressive_mode) {
 335              		.loc 1 465 0
 336 02ac 418BBE5C 		movl	348(%r14), %edi
 336      010000
 337 02b3 85FF     		testl	%edi, %edi
 338 02b5 0F84B601 		je	.L97
 338      0000
 339              	.LVL41:
 466:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_PROGRESSIVE_SUPPORTED
 467:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* For progressive mode, we only check that at least some DC data
 468:fltk-1.3.4-1/jpeg/jcmaster.c ****      * got sent for each component; the spec does not require that all bits
 469:fltk-1.3.4-1/jpeg/jcmaster.c ****      * of all coefficients be transmitted.  Would it be wiser to enforce
 470:fltk-1.3.4-1/jpeg/jcmaster.c ****      * transmission of all coefficient bits??
 471:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 472:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) {
 340              		.loc 1 472 0
 341 02bb 418B4E5C 		movl	92(%r14), %ecx
 342 02bf 85C9     		testl	%ecx, %ecx
 343 02c1 7E41     		jle	.L1
 344 02c3 488D5C24 		leaq	96(%rsp), %rbx
 344      60
 345              	.LVL42:
 346              	.L49:
 455:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 347              		.loc 1 455 0
 348 02c8 31ED     		xorl	%ebp, %ebp
 349 02ca EB10     		jmp	.L45
 350              	.LVL43:
 351              	.L44:
 352              		.loc 1 472 0 discriminator 2
 353 02cc 83C501   		addl	$1, %ebp
 354              	.LVL44:
 355 02cf 4881C300 		addq	$256, %rbx
 355      010000
 356 02d6 41396E5C 		cmpl	%ebp, 92(%r14)
 357 02da 7E28     		jle	.L1
 358              	.LVL45:
 359              	.L45:
 473:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (last_bitpos[ci][0] < 0)
 360              		.loc 1 473 0
 361 02dc 8B13     		movl	(%rbx), %edx
 362 02de 85D2     		testl	%edx, %edx
 363 02e0 79EA     		jns	.L44
 474:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT(cinfo, JERR_MISSING_DATA);
 364              		.loc 1 474 0
 365 02e2 498B06   		movq	(%r14), %rax
 366 02e5 4C89F7   		movq	%r14, %rdi
 472:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (last_bitpos[ci][0] < 0)
 367              		.loc 1 472 0
 368 02e8 83C501   		addl	$1, %ebp
 369              	.LVL46:
 370 02eb 4881C300 		addq	$256, %rbx
 370      010000
 371              		.loc 1 474 0
 372 02f2 C740282E 		movl	$46, 40(%rax)
 372      000000
 373 02f9 498B06   		movq	(%r14), %rax
 374 02fc FF10     		call	*(%rax)
 375              	.LVL47:
 472:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (last_bitpos[ci][0] < 0)
 376              		.loc 1 472 0
 377 02fe 41396E5C 		cmpl	%ebp, 92(%r14)
 378 0302 7FD8     		jg	.L45
 379              	.LVL48:
 380              	.L1:
 475:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 476:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 477:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 478:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) {
 479:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (! component_sent[ci])
 480:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT(cinfo, JERR_MISSING_DATA);
 481:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 482:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 483:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 381              		.loc 1 483 0
 382 0304 488B8424 		movq	2664(%rsp), %rax
 382      680A0000 
 383 030c 64483304 		xorq	%fs:40, %rax
 383      25280000 
 383      00
 384 0315 0F851D02 		jne	.L98
 384      0000
 385 031b 4881C478 		addq	$2680, %rsp
 385      0A0000
 386              		.cfi_remember_state
 387              		.cfi_def_cfa_offset 56
 388 0322 5B       		popq	%rbx
 389              		.cfi_def_cfa_offset 48
 390 0323 5D       		popq	%rbp
 391              		.cfi_def_cfa_offset 40
 392 0324 415C     		popq	%r12
 393              		.cfi_def_cfa_offset 32
 394 0326 415D     		popq	%r13
 395              		.cfi_def_cfa_offset 24
 396 0328 415E     		popq	%r14
 397              		.cfi_def_cfa_offset 16
 398              	.LVL49:
 399 032a 415F     		popq	%r15
 400              		.cfi_def_cfa_offset 8
 401 032c C3       		ret
 402              	.LVL50:
 403              	.L95:
 404              		.cfi_restore_state
 452:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 405              		.loc 1 452 0
 406 032d 448B5424 		movl	28(%rsp), %r10d
 406      1C
 407 0332 4585D2   		testl	%r10d, %r10d
 408 0335 750D     		jne	.L37
 409 0337 83FD3F   		cmpl	$63, %ebp
 410 033a 7508     		jne	.L37
 452:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 411              		.loc 1 452 0 is_stmt 0 discriminator 1
 412 033c 8B442408 		movl	8(%rsp), %eax
 413 0340 09D8     		orl	%ebx, %eax
 414 0342 7419     		je	.L38
 415              	.L37:
 453:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Make sure components are not sent twice */
 416              		.loc 1 453 0 is_stmt 1
 417 0344 498B06   		movq	(%r14), %rax
 418 0347 4C89F7   		movq	%r14, %rdi
 419              	.LVL51:
 420 034a C7402812 		movl	$18, 40(%rax)
 420      000000
 421              	.LVL52:
 422 0351 498B06   		movq	(%r14), %rax
 423 0354 4489602C 		movl	%r12d, 44(%rax)
 424 0358 498B06   		movq	(%r14), %rax
 425 035b FF10     		call	*(%rax)
 426              	.LVL53:
 427              	.L38:
 455:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 428              		.loc 1 455 0 discriminator 1
 429 035d 448B4C24 		movl	12(%rsp), %r9d
 429      0C
 430 0362 4585C9   		testl	%r9d, %r9d
 431 0365 0F8E2AFF 		jle	.L31
 431      FFFF
 455:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 432              		.loc 1 455 0 is_stmt 0
 433 036b 488B5C24 		movq	32(%rsp), %rbx
 433      20
 434              	.LVL54:
 435 0370 488B5424 		movq	40(%rsp), %rdx
 435      28
 436 0375 4489F8   		movl	%r15d, %eax
 457:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, scanno);
 437              		.loc 1 457 0 is_stmt 1
 438 0378 48632B   		movslq	(%rbx), %rbp
 439              	.LVL55:
 440 037b 4C8D6C82 		leaq	8(%rdx,%rax,4), %r13
 440      08
 441 0380 448B44AC 		movl	48(%rsp,%rbp,4), %r8d
 441      30
 442 0385 4585C0   		testl	%r8d, %r8d
 443 0388 7528     		jne	.L99
 444              	.LVL56:
 445 038a 660F1F44 		.p2align 4,,10
 445      0000
 446              		.p2align 3
 447              	.L39:
 448 0390 4883C304 		addq	$4, %rbx
 459:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 449              		.loc 1 459 0 discriminator 2
 450 0394 C744AC30 		movl	$1, 48(%rsp,%rbp,4)
 450      01000000 
 455:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 451              		.loc 1 455 0 discriminator 2
 452 039c 4939DD   		cmpq	%rbx, %r13
 453 039f 0F84F0FE 		je	.L31
 453      FFFF
 454              	.LVL57:
 457:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_SCAN_SCRIPT, scanno);
 455              		.loc 1 457 0
 456 03a5 48632B   		movslq	(%rbx), %rbp
 457 03a8 448B44AC 		movl	48(%rsp,%rbp,4), %r8d
 457      30
 458 03ad 4585C0   		testl	%r8d, %r8d
 459 03b0 74DE     		je	.L39
 460              	.LVL58:
 461              	.L99:
 458:fltk-1.3.4-1/jpeg/jcmaster.c **** 	component_sent[thisi] = TRUE;
 462              		.loc 1 458 0
 463 03b2 498B06   		movq	(%r14), %rax
 464 03b5 4C89F7   		movq	%r14, %rdi
 465 03b8 C7402814 		movl	$20, 40(%rax)
 465      000000
 466 03bf 498B06   		movq	(%r14), %rax
 467 03c2 4489602C 		movl	%r12d, 44(%rax)
 468 03c6 498B06   		movq	(%r14), %rax
 469 03c9 FF10     		call	*(%rax)
 470              	.LVL59:
 471 03cb EBC3     		jmp	.L39
 472              	.LVL60:
 473              	.L20:
 424:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (Ss == 0) {
 474              		.loc 1 424 0
 475 03cd 498B06   		movq	(%r14), %rax
 476              	.LVL61:
 477 03d0 4C89F7   		movq	%r14, %rdi
 478              	.LVL62:
 479 03d3 C7402812 		movl	$18, 40(%rax)
 479      000000
 480              	.LVL63:
 481 03da 498B06   		movq	(%r14), %rax
 482 03dd 4489602C 		movl	%r12d, 44(%rax)
 483 03e1 498B06   		movq	(%r14), %rax
 484 03e4 FF10     		call	*(%rax)
 485              	.LVL64:
 425:fltk-1.3.4-1/jpeg/jcmaster.c **** 	if (Se != 0)		/* DC and AC together not OK */
 486              		.loc 1 425 0
 487 03e6 8B44241C 		movl	28(%rsp), %eax
 488 03ea 85C0     		testl	%eax, %eax
 489 03ec 0F84C9FD 		je	.L100
 489      FFFF
 490              	.L23:
 429:fltk-1.3.4-1/jpeg/jcmaster.c **** 	  ERREXIT1(cinfo, JERR_BAD_PROG_SCRIPT, scanno);
 491              		.loc 1 429 0
 492 03f2 837C240C 		cmpl	$1, 12(%rsp)
 492      01
 493 03f7 0F84D2FD 		je	.L25
 493      FFFF
 494              	.L86:
 427:fltk-1.3.4-1/jpeg/jcmaster.c ****       } else {
 495              		.loc 1 427 0
 496 03fd 498B06   		movq	(%r14), %rax
 497 0400 4C89F7   		movq	%r14, %rdi
 498 0403 C7402812 		movl	$18, 40(%rax)
 498      000000
 499              	.LVL65:
 500 040a 498B06   		movq	(%r14), %rax
 501 040d 4489602C 		movl	%r12d, 44(%rax)
 502 0411 498B06   		movq	(%r14), %rax
 503 0414 FF10     		call	*(%rax)
 504              	.LVL66:
 505 0416 E9A8FDFF 		jmp	.L24
 505      FF
 506              	.LVL67:
 507              	.L94:
 394:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < ncomps; ci++) {
 508              		.loc 1 394 0
 509 041b 498B06   		movq	(%r14), %rax
 510 041e 8B5C240C 		movl	12(%rsp), %ebx
 511 0422 4C89F7   		movq	%r14, %rdi
 512              	.LVL68:
 513 0425 C740281B 		movl	$27, 40(%rax)
 513      000000
 514              	.LVL69:
 515 042c 498B06   		movq	(%r14), %rax
 516 042f 89582C   		movl	%ebx, 44(%rax)
 517 0432 498B06   		movq	(%r14), %rax
 518 0435 C7403004 		movl	$4, 48(%rax)
 518      000000
 519 043c 498B06   		movq	(%r14), %rax
 520 043f FF10     		call	*(%rax)
 521              	.LVL70:
 395:fltk-1.3.4-1/jpeg/jcmaster.c ****       thisi = scanptr->component_index[ci];
 522              		.loc 1 395 0
 523 0441 85DB     		testl	%ebx, %ebx
 524 0443 0F8E0CFD 		jle	.L19
 524      FFFF
 525 0449 E996FCFF 		jmp	.L12
 525      FF
 526              	.LVL71:
 527              	.L96:
 435:fltk-1.3.4-1/jpeg/jcmaster.c **** 	for (coefi = Ss; coefi <= Se; coefi++) {
 528              		.loc 1 435 0
 529 044e 498B06   		movq	(%r14), %rax
 530 0451 4C89F7   		movq	%r14, %rdi
 531 0454 C7402812 		movl	$18, 40(%rax)
 531      000000
 532 045b 498B06   		movq	(%r14), %rax
 533 045e 4489602C 		movl	%r12d, 44(%rax)
 534 0462 498B06   		movq	(%r14), %rax
 535 0465 FF10     		call	*(%rax)
 536              	.LVL72:
 537 0467 448B7C24 		movl	28(%rsp), %r15d
 537      1C
 538 046c E9A8FDFF 		jmp	.L28
 538      FF
 539              	.LVL73:
 540              	.L97:
 478:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (! component_sent[ci])
 541              		.loc 1 478 0
 542 0471 418B765C 		movl	92(%r14), %esi
 543 0475 488D5C24 		leaq	48(%rsp), %rbx
 543      30
 544 047a 85F6     		testl	%esi, %esi
 545 047c 0F8E82FE 		jle	.L1
 545      FFFF
 546              	.LVL74:
 547              	.L42:
 455:fltk-1.3.4-1/jpeg/jcmaster.c **** 	thisi = scanptr->component_index[ci];
 548              		.loc 1 455 0
 549 0482 31ED     		xorl	%ebp, %ebp
 550 0484 EB1B     		jmp	.L47
 551              	.LVL75:
 552 0486 662E0F1F 		.p2align 4,,10
 552      84000000 
 552      0000
 553              		.p2align 3
 554              	.L46:
 478:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (! component_sent[ci])
 555              		.loc 1 478 0 discriminator 2
 556 0490 83C501   		addl	$1, %ebp
 557              	.LVL76:
 558 0493 4883C304 		addq	$4, %rbx
 559 0497 41396E5C 		cmpl	%ebp, 92(%r14)
 560 049b 0F8E63FE 		jle	.L1
 560      FFFF
 561              	.LVL77:
 562              	.L47:
 479:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT(cinfo, JERR_MISSING_DATA);
 563              		.loc 1 479 0
 564 04a1 8B03     		movl	(%rbx), %eax
 565 04a3 85C0     		testl	%eax, %eax
 566 04a5 75E9     		jne	.L46
 480:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 567              		.loc 1 480 0
 568 04a7 498B06   		movq	(%r14), %rax
 569 04aa 4C89F7   		movq	%r14, %rdi
 570 04ad C740282E 		movl	$46, 40(%rax)
 570      000000
 571 04b4 498B06   		movq	(%r14), %rax
 572 04b7 FF10     		call	*(%rax)
 573              	.LVL78:
 574 04b9 EBD5     		jmp	.L46
 575              	.LVL79:
 576              	.L4:
 386:fltk-1.3.4-1/jpeg/jcmaster.c ****       component_sent[ci] = FALSE;
 577              		.loc 1 386 0
 578 04bb 418B4E5C 		movl	92(%r14), %ecx
 385:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) 
 579              		.loc 1 385 0
 580 04bf 41C7865C 		movl	$0, 348(%r14)
 580      01000000 
 580      000000
 581              	.LVL80:
 386:fltk-1.3.4-1/jpeg/jcmaster.c ****       component_sent[ci] = FALSE;
 582              		.loc 1 386 0
 583 04ca 85C9     		testl	%ecx, %ecx
 584 04cc 7E5D     		jle	.L9
 585 04ce 488D5C24 		leaq	48(%rsp), %rbx
 585      30
 586 04d3 83E901   		subl	$1, %ecx
 587 04d6 488D4C8B 		leaq	4(%rbx,%rcx,4), %rcx
 587      04
 588 04db 4889D8   		movq	%rbx, %rax
 589              	.LVL81:
 590              	.L10:
 387:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 591              		.loc 1 387 0 discriminator 3
 592 04de C7000000 		movl	$0, (%rax)
 592      0000
 593 04e4 4883C004 		addq	$4, %rax
 386:fltk-1.3.4-1/jpeg/jcmaster.c ****       component_sent[ci] = FALSE;
 594              		.loc 1 386 0 discriminator 3
 595 04e8 4839C8   		cmpq	%rcx, %rax
 596 04eb 75F1     		jne	.L10
 597              	.LVL82:
 390:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Validate component indexes */
 598              		.loc 1 390 0
 599 04ed 85FF     		testl	%edi, %edi
 600 04ef 7E91     		jle	.L42
 601 04f1 E9B7FBFF 		jmp	.L48
 601      FF
 602              	.LVL83:
 603              	.L93:
 368:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 604              		.loc 1 368 0
 605 04f6 498B06   		movq	(%r14), %rax
 606 04f9 4C89F7   		movq	%r14, %rdi
 607 04fc C7402814 		movl	$20, 40(%rax)
 607      000000
 608 0503 498B06   		movq	(%r14), %rax
 609 0506 C7402C00 		movl	$0, 44(%rax)
 609      000000
 610 050d 498B06   		movq	(%r14), %rax
 611 0510 FF10     		call	*(%rax)
 612              	.LVL84:
 613 0512 418BBE10 		movl	272(%r14), %edi
 613      010000
 614 0519 E917FBFF 		jmp	.L2
 614      FF
 615              	.LVL85:
 616              	.L5:
 390:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Validate component indexes */
 617              		.loc 1 390 0
 618 051e 85FF     		testl	%edi, %edi
 619 0520 0F8F87FB 		jg	.L48
 619      FFFF
 620 0526 E9D9FDFF 		jmp	.L1
 620      FF
 621              	.LVL86:
 622              	.L9:
 623 052b 85FF     		testl	%edi, %edi
 624 052d 0F8ED1FD 		jle	.L1
 624      FFFF
 625 0533 E975FBFF 		jmp	.L48
 625      FF
 626              	.LVL87:
 627              	.L98:
 628              		.loc 1 483 0
 629 0538 E8000000 		call	__stack_chk_fail
 629      00
 630              	.LVL88:
 631              		.cfi_endproc
 632              	.LFE64:
 634              		.section	.text.unlikely.validate_script
 635              	.LCOLDE0:
 636              		.section	.text.validate_script
 637              	.LHOTE0:
 638              		.section	.text.unlikely.select_scan_parameters,"ax",@progbits
 639              	.LCOLDB1:
 640              		.section	.text.select_scan_parameters,"ax",@progbits
 641              	.LHOTB1:
 642              		.p2align 4,,15
 644              	select_scan_parameters:
 645              	.LFB66:
 484:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 485:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 486:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 487:fltk-1.3.4-1/jpeg/jcmaster.c **** reduce_script (j_compress_ptr cinfo)
 488:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Adapt scan script for use with reduced block size;
 489:fltk-1.3.4-1/jpeg/jcmaster.c ****  * assume that script has been validated before.
 490:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 491:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 492:fltk-1.3.4-1/jpeg/jcmaster.c ****   jpeg_scan_info * scanptr;
 493:fltk-1.3.4-1/jpeg/jcmaster.c ****   int idxout, idxin;
 494:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 495:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Circumvent const declaration for this function */
 496:fltk-1.3.4-1/jpeg/jcmaster.c ****   scanptr = (jpeg_scan_info *) cinfo->scan_info;
 497:fltk-1.3.4-1/jpeg/jcmaster.c ****   idxout = 0;
 498:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 499:fltk-1.3.4-1/jpeg/jcmaster.c ****   for (idxin = 0; idxin < cinfo->num_scans; idxin++) {
 500:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* After skipping, idxout becomes smaller than idxin */
 501:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (idxin != idxout)
 502:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Copy rest of data;
 503:fltk-1.3.4-1/jpeg/jcmaster.c ****        * note we stay in given chunk of allocated memory.
 504:fltk-1.3.4-1/jpeg/jcmaster.c ****        */
 505:fltk-1.3.4-1/jpeg/jcmaster.c ****       scanptr[idxout] = scanptr[idxin];
 506:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (scanptr[idxout].Ss > cinfo->lim_Se)
 507:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Entire scan out of range - skip this entry */
 508:fltk-1.3.4-1/jpeg/jcmaster.c ****       continue;
 509:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (scanptr[idxout].Se > cinfo->lim_Se)
 510:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Limit scan to end of block */
 511:fltk-1.3.4-1/jpeg/jcmaster.c ****       scanptr[idxout].Se = cinfo->lim_Se;
 512:fltk-1.3.4-1/jpeg/jcmaster.c ****     idxout++;
 513:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 514:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 515:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->num_scans = idxout;
 516:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 517:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 518:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif /* C_MULTISCAN_FILES_SUPPORTED */
 519:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 520:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 521:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 522:fltk-1.3.4-1/jpeg/jcmaster.c **** select_scan_parameters (j_compress_ptr cinfo)
 523:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Set up the scan parameters for the current scan */
 524:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 646              		.loc 1 524 0
 647              		.cfi_startproc
 648              	.LVL89:
 649 0000 53       		pushq	%rbx
 650              		.cfi_def_cfa_offset 16
 651              		.cfi_offset 3, -16
 525:fltk-1.3.4-1/jpeg/jcmaster.c ****   int ci;
 526:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 527:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_MULTISCAN_FILES_SUPPORTED
 528:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->scan_info != NULL) {
 652              		.loc 1 528 0
 653 0001 488B8718 		movq	280(%rdi), %rax
 653      010000
 524:fltk-1.3.4-1/jpeg/jcmaster.c ****   int ci;
 654              		.loc 1 524 0
 655 0008 4889FB   		movq	%rdi, %rbx
 656              		.loc 1 528 0
 657 000b 4885C0   		testq	%rax, %rax
 658 000e 0F84BC00 		je	.L102
 658      0000
 659              	.LVL90:
 660              	.LBB4:
 529:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Prepare for current scan --- the script is already validated */
 530:fltk-1.3.4-1/jpeg/jcmaster.c ****     my_master_ptr master = (my_master_ptr) cinfo->master;
 531:fltk-1.3.4-1/jpeg/jcmaster.c ****     const jpeg_scan_info * scanptr = cinfo->scan_info + master->scan_number;
 661              		.loc 1 531 0
 662 0014 488B97F0 		movq	496(%rdi), %rdx
 662      010000
 663 001b 4863522C 		movslq	44(%rdx), %rdx
 664 001f 488D14D2 		leaq	(%rdx,%rdx,8), %rdx
 665 0023 488D3490 		leaq	(%rax,%rdx,4), %rsi
 666              	.LVL91:
 532:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 533:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->comps_in_scan = scanptr->comps_in_scan;
 667              		.loc 1 533 0
 668 0027 8B06     		movl	(%rsi), %eax
 669 0029 89877401 		movl	%eax, 372(%rdi)
 669      0000
 670              	.LVL92:
 534:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < scanptr->comps_in_scan; ci++) {
 671              		.loc 1 534 0
 672 002f 8B16     		movl	(%rsi), %edx
 673 0031 85D2     		testl	%edx, %edx
 674 0033 7E2B     		jle	.L107
 675 0035 488B7F68 		movq	104(%rdi), %rdi
 676              	.LVL93:
 677 0039 31D2     		xorl	%edx, %edx
 678 003b 31C9     		xorl	%ecx, %ecx
 679              	.LVL94:
 680              	.L106:
 535:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->cur_comp_info[ci] =
 681              		.loc 1 535 0 discriminator 3
 682 003d 48634416 		movslq	4(%rsi,%rdx), %rax
 682      04
 534:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < scanptr->comps_in_scan; ci++) {
 683              		.loc 1 534 0 discriminator 3
 684 0042 83C101   		addl	$1, %ecx
 685              	.LVL95:
 686              		.loc 1 535 0 discriminator 3
 687 0045 488D0440 		leaq	(%rax,%rax,2), %rax
 688 0049 48C1E005 		salq	$5, %rax
 689 004d 4801F8   		addq	%rdi, %rax
 690 0050 48898453 		movq	%rax, 376(%rbx,%rdx,2)
 690      78010000 
 691 0058 4883C204 		addq	$4, %rdx
 534:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < scanptr->comps_in_scan; ci++) {
 692              		.loc 1 534 0 discriminator 3
 693 005c 390E     		cmpl	%ecx, (%rsi)
 694 005e 7FDD     		jg	.L106
 695              	.LVL96:
 696              	.L107:
 536:fltk-1.3.4-1/jpeg/jcmaster.c **** 	&cinfo->comp_info[scanptr->component_index[ci]];
 537:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 538:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->progressive_mode) {
 697              		.loc 1 538 0
 698 0060 8B835C01 		movl	348(%rbx), %eax
 698      0000
 699 0066 85C0     		testl	%eax, %eax
 700 0068 7536     		jne	.L115
 701              	.LVL97:
 702              	.L105:
 703              	.LBE4:
 539:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Ss = scanptr->Ss;
 540:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Se = scanptr->Se;
 541:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Ah = scanptr->Ah;
 542:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Al = scanptr->Al;
 543:fltk-1.3.4-1/jpeg/jcmaster.c ****       return;
 544:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 545:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 546:fltk-1.3.4-1/jpeg/jcmaster.c ****   else
 547:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 548:fltk-1.3.4-1/jpeg/jcmaster.c ****   {
 549:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Prepare for single sequential-JPEG scan containing all components */
 550:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->num_components > MAX_COMPS_IN_SCAN)
 551:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 552:fltk-1.3.4-1/jpeg/jcmaster.c **** 	       MAX_COMPS_IN_SCAN);
 553:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->comps_in_scan = cinfo->num_components;
 554:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) {
 555:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->cur_comp_info[ci] = &cinfo->comp_info[ci];
 556:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 557:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 558:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Ss = 0;
 559:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Se = cinfo->block_size * cinfo->block_size - 1;
 704              		.loc 1 559 0
 705 006a 8B83DC01 		movl	476(%rbx), %eax
 705      0000
 558:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Se = cinfo->block_size * cinfo->block_size - 1;
 706              		.loc 1 558 0
 707 0070 C783CC01 		movl	$0, 460(%rbx)
 707      00000000 
 707      0000
 560:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Ah = 0;
 708              		.loc 1 560 0
 709 007a C783D401 		movl	$0, 468(%rbx)
 709      00000000 
 709      0000
 561:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Al = 0;
 710              		.loc 1 561 0
 711 0084 C783D801 		movl	$0, 472(%rbx)
 711      00000000 
 711      0000
 559:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->Ah = 0;
 712              		.loc 1 559 0
 713 008e 0FAFC0   		imull	%eax, %eax
 714 0091 83E801   		subl	$1, %eax
 715 0094 8983D001 		movl	%eax, 464(%rbx)
 715      0000
 562:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 716              		.loc 1 562 0
 717 009a 5B       		popq	%rbx
 718              		.cfi_remember_state
 719              		.cfi_def_cfa_offset 8
 720              	.LVL98:
 721 009b C3       		ret
 722              	.LVL99:
 723 009c 0F1F4000 		.p2align 4,,10
 724              		.p2align 3
 725              	.L115:
 726              		.cfi_restore_state
 727              	.LBB5:
 539:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Se = scanptr->Se;
 728              		.loc 1 539 0
 729 00a0 8B4614   		movl	20(%rsi), %eax
 730 00a3 8983CC01 		movl	%eax, 460(%rbx)
 730      0000
 540:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Ah = scanptr->Ah;
 731              		.loc 1 540 0
 732 00a9 8B4618   		movl	24(%rsi), %eax
 733 00ac 8983D001 		movl	%eax, 464(%rbx)
 733      0000
 541:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->Al = scanptr->Al;
 734              		.loc 1 541 0
 735 00b2 8B461C   		movl	28(%rsi), %eax
 736 00b5 8983D401 		movl	%eax, 468(%rbx)
 736      0000
 542:fltk-1.3.4-1/jpeg/jcmaster.c ****       return;
 737              		.loc 1 542 0
 738 00bb 8B4620   		movl	32(%rsi), %eax
 739 00be 8983D801 		movl	%eax, 472(%rbx)
 739      0000
 740              	.LBE5:
 741              		.loc 1 562 0
 742 00c4 5B       		popq	%rbx
 743              		.cfi_remember_state
 744              		.cfi_def_cfa_offset 8
 745              	.LVL100:
 746 00c5 C3       		ret
 747              	.LVL101:
 748 00c6 662E0F1F 		.p2align 4,,10
 748      84000000 
 748      0000
 749              		.p2align 3
 750              	.L102:
 751              		.cfi_restore_state
 550:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 752              		.loc 1 550 0
 753 00d0 8B4F5C   		movl	92(%rdi), %ecx
 754 00d3 83F904   		cmpl	$4, %ecx
 755 00d6 7F38     		jg	.L116
 756              	.L109:
 554:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->cur_comp_info[ci] = &cinfo->comp_info[ci];
 757              		.loc 1 554 0
 758 00d8 85C9     		testl	%ecx, %ecx
 553:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->num_components; ci++) {
 759              		.loc 1 553 0
 760 00da 898B7401 		movl	%ecx, 372(%rbx)
 760      0000
 761              	.LVL102:
 554:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->cur_comp_info[ci] = &cinfo->comp_info[ci];
 762              		.loc 1 554 0
 763 00e0 7E88     		jle	.L105
 764 00e2 488B5368 		movq	104(%rbx), %rdx
 765 00e6 31C0     		xorl	%eax, %eax
 766              	.LVL103:
 767 00e8 0F1F8400 		.p2align 4,,10
 767      00000000 
 768              		.p2align 3
 769              	.L110:
 555:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 770              		.loc 1 555 0 discriminator 3
 771 00f0 488994C3 		movq	%rdx, 376(%rbx,%rax,8)
 771      78010000 
 772              	.LVL104:
 773 00f8 4883C001 		addq	$1, %rax
 774              	.LVL105:
 775 00fc 4883C260 		addq	$96, %rdx
 554:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->cur_comp_info[ci] = &cinfo->comp_info[ci];
 776              		.loc 1 554 0 discriminator 3
 777 0100 39C1     		cmpl	%eax, %ecx
 778 0102 7FEC     		jg	.L110
 779 0104 E961FFFF 		jmp	.L105
 779      FF
 780 0109 0F1F8000 		.p2align 4,,10
 780      000000
 781              		.p2align 3
 782              	.L116:
 551:fltk-1.3.4-1/jpeg/jcmaster.c **** 	       MAX_COMPS_IN_SCAN);
 783              		.loc 1 551 0
 784 0110 488B07   		movq	(%rdi), %rax
 785 0113 C740281B 		movl	$27, 40(%rax)
 785      000000
 786 011a 488B07   		movq	(%rdi), %rax
 787 011d 8B575C   		movl	92(%rdi), %edx
 788 0120 89502C   		movl	%edx, 44(%rax)
 789 0123 488B07   		movq	(%rdi), %rax
 790 0126 C7403004 		movl	$4, 48(%rax)
 790      000000
 791 012d 488B07   		movq	(%rdi), %rax
 792 0130 FF10     		call	*(%rax)
 793              	.LVL106:
 794 0132 8B4B5C   		movl	92(%rbx), %ecx
 795 0135 EBA1     		jmp	.L109
 796              		.cfi_endproc
 797              	.LFE66:
 799              		.section	.text.unlikely.select_scan_parameters
 800              	.LCOLDE1:
 801              		.section	.text.select_scan_parameters
 802              	.LHOTE1:
 803              		.section	.text.unlikely.pass_startup,"ax",@progbits
 804              	.LCOLDB2:
 805              		.section	.text.pass_startup,"ax",@progbits
 806              	.LHOTB2:
 807              		.p2align 4,,15
 809              	pass_startup:
 810              	.LFB69:
 563:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 564:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 565:fltk-1.3.4-1/jpeg/jcmaster.c **** LOCAL(void)
 566:fltk-1.3.4-1/jpeg/jcmaster.c **** per_scan_setup (j_compress_ptr cinfo)
 567:fltk-1.3.4-1/jpeg/jcmaster.c **** /* Do computations that are needed before processing a JPEG scan */
 568:fltk-1.3.4-1/jpeg/jcmaster.c **** /* cinfo->comps_in_scan and cinfo->cur_comp_info[] are already set */
 569:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 570:fltk-1.3.4-1/jpeg/jcmaster.c ****   int ci, mcublks, tmp;
 571:fltk-1.3.4-1/jpeg/jcmaster.c ****   jpeg_component_info *compptr;
 572:fltk-1.3.4-1/jpeg/jcmaster.c ****   
 573:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->comps_in_scan == 1) {
 574:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 575:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Noninterleaved (single-component) scan */
 576:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr = cinfo->cur_comp_info[0];
 577:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 578:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Overall image size in MCUs */
 579:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCUs_per_row = compptr->width_in_blocks;
 580:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 581:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 582:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* For noninterleaved scan, always one block per MCU */
 583:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_width = 1;
 584:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_height = 1;
 585:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_blocks = 1;
 586:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_sample_width = compptr->DCT_h_scaled_size;
 587:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->last_col_width = 1;
 588:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* For noninterleaved scans, it is convenient to define last_row_height
 589:fltk-1.3.4-1/jpeg/jcmaster.c ****      * as the number of block rows present in the last iMCU row.
 590:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 591:fltk-1.3.4-1/jpeg/jcmaster.c ****     tmp = (int) (compptr->height_in_blocks % compptr->v_samp_factor);
 592:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 593:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->last_row_height = tmp;
 594:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 595:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Prepare array describing MCU composition */
 596:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->blocks_in_MCU = 1;
 597:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCU_membership[0] = 0;
 598:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 599:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 600:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 601:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Interleaved (multi-component) scan */
 602:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->comps_in_scan <= 0 || cinfo->comps_in_scan > MAX_COMPS_IN_SCAN)
 603:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 604:fltk-1.3.4-1/jpeg/jcmaster.c **** 	       MAX_COMPS_IN_SCAN);
 605:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 606:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Overall image size in MCUs */
 607:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCUs_per_row = (JDIMENSION)
 608:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width,
 609:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 610:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCU_rows_in_scan = (JDIMENSION)
 611:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height,
 612:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 613:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 614:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->blocks_in_MCU = 0;
 615:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 616:fltk-1.3.4-1/jpeg/jcmaster.c ****     for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 617:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr = cinfo->cur_comp_info[ci];
 618:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Sampling factors give # of blocks of component in each MCU */
 619:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_width = compptr->h_samp_factor;
 620:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_height = compptr->v_samp_factor;
 621:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 622:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 623:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 624:fltk-1.3.4-1/jpeg/jcmaster.c ****       tmp = (int) (compptr->width_in_blocks % compptr->MCU_width);
 625:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 626:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->last_col_width = tmp;
 627:fltk-1.3.4-1/jpeg/jcmaster.c ****       tmp = (int) (compptr->height_in_blocks % compptr->MCU_height);
 628:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 629:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->last_row_height = tmp;
 630:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Prepare array describing MCU composition */
 631:fltk-1.3.4-1/jpeg/jcmaster.c ****       mcublks = compptr->MCU_blocks;
 632:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (cinfo->blocks_in_MCU + mcublks > C_MAX_BLOCKS_IN_MCU)
 633:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 634:fltk-1.3.4-1/jpeg/jcmaster.c ****       while (mcublks-- > 0) {
 635:fltk-1.3.4-1/jpeg/jcmaster.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 636:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 637:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 638:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 639:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 640:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 641:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Convert restart specified in rows to actual MCU count. */
 642:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Note that count must fit in 16 bits, so we provide limiting. */
 643:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->restart_in_rows > 0) {
 644:fltk-1.3.4-1/jpeg/jcmaster.c ****     long nominal = (long) cinfo->restart_in_rows * (long) cinfo->MCUs_per_row;
 645:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->restart_interval = (unsigned int) MIN(nominal, 65535L);
 646:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 647:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 648:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 649:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 650:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
 651:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Per-pass setup.
 652:fltk-1.3.4-1/jpeg/jcmaster.c ****  * This is called at the beginning of each pass.  We determine which modules
 653:fltk-1.3.4-1/jpeg/jcmaster.c ****  * will be active during this pass and give them appropriate start_pass calls.
 654:fltk-1.3.4-1/jpeg/jcmaster.c ****  * We also set is_last_pass to indicate whether any more passes will be
 655:fltk-1.3.4-1/jpeg/jcmaster.c ****  * required.
 656:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 657:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 658:fltk-1.3.4-1/jpeg/jcmaster.c **** METHODDEF(void)
 659:fltk-1.3.4-1/jpeg/jcmaster.c **** prepare_for_pass (j_compress_ptr cinfo)
 660:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 661:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master = (my_master_ptr) cinfo->master;
 662:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 663:fltk-1.3.4-1/jpeg/jcmaster.c ****   switch (master->pass_type) {
 664:fltk-1.3.4-1/jpeg/jcmaster.c ****   case main_pass:
 665:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Initial pass: will collect input data, and do either Huffman
 666:fltk-1.3.4-1/jpeg/jcmaster.c ****      * optimization or data output for the first scan.
 667:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 668:fltk-1.3.4-1/jpeg/jcmaster.c ****     select_scan_parameters(cinfo);
 669:fltk-1.3.4-1/jpeg/jcmaster.c ****     per_scan_setup(cinfo);
 670:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (! cinfo->raw_data_in) {
 671:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->cconvert->start_pass) (cinfo);
 672:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->downsample->start_pass) (cinfo);
 673:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->prep->start_pass) (cinfo, JBUF_PASS_THRU);
 674:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 675:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->fdct->start_pass) (cinfo);
 676:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->entropy->start_pass) (cinfo, cinfo->optimize_coding);
 677:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->coef->start_pass) (cinfo,
 678:fltk-1.3.4-1/jpeg/jcmaster.c **** 				(master->total_passes > 1 ?
 679:fltk-1.3.4-1/jpeg/jcmaster.c **** 				 JBUF_SAVE_AND_PASS : JBUF_PASS_THRU));
 680:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->main->start_pass) (cinfo, JBUF_PASS_THRU);
 681:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->optimize_coding) {
 682:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* No immediate data output; postpone writing frame/scan headers */
 683:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pub.call_pass_startup = FALSE;
 684:fltk-1.3.4-1/jpeg/jcmaster.c ****     } else {
 685:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Will write frame/scan headers at first jpeg_write_scanlines call */
 686:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pub.call_pass_startup = TRUE;
 687:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 688:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 689:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef ENTROPY_OPT_SUPPORTED
 690:fltk-1.3.4-1/jpeg/jcmaster.c ****   case huff_opt_pass:
 691:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Do Huffman optimization for a scan after the first one. */
 692:fltk-1.3.4-1/jpeg/jcmaster.c ****     select_scan_parameters(cinfo);
 693:fltk-1.3.4-1/jpeg/jcmaster.c ****     per_scan_setup(cinfo);
 694:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->Ss != 0 || cinfo->Ah == 0) {
 695:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->entropy->start_pass) (cinfo, TRUE);
 696:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->coef->start_pass) (cinfo, JBUF_CRANK_DEST);
 697:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pub.call_pass_startup = FALSE;
 698:fltk-1.3.4-1/jpeg/jcmaster.c ****       break;
 699:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 700:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Special case: Huffman DC refinement scans need no Huffman table
 701:fltk-1.3.4-1/jpeg/jcmaster.c ****      * and therefore we can skip the optimization pass for them.
 702:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 703:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_type = output_pass;
 704:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_number++;
 705:fltk-1.3.4-1/jpeg/jcmaster.c ****     /*FALLTHROUGH*/
 706:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 707:fltk-1.3.4-1/jpeg/jcmaster.c ****   case output_pass:
 708:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Do a data-output pass. */
 709:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* We need not repeat per-scan setup if prior optimization pass did it. */
 710:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (! cinfo->optimize_coding) {
 711:fltk-1.3.4-1/jpeg/jcmaster.c ****       select_scan_parameters(cinfo);
 712:fltk-1.3.4-1/jpeg/jcmaster.c ****       per_scan_setup(cinfo);
 713:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 714:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->entropy->start_pass) (cinfo, FALSE);
 715:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->coef->start_pass) (cinfo, JBUF_CRANK_DEST);
 716:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* We emit frame/scan headers now */
 717:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (master->scan_number == 0)
 718:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->marker->write_frame_header) (cinfo);
 719:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->marker->write_scan_header) (cinfo);
 720:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pub.call_pass_startup = FALSE;
 721:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 722:fltk-1.3.4-1/jpeg/jcmaster.c ****   default:
 723:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT(cinfo, JERR_NOT_COMPILED);
 724:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 725:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 726:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pub.is_last_pass = (master->pass_number == master->total_passes-1);
 727:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 728:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Set up progress monitor's pass info if present */
 729:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->progress != NULL) {
 730:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progress->completed_passes = master->pass_number;
 731:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progress->total_passes = master->total_passes;
 732:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 733:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 734:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 735:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 736:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
 737:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Special start-of-pass hook.
 738:fltk-1.3.4-1/jpeg/jcmaster.c ****  * This is called by jpeg_write_scanlines if call_pass_startup is TRUE.
 739:fltk-1.3.4-1/jpeg/jcmaster.c ****  * In single-pass processing, we need this hook because we don't want to
 740:fltk-1.3.4-1/jpeg/jcmaster.c ****  * write frame/scan headers during jpeg_start_compress; we want to let the
 741:fltk-1.3.4-1/jpeg/jcmaster.c ****  * application write COM markers etc. between jpeg_start_compress and the
 742:fltk-1.3.4-1/jpeg/jcmaster.c ****  * jpeg_write_scanlines loop.
 743:fltk-1.3.4-1/jpeg/jcmaster.c ****  * In multi-pass processing, this routine is not used.
 744:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 745:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 746:fltk-1.3.4-1/jpeg/jcmaster.c **** METHODDEF(void)
 747:fltk-1.3.4-1/jpeg/jcmaster.c **** pass_startup (j_compress_ptr cinfo)
 748:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 811              		.loc 1 748 0
 812              		.cfi_startproc
 813              	.LVL107:
 814 0000 53       		pushq	%rbx
 815              		.cfi_def_cfa_offset 16
 816              		.cfi_offset 3, -16
 749:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->master->call_pass_startup = FALSE; /* reset flag so call only once */
 817              		.loc 1 749 0
 818 0001 488B87F0 		movq	496(%rdi), %rax
 818      010000
 748:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->master->call_pass_startup = FALSE; /* reset flag so call only once */
 819              		.loc 1 748 0
 820 0008 4889FB   		movq	%rdi, %rbx
 821              		.loc 1 749 0
 822 000b C7401800 		movl	$0, 24(%rax)
 822      000000
 750:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 751:fltk-1.3.4-1/jpeg/jcmaster.c ****   (*cinfo->marker->write_frame_header) (cinfo);
 823              		.loc 1 751 0
 824 0012 488B8710 		movq	528(%rdi), %rax
 824      020000
 825 0019 FF5008   		call	*8(%rax)
 826              	.LVL108:
 752:fltk-1.3.4-1/jpeg/jcmaster.c ****   (*cinfo->marker->write_scan_header) (cinfo);
 827              		.loc 1 752 0
 828 001c 488B8310 		movq	528(%rbx), %rax
 828      020000
 829 0023 4889DF   		movq	%rbx, %rdi
 753:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 830              		.loc 1 753 0
 831 0026 5B       		popq	%rbx
 832              		.cfi_def_cfa_offset 8
 833              	.LVL109:
 752:fltk-1.3.4-1/jpeg/jcmaster.c ****   (*cinfo->marker->write_scan_header) (cinfo);
 834              		.loc 1 752 0
 835 0027 488B4010 		movq	16(%rax), %rax
 836 002b FFE0     		jmp	*%rax
 837              	.LVL110:
 838              		.cfi_endproc
 839              	.LFE69:
 841              		.section	.text.unlikely.pass_startup
 842              	.LCOLDE2:
 843              		.section	.text.pass_startup
 844              	.LHOTE2:
 845              		.section	.text.unlikely.finish_pass_master,"ax",@progbits
 846              	.LCOLDB3:
 847              		.section	.text.finish_pass_master,"ax",@progbits
 848              	.LHOTB3:
 849              		.p2align 4,,15
 851              	finish_pass_master:
 852              	.LFB70:
 754:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 755:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 756:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
 757:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Finish up at end of pass.
 758:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 759:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 760:fltk-1.3.4-1/jpeg/jcmaster.c **** METHODDEF(void)
 761:fltk-1.3.4-1/jpeg/jcmaster.c **** finish_pass_master (j_compress_ptr cinfo)
 762:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 853              		.loc 1 762 0
 854              		.cfi_startproc
 855              	.LVL111:
 856 0000 55       		pushq	%rbp
 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 6, -16
 859 0001 53       		pushq	%rbx
 860              		.cfi_def_cfa_offset 24
 861              		.cfi_offset 3, -24
 862 0002 4889FD   		movq	%rdi, %rbp
 863 0005 4883EC08 		subq	$8, %rsp
 864              		.cfi_def_cfa_offset 32
 763:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master = (my_master_ptr) cinfo->master;
 865              		.loc 1 763 0
 866 0009 488B9FF0 		movq	496(%rdi), %rbx
 866      010000
 867              	.LVL112:
 764:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 765:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* The entropy coder always needs an end-of-pass call,
 766:fltk-1.3.4-1/jpeg/jcmaster.c ****    * either to analyze statistics or to flush its output buffer.
 767:fltk-1.3.4-1/jpeg/jcmaster.c ****    */
 768:fltk-1.3.4-1/jpeg/jcmaster.c ****   (*cinfo->entropy->finish_pass) (cinfo);
 868              		.loc 1 768 0
 869 0010 488B8730 		movq	560(%rdi), %rax
 869      020000
 870 0017 FF5010   		call	*16(%rax)
 871              	.LVL113:
 769:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 770:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Update state for next pass */
 771:fltk-1.3.4-1/jpeg/jcmaster.c ****   switch (master->pass_type) {
 872              		.loc 1 771 0
 873 001a 8B4320   		movl	32(%rbx), %eax
 874 001d 83F801   		cmpl	$1, %eax
 875 0020 744E     		je	.L121
 876 0022 722C     		jb	.L122
 877 0024 83F802   		cmpl	$2, %eax
 878 0027 7515     		jne	.L120
 772:fltk-1.3.4-1/jpeg/jcmaster.c ****   case main_pass:
 773:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* next pass is either output of scan 0 (after optimization)
 774:fltk-1.3.4-1/jpeg/jcmaster.c ****      * or output of scan 1 (if no optimization).
 775:fltk-1.3.4-1/jpeg/jcmaster.c ****      */
 776:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_type = output_pass;
 777:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (! cinfo->optimize_coding)
 778:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->scan_number++;
 779:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 780:fltk-1.3.4-1/jpeg/jcmaster.c ****   case huff_opt_pass:
 781:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* next pass is always output of current scan */
 782:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_type = output_pass;
 783:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 784:fltk-1.3.4-1/jpeg/jcmaster.c ****   case output_pass:
 785:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* next pass is either optimization or output of next scan */
 786:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->optimize_coding)
 879              		.loc 1 786 0
 880 0029 8B852801 		movl	296(%rbp), %eax
 880      0000
 881 002f 85C0     		testl	%eax, %eax
 882 0031 7407     		je	.L124
 787:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pass_type = huff_opt_pass;
 883              		.loc 1 787 0
 884 0033 C7432001 		movl	$1, 32(%rbx)
 884      000000
 885              	.L124:
 788:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->scan_number++;
 886              		.loc 1 788 0
 887 003a 83432C01 		addl	$1, 44(%rbx)
 888              	.L120:
 789:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 790:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 791:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 792:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pass_number++;
 889              		.loc 1 792 0
 890 003e 83432401 		addl	$1, 36(%rbx)
 793:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 891              		.loc 1 793 0
 892 0042 4883C408 		addq	$8, %rsp
 893              		.cfi_remember_state
 894              		.cfi_def_cfa_offset 24
 895 0046 5B       		popq	%rbx
 896              		.cfi_def_cfa_offset 16
 897              	.LVL114:
 898 0047 5D       		popq	%rbp
 899              		.cfi_def_cfa_offset 8
 900              	.LVL115:
 901 0048 C3       		ret
 902              	.LVL116:
 903 0049 0F1F8000 		.p2align 4,,10
 903      000000
 904              		.p2align 3
 905              	.L122:
 906              		.cfi_restore_state
 776:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (! cinfo->optimize_coding)
 907              		.loc 1 776 0
 908 0050 C7432002 		movl	$2, 32(%rbx)
 908      000000
 777:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->scan_number++;
 909              		.loc 1 777 0
 910 0057 8B952801 		movl	296(%rbp), %edx
 910      0000
 911 005d 85D2     		testl	%edx, %edx
 912 005f 75DD     		jne	.L120
 788:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 913              		.loc 1 788 0
 914 0061 83432C01 		addl	$1, 44(%rbx)
 915 0065 EBD7     		jmp	.L120
 916 0067 660F1F84 		.p2align 4,,10
 916      00000000 
 916      00
 917              		.p2align 3
 918              	.L121:
 782:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 919              		.loc 1 782 0
 920 0070 C7432002 		movl	$2, 32(%rbx)
 920      000000
 792:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 921              		.loc 1 792 0
 922 0077 83432401 		addl	$1, 36(%rbx)
 923              		.loc 1 793 0
 924 007b 4883C408 		addq	$8, %rsp
 925              		.cfi_def_cfa_offset 24
 926 007f 5B       		popq	%rbx
 927              		.cfi_def_cfa_offset 16
 928              	.LVL117:
 929 0080 5D       		popq	%rbp
 930              		.cfi_def_cfa_offset 8
 931              	.LVL118:
 932 0081 C3       		ret
 933              		.cfi_endproc
 934              	.LFE70:
 936              		.section	.text.unlikely.finish_pass_master
 937              	.LCOLDE3:
 938              		.section	.text.finish_pass_master
 939              	.LHOTE3:
 940              		.section	.text.unlikely.per_scan_setup,"ax",@progbits
 941              	.LCOLDB4:
 942              		.section	.text.per_scan_setup,"ax",@progbits
 943              	.LHOTB4:
 944              		.p2align 4,,15
 946              	per_scan_setup:
 947              	.LFB67:
 569:fltk-1.3.4-1/jpeg/jcmaster.c ****   int ci, mcublks, tmp;
 948              		.loc 1 569 0
 949              		.cfi_startproc
 950              	.LVL119:
 951 0000 4155     		pushq	%r13
 952              		.cfi_def_cfa_offset 16
 953              		.cfi_offset 13, -16
 954 0002 4154     		pushq	%r12
 955              		.cfi_def_cfa_offset 24
 956              		.cfi_offset 12, -24
 957 0004 55       		pushq	%rbp
 958              		.cfi_def_cfa_offset 32
 959              		.cfi_offset 6, -32
 960 0005 53       		pushq	%rbx
 961              		.cfi_def_cfa_offset 40
 962              		.cfi_offset 3, -40
 963 0006 4889FB   		movq	%rdi, %rbx
 964 0009 4883EC08 		subq	$8, %rsp
 965              		.cfi_def_cfa_offset 48
 573:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 966              		.loc 1 573 0
 967 000d 8B877401 		movl	372(%rdi), %eax
 967      0000
 968 0013 83F801   		cmpl	$1, %eax
 969 0016 0F844B01 		je	.L153
 969      0000
 602:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 970              		.loc 1 602 0
 971 001c 83E801   		subl	$1, %eax
 972 001f 83F803   		cmpl	$3, %eax
 973 0022 0F87A501 		ja	.L154
 973      0000
 974              	.LVL120:
 975              	.L130:
 608:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 976              		.loc 1 608 0
 977 0028 8BB36001 		movl	352(%rbx), %esi
 977      0000
 978 002e 8B7B50   		movl	80(%rbx), %edi
 616:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr = cinfo->cur_comp_info[ci];
 979              		.loc 1 616 0
 980 0031 4531E4   		xorl	%r12d, %r12d
 608:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 981              		.loc 1 608 0
 982 0034 0FAFB3DC 		imull	476(%rbx), %esi
 982      010000
 983 003b 4C8DAB78 		leaq	376(%rbx), %r13
 983      010000
 984 0042 4863F6   		movslq	%esi, %rsi
 985 0045 E8000000 		call	jdiv_round_up
 985      00
 986              	.LVL121:
 611:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 987              		.loc 1 611 0
 988 004a 8BB36401 		movl	356(%rbx), %esi
 988      0000
 989 0050 8B7B54   		movl	84(%rbx), %edi
 990 0053 0FAFB3DC 		imull	476(%rbx), %esi
 990      010000
 607:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width,
 991              		.loc 1 607 0
 992 005a 89839801 		movl	%eax, 408(%rbx)
 992      0000
 611:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 993              		.loc 1 611 0
 994 0060 4863F6   		movslq	%esi, %rsi
 995 0063 E8000000 		call	jdiv_round_up
 995      00
 996              	.LVL122:
 610:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height,
 997              		.loc 1 610 0
 998 0068 89839C01 		movl	%eax, 412(%rbx)
 998      0000
 616:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr = cinfo->cur_comp_info[ci];
 999              		.loc 1 616 0
 1000 006e 8B837401 		movl	372(%rbx), %eax
 1000      0000
 614:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 1001              		.loc 1 614 0
 1002 0074 C783A001 		movl	$0, 416(%rbx)
 1002      00000000 
 1002      0000
 1003              	.LVL123:
 616:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr = cinfo->cur_comp_info[ci];
 1004              		.loc 1 616 0
 1005 007e 85C0     		testl	%eax, %eax
 1006 0080 0F8E9300 		jle	.L129
 1006      0000
 1007              	.LVL124:
 1008              	.L149:
 617:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Sampling factors give # of blocks of component in each MCU */
 1009              		.loc 1 617 0
 1010 0086 498B4D00 		movq	0(%r13), %rcx
 1011              	.LVL125:
 624:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 1012              		.loc 1 624 0
 1013 008a 31D2     		xorl	%edx, %edx
 619:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_height = compptr->v_samp_factor;
 1014              		.loc 1 619 0
 1015 008c 8B7108   		movl	8(%rcx), %esi
 622:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 1016              		.loc 1 622 0
 1017 008f 8B4124   		movl	36(%rcx), %eax
 620:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 1018              		.loc 1 620 0
 1019 0092 8B790C   		movl	12(%rcx), %edi
 622:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 1020              		.loc 1 622 0
 1021 0095 0FAFC6   		imull	%esi, %eax
 621:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 1022              		.loc 1 621 0
 1023 0098 89F5     		movl	%esi, %ebp
 619:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_height = compptr->v_samp_factor;
 1024              		.loc 1 619 0
 1025 009a 897138   		movl	%esi, 56(%rcx)
 621:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 1026              		.loc 1 621 0
 1027 009d 0FAFEF   		imull	%edi, %ebp
 620:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 1028              		.loc 1 620 0
 1029 00a0 89793C   		movl	%edi, 60(%rcx)
 622:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 1030              		.loc 1 622 0
 1031 00a3 894144   		movl	%eax, 68(%rcx)
 624:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 1032              		.loc 1 624 0
 1033 00a6 8B411C   		movl	28(%rcx), %eax
 621:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 1034              		.loc 1 621 0
 1035 00a9 896940   		movl	%ebp, 64(%rcx)
 624:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 1036              		.loc 1 624 0
 1037 00ac F7F6     		divl	%esi
 1038              	.LVL126:
 627:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 1039              		.loc 1 627 0
 1040 00ae 8B4120   		movl	32(%rcx), %eax
 625:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->last_col_width = tmp;
 1041              		.loc 1 625 0
 1042 00b1 85D2     		testl	%edx, %edx
 1043 00b3 0F45F2   		cmovne	%edx, %esi
 1044              	.LVL127:
 627:fltk-1.3.4-1/jpeg/jcmaster.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 1045              		.loc 1 627 0
 1046 00b6 31D2     		xorl	%edx, %edx
 1047 00b8 F7F7     		divl	%edi
 1048              	.LVL128:
 626:fltk-1.3.4-1/jpeg/jcmaster.c ****       tmp = (int) (compptr->height_in_blocks % compptr->MCU_height);
 1049              		.loc 1 626 0
 1050 00ba 897148   		movl	%esi, 72(%rcx)
 628:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr->last_row_height = tmp;
 1051              		.loc 1 628 0
 1052 00bd 85D2     		testl	%edx, %edx
 1053 00bf 0F45FA   		cmovne	%edx, %edi
 1054              	.LVL129:
 629:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Prepare array describing MCU composition */
 1055              		.loc 1 629 0
 1056 00c2 89794C   		movl	%edi, 76(%rcx)
 1057              	.LVL130:
 632:fltk-1.3.4-1/jpeg/jcmaster.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 1058              		.loc 1 632 0
 1059 00c5 8B83A001 		movl	416(%rbx), %eax
 1059      0000
 1060 00cb 01E8     		addl	%ebp, %eax
 1061 00cd 83F80A   		cmpl	$10, %eax
 1062 00d0 7F7E     		jg	.L155
 1063              	.LVL131:
 1064              	.L134:
 634:fltk-1.3.4-1/jpeg/jcmaster.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 1065              		.loc 1 634 0
 1066 00d2 85ED     		testl	%ebp, %ebp
 1067 00d4 8D7DFF   		leal	-1(%rbp), %edi
 1068              	.LVL132:
 1069 00d7 7E2B     		jle	.L139
 1070 00d9 8BB3A001 		movl	416(%rbx), %esi
 1070      0000
 1071 00df 8D4C3500 		leal	0(%rbp,%rsi), %ecx
 1072 00e3 89F0     		movl	%esi, %eax
 1073              	.LVL133:
 1074              		.p2align 4,,10
 1075 00e5 0F1F00   		.p2align 3
 1076              	.L138:
 635:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 1077              		.loc 1 635 0
 1078 00e8 4863D0   		movslq	%eax, %rdx
 1079 00eb 83C001   		addl	$1, %eax
 1080              	.LVL134:
 634:fltk-1.3.4-1/jpeg/jcmaster.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 1081              		.loc 1 634 0
 1082 00ee 39C8     		cmpl	%ecx, %eax
 635:fltk-1.3.4-1/jpeg/jcmaster.c ****       }
 1083              		.loc 1 635 0
 1084 00f0 4489A493 		movl	%r12d, 420(%rbx,%rdx,4)
 1084      A4010000 
 1085              	.LVL135:
 634:fltk-1.3.4-1/jpeg/jcmaster.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 1086              		.loc 1 634 0
 1087 00f8 75EE     		jne	.L138
 1088 00fa 8D443701 		leal	1(%rdi,%rsi), %eax
 1089 00fe 8983A001 		movl	%eax, 416(%rbx)
 1089      0000
 1090              	.L139:
 616:fltk-1.3.4-1/jpeg/jcmaster.c ****       compptr = cinfo->cur_comp_info[ci];
 1091              		.loc 1 616 0
 1092 0104 4183C401 		addl	$1, %r12d
 1093              	.LVL136:
 1094 0108 4983C508 		addq	$8, %r13
 1095 010c 4439A374 		cmpl	%r12d, 372(%rbx)
 1095      010000
 1096 0113 0F8F6DFF 		jg	.L149
 1096      FFFF
 1097              	.LVL137:
 1098              	.L129:
 643:fltk-1.3.4-1/jpeg/jcmaster.c ****     long nominal = (long) cinfo->restart_in_rows * (long) cinfo->MCUs_per_row;
 1099              		.loc 1 643 0
 1100 0119 48638340 		movslq	320(%rbx), %rax
 1100      010000
 1101 0120 85C0     		testl	%eax, %eax
 1102 0122 7E1E     		jle	.L126
 1103              	.LBB6:
 644:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->restart_interval = (unsigned int) MIN(nominal, 65535L);
 1104              		.loc 1 644 0
 1105 0124 8B939801 		movl	408(%rbx), %edx
 1105      0000
 1106 012a 480FAFC2 		imulq	%rdx, %rax
 1107              	.LVL138:
 645:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 1108              		.loc 1 645 0
 1109 012e BAFFFF00 		movl	$65535, %edx
 1109      00
 1110 0133 483DFEFF 		cmpq	$65534, %rax
 1110      0000
 1111 0139 0F4FC2   		cmovg	%edx, %eax
 1112              	.LVL139:
 1113 013c 89833C01 		movl	%eax, 316(%rbx)
 1113      0000
 1114              	.LVL140:
 1115              	.L126:
 1116              	.LBE6:
 647:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1117              		.loc 1 647 0
 1118 0142 4883C408 		addq	$8, %rsp
 1119              		.cfi_remember_state
 1120              		.cfi_def_cfa_offset 40
 1121 0146 5B       		popq	%rbx
 1122              		.cfi_def_cfa_offset 32
 1123              	.LVL141:
 1124 0147 5D       		popq	%rbp
 1125              		.cfi_def_cfa_offset 24
 1126 0148 415C     		popq	%r12
 1127              		.cfi_def_cfa_offset 16
 1128 014a 415D     		popq	%r13
 1129              		.cfi_def_cfa_offset 8
 1130 014c C3       		ret
 1131              	.LVL142:
 1132 014d 0F1F00   		.p2align 4,,10
 1133              		.p2align 3
 1134              	.L155:
 1135              		.cfi_restore_state
 633:fltk-1.3.4-1/jpeg/jcmaster.c ****       while (mcublks-- > 0) {
 1136              		.loc 1 633 0
 1137 0150 488B03   		movq	(%rbx), %rax
 1138 0153 4889DF   		movq	%rbx, %rdi
 1139              	.LVL143:
 1140 0156 C740280E 		movl	$14, 40(%rax)
 1140      000000
 1141              	.LVL144:
 1142 015d 488B03   		movq	(%rbx), %rax
 1143 0160 FF10     		call	*(%rax)
 1144              	.LVL145:
 1145 0162 E96BFFFF 		jmp	.L134
 1145      FF
 1146              	.LVL146:
 1147              	.L153:
 576:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 1148              		.loc 1 576 0
 1149 0167 488B8F78 		movq	376(%rdi), %rcx
 1149      010000
 1150              	.LVL147:
 591:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 1151              		.loc 1 591 0
 1152 016e 31D2     		xorl	%edx, %edx
 579:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 1153              		.loc 1 579 0
 1154 0170 8B411C   		movl	28(%rcx), %eax
 1155 0173 89879801 		movl	%eax, 408(%rdi)
 1155      0000
 580:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 1156              		.loc 1 580 0
 1157 0179 8B4120   		movl	32(%rcx), %eax
 1158 017c 89879C01 		movl	%eax, 412(%rdi)
 1158      0000
 586:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->last_col_width = 1;
 1159              		.loc 1 586 0
 1160 0182 8B4124   		movl	36(%rcx), %eax
 591:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 1161              		.loc 1 591 0
 1162 0185 8B710C   		movl	12(%rcx), %esi
 583:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_height = 1;
 1163              		.loc 1 583 0
 1164 0188 C7413801 		movl	$1, 56(%rcx)
 1164      000000
 584:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_blocks = 1;
 1165              		.loc 1 584 0
 1166 018f C7413C01 		movl	$1, 60(%rcx)
 1166      000000
 585:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->MCU_sample_width = compptr->DCT_h_scaled_size;
 1167              		.loc 1 585 0
 1168 0196 C7414001 		movl	$1, 64(%rcx)
 1168      000000
 586:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->last_col_width = 1;
 1169              		.loc 1 586 0
 1170 019d 894144   		movl	%eax, 68(%rcx)
 591:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 1171              		.loc 1 591 0
 1172 01a0 8B4120   		movl	32(%rcx), %eax
 587:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* For noninterleaved scans, it is convenient to define last_row_height
 1173              		.loc 1 587 0
 1174 01a3 C7414801 		movl	$1, 72(%rcx)
 1174      000000
 591:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 1175              		.loc 1 591 0
 1176 01aa F7F6     		divl	%esi
 1177              	.LVL148:
 592:fltk-1.3.4-1/jpeg/jcmaster.c ****     compptr->last_row_height = tmp;
 1178              		.loc 1 592 0
 1179 01ac 85D2     		testl	%edx, %edx
 1180 01ae 0F45F2   		cmovne	%edx, %esi
 1181              	.LVL149:
 593:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 1182              		.loc 1 593 0
 1183 01b1 89714C   		movl	%esi, 76(%rcx)
 596:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->MCU_membership[0] = 0;
 1184              		.loc 1 596 0
 1185 01b4 C787A001 		movl	$1, 416(%rdi)
 1185      00000100 
 1185      0000
 597:fltk-1.3.4-1/jpeg/jcmaster.c ****     
 1186              		.loc 1 597 0
 1187 01be C787A401 		movl	$0, 420(%rdi)
 1187      00000000 
 1187      0000
 1188 01c8 E94CFFFF 		jmp	.L129
 1188      FF
 1189              	.LVL150:
 1190              	.L154:
 603:fltk-1.3.4-1/jpeg/jcmaster.c **** 	       MAX_COMPS_IN_SCAN);
 1191              		.loc 1 603 0
 1192 01cd 488B07   		movq	(%rdi), %rax
 1193 01d0 C740281B 		movl	$27, 40(%rax)
 1193      000000
 1194 01d7 488B07   		movq	(%rdi), %rax
 1195 01da 8B977401 		movl	372(%rdi), %edx
 1195      0000
 1196 01e0 89502C   		movl	%edx, 44(%rax)
 1197 01e3 488B07   		movq	(%rdi), %rax
 1198 01e6 C7403004 		movl	$4, 48(%rax)
 1198      000000
 1199 01ed 488B07   		movq	(%rdi), %rax
 1200 01f0 FF10     		call	*(%rax)
 1201              	.LVL151:
 1202 01f2 E931FEFF 		jmp	.L130
 1202      FF
 1203              		.cfi_endproc
 1204              	.LFE67:
 1206              		.section	.text.unlikely.per_scan_setup
 1207              	.LCOLDE4:
 1208              		.section	.text.per_scan_setup
 1209              	.LHOTE4:
 1210              		.section	.text.unlikely.prepare_for_pass,"ax",@progbits
 1211              	.LCOLDB5:
 1212              		.section	.text.prepare_for_pass,"ax",@progbits
 1213              	.LHOTB5:
 1214              		.p2align 4,,15
 1216              	prepare_for_pass:
 1217              	.LFB68:
 660:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master = (my_master_ptr) cinfo->master;
 1218              		.loc 1 660 0
 1219              		.cfi_startproc
 1220              	.LVL152:
 1221 0000 55       		pushq	%rbp
 1222              		.cfi_def_cfa_offset 16
 1223              		.cfi_offset 6, -16
 1224 0001 53       		pushq	%rbx
 1225              		.cfi_def_cfa_offset 24
 1226              		.cfi_offset 3, -24
 1227 0002 4889FB   		movq	%rdi, %rbx
 1228 0005 4883EC08 		subq	$8, %rsp
 1229              		.cfi_def_cfa_offset 32
 661:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1230              		.loc 1 661 0
 1231 0009 488BAFF0 		movq	496(%rdi), %rbp
 1231      010000
 1232              	.LVL153:
 663:fltk-1.3.4-1/jpeg/jcmaster.c ****   case main_pass:
 1233              		.loc 1 663 0
 1234 0010 8B4520   		movl	32(%rbp), %eax
 1235 0013 83F801   		cmpl	$1, %eax
 1236 0016 0F842401 		je	.L158
 1236      0000
 1237 001c 0F82A600 		jb	.L159
 1237      0000
 1238 0022 83F802   		cmpl	$2, %eax
 1239 0025 0F858500 		jne	.L180
 1239      0000
 1240              	.LVL154:
 1241              	.L160:
 710:fltk-1.3.4-1/jpeg/jcmaster.c ****       select_scan_parameters(cinfo);
 1242              		.loc 1 710 0
 1243 002b 8B932801 		movl	296(%rbx), %edx
 1243      0000
 1244 0031 85D2     		testl	%edx, %edx
 1245 0033 0F84BF01 		je	.L181
 1245      0000
 1246              	.L167:
 714:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->coef->start_pass) (cinfo, JBUF_CRANK_DEST);
 1247              		.loc 1 714 0
 1248 0039 488B8330 		movq	560(%rbx), %rax
 1248      020000
 1249 0040 31F6     		xorl	%esi, %esi
 1250 0042 4889DF   		movq	%rbx, %rdi
 1251 0045 FF10     		call	*(%rax)
 1252              	.LVL155:
 715:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* We emit frame/scan headers now */
 1253              		.loc 1 715 0
 1254 0047 488B8308 		movq	520(%rbx), %rax
 1254      020000
 1255 004e BE020000 		movl	$2, %esi
 1255      00
 1256 0053 4889DF   		movq	%rbx, %rdi
 1257 0056 FF10     		call	*(%rax)
 1258              	.LVL156:
 717:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->marker->write_frame_header) (cinfo);
 1259              		.loc 1 717 0
 1260 0058 8B452C   		movl	44(%rbp), %eax
 1261 005b 85C0     		testl	%eax, %eax
 1262 005d 0F847D01 		je	.L182
 1262      0000
 1263              	.L168:
 719:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pub.call_pass_startup = FALSE;
 1264              		.loc 1 719 0
 1265 0063 488B8310 		movq	528(%rbx), %rax
 1265      020000
 1266 006a 4889DF   		movq	%rbx, %rdi
 1267 006d FF5010   		call	*16(%rax)
 1268              	.LVL157:
 720:fltk-1.3.4-1/jpeg/jcmaster.c ****     break;
 1269              		.loc 1 720 0
 1270 0070 C7451800 		movl	$0, 24(%rbp)
 1270      000000
 1271              	.L164:
 726:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1272              		.loc 1 726 0
 1273 0077 8B4528   		movl	40(%rbp), %eax
 1274 007a 8B5524   		movl	36(%rbp), %edx
 1275 007d 83E801   		subl	$1, %eax
 1276 0080 39D0     		cmpl	%edx, %eax
 1277 0082 0F94C0   		sete	%al
 1278 0085 0FB6C0   		movzbl	%al, %eax
 1279 0088 89451C   		movl	%eax, 28(%rbp)
 729:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progress->completed_passes = master->pass_number;
 1280              		.loc 1 729 0
 1281 008b 488B4310 		movq	16(%rbx), %rax
 1282 008f 4885C0   		testq	%rax, %rax
 1283 0092 740D     		je	.L156
 730:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progress->total_passes = master->total_passes;
 1284              		.loc 1 730 0
 1285 0094 895018   		movl	%edx, 24(%rax)
 731:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 1286              		.loc 1 731 0
 1287 0097 488B4310 		movq	16(%rbx), %rax
 1288 009b 8B5528   		movl	40(%rbp), %edx
 1289 009e 89501C   		movl	%edx, 28(%rax)
 1290              	.L156:
 733:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1291              		.loc 1 733 0
 1292 00a1 4883C408 		addq	$8, %rsp
 1293              		.cfi_remember_state
 1294              		.cfi_def_cfa_offset 24
 1295 00a5 5B       		popq	%rbx
 1296              		.cfi_def_cfa_offset 16
 1297              	.LVL158:
 1298 00a6 5D       		popq	%rbp
 1299              		.cfi_def_cfa_offset 8
 1300              	.LVL159:
 1301 00a7 C3       		ret
 1302              	.LVL160:
 1303 00a8 0F1F8400 		.p2align 4,,10
 1303      00000000 
 1304              		.p2align 3
 1305              	.L180:
 1306              		.cfi_restore_state
 723:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 1307              		.loc 1 723 0
 1308 00b0 488B07   		movq	(%rdi), %rax
 1309 00b3 C7402831 		movl	$49, 40(%rax)
 1309      000000
 1310 00ba 488B07   		movq	(%rdi), %rax
 1311 00bd FF10     		call	*(%rax)
 1312              	.LVL161:
 1313 00bf EBB6     		jmp	.L164
 1314              		.p2align 4,,10
 1315 00c1 0F1F8000 		.p2align 3
 1315      000000
 1316              	.L159:
 668:fltk-1.3.4-1/jpeg/jcmaster.c ****     per_scan_setup(cinfo);
 1317              		.loc 1 668 0
 1318 00c8 E8000000 		call	select_scan_parameters
 1318      00
 1319              	.LVL162:
 669:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (! cinfo->raw_data_in) {
 1320              		.loc 1 669 0
 1321 00cd 4889DF   		movq	%rbx, %rdi
 1322 00d0 E8000000 		call	per_scan_setup
 1322      00
 1323              	.LVL163:
 670:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->cconvert->start_pass) (cinfo);
 1324              		.loc 1 670 0
 1325 00d5 448B8320 		movl	288(%rbx), %r8d
 1325      010000
 1326 00dc 4585C0   		testl	%r8d, %r8d
 1327 00df 0F84CB00 		je	.L183
 1327      0000
 1328              	.L161:
 675:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->entropy->start_pass) (cinfo, cinfo->optimize_coding);
 1329              		.loc 1 675 0
 1330 00e5 488B8328 		movq	552(%rbx), %rax
 1330      020000
 1331 00ec 4889DF   		movq	%rbx, %rdi
 1332 00ef FF10     		call	*(%rax)
 1333              	.LVL164:
 676:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->coef->start_pass) (cinfo,
 1334              		.loc 1 676 0
 1335 00f1 488B8330 		movq	560(%rbx), %rax
 1335      020000
 1336 00f8 8BB32801 		movl	296(%rbx), %esi
 1336      0000
 1337 00fe 4889DF   		movq	%rbx, %rdi
 1338 0101 FF10     		call	*(%rax)
 1339              	.LVL165:
 677:fltk-1.3.4-1/jpeg/jcmaster.c **** 				(master->total_passes > 1 ?
 1340              		.loc 1 677 0
 1341 0103 31F6     		xorl	%esi, %esi
 1342 0105 837D2801 		cmpl	$1, 40(%rbp)
 1343 0109 488B8308 		movq	520(%rbx), %rax
 1343      020000
 1344 0110 4889DF   		movq	%rbx, %rdi
 1345 0113 400F9FC6 		setg	%sil
 1346 0117 8D3476   		leal	(%rsi,%rsi,2), %esi
 1347 011a FF10     		call	*(%rax)
 1348              	.LVL166:
 680:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->optimize_coding) {
 1349              		.loc 1 680 0
 1350 011c 488B83F8 		movq	504(%rbx), %rax
 1350      010000
 1351 0123 31F6     		xorl	%esi, %esi
 1352 0125 4889DF   		movq	%rbx, %rdi
 1353 0128 FF10     		call	*(%rax)
 1354              	.LVL167:
 683:fltk-1.3.4-1/jpeg/jcmaster.c ****     } else {
 1355              		.loc 1 683 0
 1356 012a 8BBB2801 		movl	296(%rbx), %edi
 1356      0000
 1357 0130 31C0     		xorl	%eax, %eax
 1358 0132 85FF     		testl	%edi, %edi
 1359 0134 0F94C0   		sete	%al
 1360 0137 894518   		movl	%eax, 24(%rbp)
 1361 013a E938FFFF 		jmp	.L164
 1361      FF
 1362 013f 90       		.p2align 4,,10
 1363              		.p2align 3
 1364              	.L158:
 692:fltk-1.3.4-1/jpeg/jcmaster.c ****     per_scan_setup(cinfo);
 1365              		.loc 1 692 0
 1366 0140 E8000000 		call	select_scan_parameters
 1366      00
 1367              	.LVL168:
 693:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->Ss != 0 || cinfo->Ah == 0) {
 1368              		.loc 1 693 0
 1369 0145 4889DF   		movq	%rbx, %rdi
 1370 0148 E8000000 		call	per_scan_setup
 1370      00
 1371              	.LVL169:
 694:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->entropy->start_pass) (cinfo, TRUE);
 1372              		.loc 1 694 0
 1373 014d 8BB3CC01 		movl	460(%rbx), %esi
 1373      0000
 1374 0153 85F6     		testl	%esi, %esi
 1375 0155 7521     		jne	.L165
 694:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->entropy->start_pass) (cinfo, TRUE);
 1376              		.loc 1 694 0 is_stmt 0 discriminator 1
 1377 0157 8B8BD401 		movl	468(%rbx), %ecx
 1377      0000
 1378 015d 85C9     		testl	%ecx, %ecx
 1379 015f 7417     		je	.L165
 703:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_number++;
 1380              		.loc 1 703 0 is_stmt 1
 1381 0161 C7452002 		movl	$2, 32(%rbp)
 1381      000000
 704:fltk-1.3.4-1/jpeg/jcmaster.c ****     /*FALLTHROUGH*/
 1382              		.loc 1 704 0
 1383 0168 83452401 		addl	$1, 36(%rbp)
 1384 016c E9BAFEFF 		jmp	.L160
 1384      FF
 1385              		.p2align 4,,10
 1386 0171 0F1F8000 		.p2align 3
 1386      000000
 1387              	.L165:
 695:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->coef->start_pass) (cinfo, JBUF_CRANK_DEST);
 1388              		.loc 1 695 0
 1389 0178 488B8330 		movq	560(%rbx), %rax
 1389      020000
 1390 017f BE010000 		movl	$1, %esi
 1390      00
 1391 0184 4889DF   		movq	%rbx, %rdi
 1392 0187 FF10     		call	*(%rax)
 1393              	.LVL170:
 696:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pub.call_pass_startup = FALSE;
 1394              		.loc 1 696 0
 1395 0189 488B8308 		movq	520(%rbx), %rax
 1395      020000
 1396 0190 BE020000 		movl	$2, %esi
 1396      00
 1397 0195 4889DF   		movq	%rbx, %rdi
 1398 0198 FF10     		call	*(%rax)
 1399              	.LVL171:
 697:fltk-1.3.4-1/jpeg/jcmaster.c ****       break;
 1400              		.loc 1 697 0
 1401 019a C7451800 		movl	$0, 24(%rbp)
 1401      000000
 698:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 1402              		.loc 1 698 0
 1403 01a1 E9D1FEFF 		jmp	.L164
 1403      FF
 1404 01a6 662E0F1F 		.p2align 4,,10
 1404      84000000 
 1404      0000
 1405              		.p2align 3
 1406              	.L183:
 671:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->downsample->start_pass) (cinfo);
 1407              		.loc 1 671 0
 1408 01b0 488B8318 		movq	536(%rbx), %rax
 1408      020000
 1409 01b7 4889DF   		movq	%rbx, %rdi
 1410 01ba FF10     		call	*(%rax)
 1411              	.LVL172:
 672:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->prep->start_pass) (cinfo, JBUF_PASS_THRU);
 1412              		.loc 1 672 0
 1413 01bc 488B8320 		movq	544(%rbx), %rax
 1413      020000
 1414 01c3 4889DF   		movq	%rbx, %rdi
 1415 01c6 FF10     		call	*(%rax)
 1416              	.LVL173:
 673:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 1417              		.loc 1 673 0
 1418 01c8 488B8300 		movq	512(%rbx), %rax
 1418      020000
 1419 01cf 31F6     		xorl	%esi, %esi
 1420 01d1 4889DF   		movq	%rbx, %rdi
 1421 01d4 FF10     		call	*(%rax)
 1422              	.LVL174:
 1423 01d6 E90AFFFF 		jmp	.L161
 1423      FF
 1424 01db 0F1F4400 		.p2align 4,,10
 1424      00
 1425              		.p2align 3
 1426              	.L182:
 718:fltk-1.3.4-1/jpeg/jcmaster.c ****     (*cinfo->marker->write_scan_header) (cinfo);
 1427              		.loc 1 718 0
 1428 01e0 488B8310 		movq	528(%rbx), %rax
 1428      020000
 1429 01e7 4889DF   		movq	%rbx, %rdi
 1430 01ea FF5008   		call	*8(%rax)
 1431              	.LVL175:
 1432 01ed E971FEFF 		jmp	.L168
 1432      FF
 1433              		.p2align 4,,10
 1434 01f2 660F1F44 		.p2align 3
 1434      0000
 1435              	.L181:
 711:fltk-1.3.4-1/jpeg/jcmaster.c ****       per_scan_setup(cinfo);
 1436              		.loc 1 711 0
 1437 01f8 4889DF   		movq	%rbx, %rdi
 1438 01fb E8000000 		call	select_scan_parameters
 1438      00
 1439              	.LVL176:
 712:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 1440              		.loc 1 712 0
 1441 0200 4889DF   		movq	%rbx, %rdi
 1442 0203 E8000000 		call	per_scan_setup
 1442      00
 1443              	.LVL177:
 1444 0208 E92CFEFF 		jmp	.L167
 1444      FF
 1445              		.cfi_endproc
 1446              	.LFE68:
 1448              		.section	.text.unlikely.prepare_for_pass
 1449              	.LCOLDE5:
 1450              		.section	.text.prepare_for_pass
 1451              	.LHOTE5:
 1452              		.section	.text.unlikely.jpeg_calc_jpeg_dimensions,"ax",@progbits
 1453              	.LCOLDB6:
 1454              		.section	.text.jpeg_calc_jpeg_dimensions,"ax",@progbits
 1455              	.LHOTB6:
 1456              		.p2align 4,,15
 1457              		.globl	jpeg_calc_jpeg_dimensions
 1459              	jpeg_calc_jpeg_dimensions:
 1460              	.LFB61:
  55:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 1461              		.loc 1 55 0
 1462              		.cfi_startproc
 1463              	.LVL178:
 1464 0000 53       		pushq	%rbx
 1465              		.cfi_def_cfa_offset 16
 1466              		.cfi_offset 3, -16
  55:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 1467              		.loc 1 55 0
 1468 0001 4889FB   		movq	%rdi, %rbx
  64:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_IMAGE_TOO_BIG, (unsigned int) JPEG_MAX_DIMENSION);
 1469              		.loc 1 64 0
 1470 0004 8B7F30   		movl	48(%rdi), %edi
 1471              	.LVL179:
 1472 0007 89F8     		movl	%edi, %eax
 1473 0009 C1E818   		shrl	$24, %eax
 1474 000c 85C0     		testl	%eax, %eax
 1475 000e 0F852401 		jne	.L185
 1475      0000
  64:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_IMAGE_TOO_BIG, (unsigned int) JPEG_MAX_DIMENSION);
 1476              		.loc 1 64 0 is_stmt 0 discriminator 1
 1477 0014 807B3700 		cmpb	$0, 55(%rbx)
 1478 0018 0F851A01 		jne	.L185
 1478      0000
 1479              	.L186:
  68:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/1 scaling */
 1480              		.loc 1 68 0 is_stmt 1
 1481 001e 486383DC 		movslq	476(%rbx), %rax
 1481      010000
 1482 0025 8B534C   		movl	76(%rbx), %edx
 1483 0028 8B4B48   		movl	72(%rbx), %ecx
 1484 002b 0FAFD0   		imull	%eax, %edx
 1485 002e 39D1     		cmpl	%edx, %ecx
 1486 0030 0F832A01 		jnb	.L207
 1486      0000
  74:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/2 scaling */
 1487              		.loc 1 74 0
 1488 0036 8D3409   		leal	(%rcx,%rcx), %esi
 1489 0039 39F2     		cmpl	%esi, %edx
 1490 003b 0F864701 		jbe	.L208
 1490      0000
  82:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/3 scaling */
 1491              		.loc 1 82 0
 1492 0041 01CE     		addl	%ecx, %esi
 1493 0043 39F2     		cmpl	%esi, %edx
 1494 0045 0F868501 		jbe	.L209
 1494      0000
  90:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/4 scaling */
 1495              		.loc 1 90 0
 1496 004b 448D048D 		leal	0(,%rcx,4), %r8d
 1496      00000000 
 1497 0053 4439C2   		cmpl	%r8d, %edx
 1498 0056 0F86BC01 		jbe	.L210
 1498      0000
  98:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/5 scaling */
 1499              		.loc 1 98 0
 1500 005c 4101C8   		addl	%ecx, %r8d
 1501 005f 4439C2   		cmpl	%r8d, %edx
 1502 0062 0F86F801 		jbe	.L211
 1502      0000
 106:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/6 scaling */
 1503              		.loc 1 106 0
 1504 0068 01F6     		addl	%esi, %esi
 1505 006a 39F2     		cmpl	%esi, %edx
 1506 006c 0F863602 		jbe	.L212
 1506      0000
 114:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/7 scaling */
 1507              		.loc 1 114 0
 1508 0072 8D34CD00 		leal	0(,%rcx,8), %esi
 1508      000000
 1509 0079 4189F1   		movl	%esi, %r9d
 1510 007c 4129C9   		subl	%ecx, %r9d
 1511 007f 4439CA   		cmpl	%r9d, %edx
 1512 0082 0F86B002 		jbe	.L213
 1512      0000
 122:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/8 scaling */
 1513              		.loc 1 122 0
 1514 0088 39F2     		cmpl	%esi, %edx
 1515 008a 0F86F002 		jbe	.L214
 1515      0000
 130:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/9 scaling */
 1516              		.loc 1 130 0
 1517 0090 01CE     		addl	%ecx, %esi
 1518 0092 39F2     		cmpl	%esi, %edx
 1519 0094 0F862E03 		jbe	.L215
 1519      0000
 138:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/10 scaling */
 1520              		.loc 1 138 0
 1521 009a 4501C0   		addl	%r8d, %r8d
 1522 009d 4439C2   		cmpl	%r8d, %edx
 1523 00a0 0F866A03 		jbe	.L216
 1523      0000
 146:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/11 scaling */
 1524              		.loc 1 146 0
 1525 00a6 8D3489   		leal	(%rcx,%rcx,4), %esi
 1526 00a9 8D3471   		leal	(%rcx,%rsi,2), %esi
 1527 00ac 39F2     		cmpl	%esi, %edx
 1528 00ae 0F86A403 		jbe	.L217
 1528      0000
 154:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/12 scaling */
 1529              		.loc 1 154 0
 1530 00b4 448D0409 		leal	(%rcx,%rcx), %r8d
 1531 00b8 418D3408 		leal	(%r8,%rcx), %esi
 1532 00bc C1E602   		sall	$2, %esi
 1533 00bf 39F2     		cmpl	%esi, %edx
 1534 00c1 0F862902 		jbe	.L218
 1534      0000
 162:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/13 scaling */
 1535              		.loc 1 162 0
 1536 00c7 01CE     		addl	%ecx, %esi
 1537 00c9 39F2     		cmpl	%esi, %edx
 1538 00cb 0F860D04 		jbe	.L219
 1538      0000
 170:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/14 scaling */
 1539              		.loc 1 170 0
 1540 00d1 89CE     		movl	%ecx, %esi
 1541 00d3 C1E604   		sall	$4, %esi
 1542 00d6 4189F2   		movl	%esi, %r10d
 1543 00d9 4529C2   		subl	%r8d, %r10d
 1544 00dc 4439D2   		cmpl	%r10d, %edx
 1545 00df 0F863B04 		jbe	.L220
 1545      0000
 178:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/15 scaling */
 1546              		.loc 1 178 0
 1547 00e5 29CE     		subl	%ecx, %esi
 181:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1548              		.loc 1 181 0
 1549 00e7 480FAFF8 		imulq	%rax, %rdi
 178:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Provide block_size/15 scaling */
 1550              		.loc 1 178 0
 1551 00eb 39F2     		cmpl	%esi, %edx
 1552 00ed 0F86AD03 		jbe	.L221
 1552      0000
 189:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1553              		.loc 1 189 0
 1554 00f3 BE100000 		movl	$16, %esi
 1554      00
 1555 00f8 E8000000 		call	jdiv_round_up
 1555      00
 1556              	.LVL180:
 191:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 16;
 1557              		.loc 1 191 0
 1558 00fd 8B7B34   		movl	52(%rbx), %edi
 188:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 16L);
 1559              		.loc 1 188 0
 1560 0100 894350   		movl	%eax, 80(%rbx)
 191:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 16;
 1561              		.loc 1 191 0
 1562 0103 BE100000 		movl	$16, %esi
 1562      00
 1563 0108 486383DC 		movslq	476(%rbx), %rax
 1563      010000
 1564 010f 480FAFF8 		imulq	%rax, %rdi
 1565 0113 E8000000 		call	jdiv_round_up
 1565      00
 1566              	.LVL181:
 192:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 16;
 1567              		.loc 1 192 0
 1568 0118 C7836801 		movl	$16, 360(%rbx)
 1568      00001000 
 1568      0000
 190:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 16L);
 1569              		.loc 1 190 0
 1570 0122 894354   		movl	%eax, 84(%rbx)
 193:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 1571              		.loc 1 193 0
 1572 0125 C7836C01 		movl	$16, 364(%rbx)
 1572      00001000 
 1572      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1573              		.loc 1 205 0
 1574 012f 5B       		popq	%rbx
 1575              		.cfi_remember_state
 1576              		.cfi_def_cfa_offset 8
 1577              	.LVL182:
 1578 0130 C3       		ret
 1579              	.LVL183:
 1580              		.p2align 4,,10
 1581 0131 0F1F8000 		.p2align 3
 1581      000000
 1582              	.L185:
 1583              		.cfi_restore_state
  65:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1584              		.loc 1 65 0
 1585 0138 488B03   		movq	(%rbx), %rax
 1586 013b 4889DF   		movq	%rbx, %rdi
 1587 013e C740282A 		movl	$42, 40(%rax)
 1587      000000
 1588 0145 488B03   		movq	(%rbx), %rax
 1589 0148 C7402CDC 		movl	$65500, 44(%rax)
 1589      FF0000
 1590 014f 488B03   		movq	(%rbx), %rax
 1591 0152 FF10     		call	*(%rax)
 1592              	.LVL184:
 1593 0154 8B7B30   		movl	48(%rbx), %edi
 1594 0157 E9C2FEFF 		jmp	.L186
 1594      FF
 1595 015c 0F1F4000 		.p2align 4,,10
 1596              		.p2align 3
 1597              	.L207:
  70:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = cinfo->image_height * cinfo->block_size;
 1598              		.loc 1 70 0
 1599 0160 0FAFF8   		imull	%eax, %edi
  72:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 1;
 1600              		.loc 1 72 0
 1601 0163 C7836801 		movl	$1, 360(%rbx)
 1601      00000100 
 1601      0000
  73:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 2 >= cinfo->scale_denom * cinfo->block_size) {
 1602              		.loc 1 73 0
 1603 016d C7836C01 		movl	$1, 364(%rbx)
 1603      00000100 
 1603      0000
  71:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 1;
 1604              		.loc 1 71 0
 1605 0177 0FAF4334 		imull	52(%rbx), %eax
  70:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = cinfo->image_height * cinfo->block_size;
 1606              		.loc 1 70 0
 1607 017b 897B50   		movl	%edi, 80(%rbx)
  71:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 1;
 1608              		.loc 1 71 0
 1609 017e 894354   		movl	%eax, 84(%rbx)
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1610              		.loc 1 205 0
 1611 0181 5B       		popq	%rbx
 1612              		.cfi_remember_state
 1613              		.cfi_def_cfa_offset 8
 1614              	.LVL185:
 1615 0182 C3       		ret
 1616              	.LVL186:
 1617              		.p2align 4,,10
 1618 0183 0F1F4400 		.p2align 3
 1618      00
 1619              	.L208:
 1620              		.cfi_restore_state
  77:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1621              		.loc 1 77 0
 1622 0188 480FAFF8 		imulq	%rax, %rdi
 1623 018c BE020000 		movl	$2, %esi
 1623      00
 1624 0191 E8000000 		call	jdiv_round_up
 1624      00
 1625              	.LVL187:
  79:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 2;
 1626              		.loc 1 79 0
 1627 0196 8B7B34   		movl	52(%rbx), %edi
  76:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 2L);
 1628              		.loc 1 76 0
 1629 0199 894350   		movl	%eax, 80(%rbx)
  79:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 2;
 1630              		.loc 1 79 0
 1631 019c BE020000 		movl	$2, %esi
 1631      00
 1632 01a1 486383DC 		movslq	476(%rbx), %rax
 1632      010000
 1633 01a8 480FAFF8 		imulq	%rax, %rdi
 1634 01ac E8000000 		call	jdiv_round_up
 1634      00
 1635              	.LVL188:
  80:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 2;
 1636              		.loc 1 80 0
 1637 01b1 C7836801 		movl	$2, 360(%rbx)
 1637      00000200 
 1637      0000
  78:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 2L);
 1638              		.loc 1 78 0
 1639 01bb 894354   		movl	%eax, 84(%rbx)
  81:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 3 >= cinfo->scale_denom * cinfo->block_size) {
 1640              		.loc 1 81 0
 1641 01be C7836C01 		movl	$2, 364(%rbx)
 1641      00000200 
 1641      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1642              		.loc 1 205 0
 1643 01c8 5B       		popq	%rbx
 1644              		.cfi_remember_state
 1645              		.cfi_def_cfa_offset 8
 1646              	.LVL189:
 1647 01c9 C3       		ret
 1648              	.LVL190:
 1649 01ca 660F1F44 		.p2align 4,,10
 1649      0000
 1650              		.p2align 3
 1651              	.L209:
 1652              		.cfi_restore_state
  85:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1653              		.loc 1 85 0
 1654 01d0 480FAFF8 		imulq	%rax, %rdi
 1655 01d4 BE030000 		movl	$3, %esi
 1655      00
 1656 01d9 E8000000 		call	jdiv_round_up
 1656      00
 1657              	.LVL191:
  87:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 3;
 1658              		.loc 1 87 0
 1659 01de 8B7B34   		movl	52(%rbx), %edi
  84:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 3L);
 1660              		.loc 1 84 0
 1661 01e1 894350   		movl	%eax, 80(%rbx)
  87:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 3;
 1662              		.loc 1 87 0
 1663 01e4 BE030000 		movl	$3, %esi
 1663      00
 1664 01e9 486383DC 		movslq	476(%rbx), %rax
 1664      010000
 1665 01f0 480FAFF8 		imulq	%rax, %rdi
 1666 01f4 E8000000 		call	jdiv_round_up
 1666      00
 1667              	.LVL192:
  88:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 3;
 1668              		.loc 1 88 0
 1669 01f9 C7836801 		movl	$3, 360(%rbx)
 1669      00000300 
 1669      0000
  86:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 3L);
 1670              		.loc 1 86 0
 1671 0203 894354   		movl	%eax, 84(%rbx)
  89:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 4 >= cinfo->scale_denom * cinfo->block_size) {
 1672              		.loc 1 89 0
 1673 0206 C7836C01 		movl	$3, 364(%rbx)
 1673      00000300 
 1673      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1674              		.loc 1 205 0
 1675 0210 5B       		popq	%rbx
 1676              		.cfi_remember_state
 1677              		.cfi_def_cfa_offset 8
 1678              	.LVL193:
 1679 0211 C3       		ret
 1680              	.LVL194:
 1681              		.p2align 4,,10
 1682 0212 660F1F44 		.p2align 3
 1682      0000
 1683              	.L210:
 1684              		.cfi_restore_state
  93:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1685              		.loc 1 93 0
 1686 0218 480FAFF8 		imulq	%rax, %rdi
 1687 021c BE040000 		movl	$4, %esi
 1687      00
 1688 0221 E8000000 		call	jdiv_round_up
 1688      00
 1689              	.LVL195:
  95:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 4;
 1690              		.loc 1 95 0
 1691 0226 8B7B34   		movl	52(%rbx), %edi
  92:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 4L);
 1692              		.loc 1 92 0
 1693 0229 894350   		movl	%eax, 80(%rbx)
  95:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 4;
 1694              		.loc 1 95 0
 1695 022c BE040000 		movl	$4, %esi
 1695      00
 1696 0231 486383DC 		movslq	476(%rbx), %rax
 1696      010000
 1697 0238 480FAFF8 		imulq	%rax, %rdi
 1698 023c E8000000 		call	jdiv_round_up
 1698      00
 1699              	.LVL196:
  96:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 4;
 1700              		.loc 1 96 0
 1701 0241 C7836801 		movl	$4, 360(%rbx)
 1701      00000400 
 1701      0000
  94:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 4L);
 1702              		.loc 1 94 0
 1703 024b 894354   		movl	%eax, 84(%rbx)
  97:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 5 >= cinfo->scale_denom * cinfo->block_size) {
 1704              		.loc 1 97 0
 1705 024e C7836C01 		movl	$4, 364(%rbx)
 1705      00000400 
 1705      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1706              		.loc 1 205 0
 1707 0258 5B       		popq	%rbx
 1708              		.cfi_remember_state
 1709              		.cfi_def_cfa_offset 8
 1710              	.LVL197:
 1711 0259 C3       		ret
 1712              	.LVL198:
 1713 025a 660F1F44 		.p2align 4,,10
 1713      0000
 1714              		.p2align 3
 1715              	.L211:
 1716              		.cfi_restore_state
 101:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1717              		.loc 1 101 0
 1718 0260 480FAFF8 		imulq	%rax, %rdi
 1719 0264 BE050000 		movl	$5, %esi
 1719      00
 1720 0269 E8000000 		call	jdiv_round_up
 1720      00
 1721              	.LVL199:
 103:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 5;
 1722              		.loc 1 103 0
 1723 026e 8B7B34   		movl	52(%rbx), %edi
 100:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 5L);
 1724              		.loc 1 100 0
 1725 0271 894350   		movl	%eax, 80(%rbx)
 103:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 5;
 1726              		.loc 1 103 0
 1727 0274 BE050000 		movl	$5, %esi
 1727      00
 1728 0279 486383DC 		movslq	476(%rbx), %rax
 1728      010000
 1729 0280 480FAFF8 		imulq	%rax, %rdi
 1730 0284 E8000000 		call	jdiv_round_up
 1730      00
 1731              	.LVL200:
 104:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 5;
 1732              		.loc 1 104 0
 1733 0289 C7836801 		movl	$5, 360(%rbx)
 1733      00000500 
 1733      0000
 102:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 5L);
 1734              		.loc 1 102 0
 1735 0293 894354   		movl	%eax, 84(%rbx)
 105:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 6 >= cinfo->scale_denom * cinfo->block_size) {
 1736              		.loc 1 105 0
 1737 0296 C7836C01 		movl	$5, 364(%rbx)
 1737      00000500 
 1737      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1738              		.loc 1 205 0
 1739 02a0 5B       		popq	%rbx
 1740              		.cfi_remember_state
 1741              		.cfi_def_cfa_offset 8
 1742              	.LVL201:
 1743 02a1 C3       		ret
 1744              	.LVL202:
 1745              		.p2align 4,,10
 1746 02a2 660F1F44 		.p2align 3
 1746      0000
 1747              	.L212:
 1748              		.cfi_restore_state
 109:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1749              		.loc 1 109 0
 1750 02a8 480FAFF8 		imulq	%rax, %rdi
 1751 02ac BE060000 		movl	$6, %esi
 1751      00
 1752 02b1 E8000000 		call	jdiv_round_up
 1752      00
 1753              	.LVL203:
 111:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 6;
 1754              		.loc 1 111 0
 1755 02b6 8B7B34   		movl	52(%rbx), %edi
 108:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 6L);
 1756              		.loc 1 108 0
 1757 02b9 894350   		movl	%eax, 80(%rbx)
 111:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 6;
 1758              		.loc 1 111 0
 1759 02bc BE060000 		movl	$6, %esi
 1759      00
 1760 02c1 486383DC 		movslq	476(%rbx), %rax
 1760      010000
 1761 02c8 480FAFF8 		imulq	%rax, %rdi
 1762 02cc E8000000 		call	jdiv_round_up
 1762      00
 1763              	.LVL204:
 112:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 6;
 1764              		.loc 1 112 0
 1765 02d1 C7836801 		movl	$6, 360(%rbx)
 1765      00000600 
 1765      0000
 110:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 6L);
 1766              		.loc 1 110 0
 1767 02db 894354   		movl	%eax, 84(%rbx)
 113:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 7 >= cinfo->scale_denom * cinfo->block_size) {
 1768              		.loc 1 113 0
 1769 02de C7836C01 		movl	$6, 364(%rbx)
 1769      00000600 
 1769      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1770              		.loc 1 205 0
 1771 02e8 5B       		popq	%rbx
 1772              		.cfi_remember_state
 1773              		.cfi_def_cfa_offset 8
 1774              	.LVL205:
 1775 02e9 C3       		ret
 1776              	.LVL206:
 1777 02ea 660F1F44 		.p2align 4,,10
 1777      0000
 1778              		.p2align 3
 1779              	.L218:
 1780              		.cfi_restore_state
 157:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1781              		.loc 1 157 0
 1782 02f0 480FAFF8 		imulq	%rax, %rdi
 1783 02f4 BE0C0000 		movl	$12, %esi
 1783      00
 1784 02f9 E8000000 		call	jdiv_round_up
 1784      00
 1785              	.LVL207:
 159:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 12;
 1786              		.loc 1 159 0
 1787 02fe 8B7B34   		movl	52(%rbx), %edi
 156:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 12L);
 1788              		.loc 1 156 0
 1789 0301 894350   		movl	%eax, 80(%rbx)
 159:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 12;
 1790              		.loc 1 159 0
 1791 0304 BE0C0000 		movl	$12, %esi
 1791      00
 1792 0309 486383DC 		movslq	476(%rbx), %rax
 1792      010000
 1793 0310 480FAFF8 		imulq	%rax, %rdi
 1794 0314 E8000000 		call	jdiv_round_up
 1794      00
 1795              	.LVL208:
 160:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 12;
 1796              		.loc 1 160 0
 1797 0319 C7836801 		movl	$12, 360(%rbx)
 1797      00000C00 
 1797      0000
 158:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 12L);
 1798              		.loc 1 158 0
 1799 0323 894354   		movl	%eax, 84(%rbx)
 161:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 13 >= cinfo->scale_denom * cinfo->block_size) {
 1800              		.loc 1 161 0
 1801 0326 C7836C01 		movl	$12, 364(%rbx)
 1801      00000C00 
 1801      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1802              		.loc 1 205 0
 1803 0330 5B       		popq	%rbx
 1804              		.cfi_remember_state
 1805              		.cfi_def_cfa_offset 8
 1806              	.LVL209:
 1807 0331 C3       		ret
 1808              	.LVL210:
 1809              		.p2align 4,,10
 1810 0332 660F1F44 		.p2align 3
 1810      0000
 1811              	.L213:
 1812              		.cfi_restore_state
 117:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1813              		.loc 1 117 0
 1814 0338 480FAFF8 		imulq	%rax, %rdi
 1815 033c BE070000 		movl	$7, %esi
 1815      00
 1816 0341 E8000000 		call	jdiv_round_up
 1816      00
 1817              	.LVL211:
 119:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 7;
 1818              		.loc 1 119 0
 1819 0346 8B7B34   		movl	52(%rbx), %edi
 116:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 7L);
 1820              		.loc 1 116 0
 1821 0349 894350   		movl	%eax, 80(%rbx)
 119:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 7;
 1822              		.loc 1 119 0
 1823 034c BE070000 		movl	$7, %esi
 1823      00
 1824 0351 486383DC 		movslq	476(%rbx), %rax
 1824      010000
 1825 0358 480FAFF8 		imulq	%rax, %rdi
 1826 035c E8000000 		call	jdiv_round_up
 1826      00
 1827              	.LVL212:
 120:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 7;
 1828              		.loc 1 120 0
 1829 0361 C7836801 		movl	$7, 360(%rbx)
 1829      00000700 
 1829      0000
 118:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 7L);
 1830              		.loc 1 118 0
 1831 036b 894354   		movl	%eax, 84(%rbx)
 121:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 8 >= cinfo->scale_denom * cinfo->block_size) {
 1832              		.loc 1 121 0
 1833 036e C7836C01 		movl	$7, 364(%rbx)
 1833      00000700 
 1833      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1834              		.loc 1 205 0
 1835 0378 5B       		popq	%rbx
 1836              		.cfi_remember_state
 1837              		.cfi_def_cfa_offset 8
 1838              	.LVL213:
 1839 0379 C3       		ret
 1840              	.LVL214:
 1841 037a 660F1F44 		.p2align 4,,10
 1841      0000
 1842              		.p2align 3
 1843              	.L214:
 1844              		.cfi_restore_state
 125:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1845              		.loc 1 125 0
 1846 0380 480FAFF8 		imulq	%rax, %rdi
 1847 0384 BE080000 		movl	$8, %esi
 1847      00
 1848 0389 E8000000 		call	jdiv_round_up
 1848      00
 1849              	.LVL215:
 127:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 8;
 1850              		.loc 1 127 0
 1851 038e 8B7B34   		movl	52(%rbx), %edi
 124:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 8L);
 1852              		.loc 1 124 0
 1853 0391 894350   		movl	%eax, 80(%rbx)
 127:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 8;
 1854              		.loc 1 127 0
 1855 0394 BE080000 		movl	$8, %esi
 1855      00
 1856 0399 486383DC 		movslq	476(%rbx), %rax
 1856      010000
 1857 03a0 480FAFF8 		imulq	%rax, %rdi
 1858 03a4 E8000000 		call	jdiv_round_up
 1858      00
 1859              	.LVL216:
 128:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 8;
 1860              		.loc 1 128 0
 1861 03a9 C7836801 		movl	$8, 360(%rbx)
 1861      00000800 
 1861      0000
 126:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 8L);
 1862              		.loc 1 126 0
 1863 03b3 894354   		movl	%eax, 84(%rbx)
 129:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 9 >= cinfo->scale_denom * cinfo->block_size) {
 1864              		.loc 1 129 0
 1865 03b6 C7836C01 		movl	$8, 364(%rbx)
 1865      00000800 
 1865      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1866              		.loc 1 205 0
 1867 03c0 5B       		popq	%rbx
 1868              		.cfi_remember_state
 1869              		.cfi_def_cfa_offset 8
 1870              	.LVL217:
 1871 03c1 C3       		ret
 1872              	.LVL218:
 1873              		.p2align 4,,10
 1874 03c2 660F1F44 		.p2align 3
 1874      0000
 1875              	.L215:
 1876              		.cfi_restore_state
 133:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1877              		.loc 1 133 0
 1878 03c8 480FAFF8 		imulq	%rax, %rdi
 1879 03cc BE090000 		movl	$9, %esi
 1879      00
 1880 03d1 E8000000 		call	jdiv_round_up
 1880      00
 1881              	.LVL219:
 135:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 9;
 1882              		.loc 1 135 0
 1883 03d6 8B7B34   		movl	52(%rbx), %edi
 132:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 9L);
 1884              		.loc 1 132 0
 1885 03d9 894350   		movl	%eax, 80(%rbx)
 135:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 9;
 1886              		.loc 1 135 0
 1887 03dc BE090000 		movl	$9, %esi
 1887      00
 1888 03e1 486383DC 		movslq	476(%rbx), %rax
 1888      010000
 1889 03e8 480FAFF8 		imulq	%rax, %rdi
 1890 03ec E8000000 		call	jdiv_round_up
 1890      00
 1891              	.LVL220:
 136:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 9;
 1892              		.loc 1 136 0
 1893 03f1 C7836801 		movl	$9, 360(%rbx)
 1893      00000900 
 1893      0000
 134:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 9L);
 1894              		.loc 1 134 0
 1895 03fb 894354   		movl	%eax, 84(%rbx)
 137:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 10 >= cinfo->scale_denom * cinfo->block_size) {
 1896              		.loc 1 137 0
 1897 03fe C7836C01 		movl	$9, 364(%rbx)
 1897      00000900 
 1897      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1898              		.loc 1 205 0
 1899 0408 5B       		popq	%rbx
 1900              		.cfi_remember_state
 1901              		.cfi_def_cfa_offset 8
 1902              	.LVL221:
 1903 0409 C3       		ret
 1904              	.LVL222:
 1905 040a 660F1F44 		.p2align 4,,10
 1905      0000
 1906              		.p2align 3
 1907              	.L216:
 1908              		.cfi_restore_state
 141:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1909              		.loc 1 141 0
 1910 0410 480FAFF8 		imulq	%rax, %rdi
 1911 0414 BE0A0000 		movl	$10, %esi
 1911      00
 1912 0419 E8000000 		call	jdiv_round_up
 1912      00
 1913              	.LVL223:
 143:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 10;
 1914              		.loc 1 143 0
 1915 041e 8B7B34   		movl	52(%rbx), %edi
 140:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 10L);
 1916              		.loc 1 140 0
 1917 0421 894350   		movl	%eax, 80(%rbx)
 143:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 10;
 1918              		.loc 1 143 0
 1919 0424 BE0A0000 		movl	$10, %esi
 1919      00
 1920 0429 486383DC 		movslq	476(%rbx), %rax
 1920      010000
 1921 0430 480FAFF8 		imulq	%rax, %rdi
 1922 0434 E8000000 		call	jdiv_round_up
 1922      00
 1923              	.LVL224:
 144:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 10;
 1924              		.loc 1 144 0
 1925 0439 C7836801 		movl	$10, 360(%rbx)
 1925      00000A00 
 1925      0000
 142:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 10L);
 1926              		.loc 1 142 0
 1927 0443 894354   		movl	%eax, 84(%rbx)
 145:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 11 >= cinfo->scale_denom * cinfo->block_size) {
 1928              		.loc 1 145 0
 1929 0446 C7836C01 		movl	$10, 364(%rbx)
 1929      00000A00 
 1929      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1930              		.loc 1 205 0
 1931 0450 5B       		popq	%rbx
 1932              		.cfi_remember_state
 1933              		.cfi_def_cfa_offset 8
 1934              	.LVL225:
 1935 0451 C3       		ret
 1936              	.LVL226:
 1937              		.p2align 4,,10
 1938 0452 660F1F44 		.p2align 3
 1938      0000
 1939              	.L217:
 1940              		.cfi_restore_state
 149:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1941              		.loc 1 149 0
 1942 0458 480FAFF8 		imulq	%rax, %rdi
 1943 045c BE0B0000 		movl	$11, %esi
 1943      00
 1944 0461 E8000000 		call	jdiv_round_up
 1944      00
 1945              	.LVL227:
 151:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 11;
 1946              		.loc 1 151 0
 1947 0466 8B7B34   		movl	52(%rbx), %edi
 148:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 11L);
 1948              		.loc 1 148 0
 1949 0469 894350   		movl	%eax, 80(%rbx)
 151:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 11;
 1950              		.loc 1 151 0
 1951 046c BE0B0000 		movl	$11, %esi
 1951      00
 1952 0471 486383DC 		movslq	476(%rbx), %rax
 1952      010000
 1953 0478 480FAFF8 		imulq	%rax, %rdi
 1954 047c E8000000 		call	jdiv_round_up
 1954      00
 1955              	.LVL228:
 152:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 11;
 1956              		.loc 1 152 0
 1957 0481 C7836801 		movl	$11, 360(%rbx)
 1957      00000B00 
 1957      0000
 150:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 11L);
 1958              		.loc 1 150 0
 1959 048b 894354   		movl	%eax, 84(%rbx)
 153:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 12 >= cinfo->scale_denom * cinfo->block_size) {
 1960              		.loc 1 153 0
 1961 048e C7836C01 		movl	$11, 364(%rbx)
 1961      00000B00 
 1961      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1962              		.loc 1 205 0
 1963 0498 5B       		popq	%rbx
 1964              		.cfi_remember_state
 1965              		.cfi_def_cfa_offset 8
 1966              	.LVL229:
 1967 0499 C3       		ret
 1968              	.LVL230:
 1969 049a 660F1F44 		.p2align 4,,10
 1969      0000
 1970              		.p2align 3
 1971              	.L221:
 1972              		.cfi_restore_state
 181:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 1973              		.loc 1 181 0
 1974 04a0 BE0F0000 		movl	$15, %esi
 1974      00
 1975 04a5 E8000000 		call	jdiv_round_up
 1975      00
 1976              	.LVL231:
 183:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 15;
 1977              		.loc 1 183 0
 1978 04aa 8B7B34   		movl	52(%rbx), %edi
 180:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 15L);
 1979              		.loc 1 180 0
 1980 04ad 894350   		movl	%eax, 80(%rbx)
 183:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 15;
 1981              		.loc 1 183 0
 1982 04b0 BE0F0000 		movl	$15, %esi
 1982      00
 1983 04b5 486383DC 		movslq	476(%rbx), %rax
 1983      010000
 1984 04bc 480FAFF8 		imulq	%rax, %rdi
 1985 04c0 E8000000 		call	jdiv_round_up
 1985      00
 1986              	.LVL232:
 184:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 15;
 1987              		.loc 1 184 0
 1988 04c5 C7836801 		movl	$15, 360(%rbx)
 1988      00000F00 
 1988      0000
 182:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 15L);
 1989              		.loc 1 182 0
 1990 04cf 894354   		movl	%eax, 84(%rbx)
 185:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 1991              		.loc 1 185 0
 1992 04d2 C7836C01 		movl	$15, 364(%rbx)
 1992      00000F00 
 1992      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 1993              		.loc 1 205 0
 1994 04dc 5B       		popq	%rbx
 1995              		.cfi_remember_state
 1996              		.cfi_def_cfa_offset 8
 1997              	.LVL233:
 1998 04dd C3       		ret
 1999              	.LVL234:
 2000              	.L219:
 2001              		.cfi_restore_state
 165:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 2002              		.loc 1 165 0
 2003 04de 480FAFF8 		imulq	%rax, %rdi
 2004 04e2 BE0D0000 		movl	$13, %esi
 2004      00
 2005 04e7 E8000000 		call	jdiv_round_up
 2005      00
 2006              	.LVL235:
 167:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 13;
 2007              		.loc 1 167 0
 2008 04ec 8B7B34   		movl	52(%rbx), %edi
 164:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 13L);
 2009              		.loc 1 164 0
 2010 04ef 894350   		movl	%eax, 80(%rbx)
 167:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 13;
 2011              		.loc 1 167 0
 2012 04f2 BE0D0000 		movl	$13, %esi
 2012      00
 2013 04f7 486383DC 		movslq	476(%rbx), %rax
 2013      010000
 2014 04fe 480FAFF8 		imulq	%rax, %rdi
 2015 0502 E8000000 		call	jdiv_round_up
 2015      00
 2016              	.LVL236:
 168:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 13;
 2017              		.loc 1 168 0
 2018 0507 C7836801 		movl	$13, 360(%rbx)
 2018      00000D00 
 2018      0000
 166:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 13L);
 2019              		.loc 1 166 0
 2020 0511 894354   		movl	%eax, 84(%rbx)
 169:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 14 >= cinfo->scale_denom * cinfo->block_size) {
 2021              		.loc 1 169 0
 2022 0514 C7836C01 		movl	$13, 364(%rbx)
 2022      00000D00 
 2022      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2023              		.loc 1 205 0
 2024 051e 5B       		popq	%rbx
 2025              		.cfi_remember_state
 2026              		.cfi_def_cfa_offset 8
 2027              	.LVL237:
 2028 051f C3       		ret
 2029              	.LVL238:
 2030              	.L220:
 2031              		.cfi_restore_state
 173:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->jpeg_height = (JDIMENSION)
 2032              		.loc 1 173 0
 2033 0520 480FAFF8 		imulq	%rax, %rdi
 2034 0524 BE0E0000 		movl	$14, %esi
 2034      00
 2035 0529 E8000000 		call	jdiv_round_up
 2035      00
 2036              	.LVL239:
 175:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 14;
 2037              		.loc 1 175 0
 2038 052e 8B7B34   		movl	52(%rbx), %edi
 172:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_width * cinfo->block_size, 14L);
 2039              		.loc 1 172 0
 2040 0531 894350   		movl	%eax, 80(%rbx)
 175:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_h_scaled_size = 14;
 2041              		.loc 1 175 0
 2042 0534 BE0E0000 		movl	$14, %esi
 2042      00
 2043 0539 486383DC 		movslq	476(%rbx), %rax
 2043      010000
 2044 0540 480FAFF8 		imulq	%rax, %rdi
 2045 0544 E8000000 		call	jdiv_round_up
 2045      00
 2046              	.LVL240:
 176:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->min_DCT_v_scaled_size = 14;
 2047              		.loc 1 176 0
 2048 0549 C7836801 		movl	$14, 360(%rbx)
 2048      00000E00 
 2048      0000
 174:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->image_height * cinfo->block_size, 14L);
 2049              		.loc 1 174 0
 2050 0553 894354   		movl	%eax, 84(%rbx)
 177:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else if (cinfo->scale_num * 15 >= cinfo->scale_denom * cinfo->block_size) {
 2051              		.loc 1 177 0
 2052 0556 C7836C01 		movl	$14, 364(%rbx)
 2052      00000E00 
 2052      0000
 205:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2053              		.loc 1 205 0
 2054 0560 5B       		popq	%rbx
 2055              		.cfi_def_cfa_offset 8
 2056              	.LVL241:
 2057 0561 C3       		ret
 2058              		.cfi_endproc
 2059              	.LFE61:
 2061              		.section	.text.unlikely.jpeg_calc_jpeg_dimensions
 2062              	.LCOLDE6:
 2063              		.section	.text.jpeg_calc_jpeg_dimensions
 2064              	.LHOTE6:
 2065              		.section	.text.unlikely.jinit_c_master_control,"ax",@progbits
 2066              	.LCOLDB7:
 2067              		.section	.text.jinit_c_master_control,"ax",@progbits
 2068              	.LHOTB7:
 2069              		.p2align 4,,15
 2070              		.globl	jinit_c_master_control
 2072              	jinit_c_master_control:
 2073              	.LFB71:
 794:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 795:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 796:fltk-1.3.4-1/jpeg/jcmaster.c **** /*
 797:fltk-1.3.4-1/jpeg/jcmaster.c ****  * Initialize master compression control.
 798:fltk-1.3.4-1/jpeg/jcmaster.c ****  */
 799:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 800:fltk-1.3.4-1/jpeg/jcmaster.c **** GLOBAL(void)
 801:fltk-1.3.4-1/jpeg/jcmaster.c **** jinit_c_master_control (j_compress_ptr cinfo, boolean transcode_only)
 802:fltk-1.3.4-1/jpeg/jcmaster.c **** {
 2074              		.loc 1 802 0
 2075              		.cfi_startproc
 2076              	.LVL242:
 2077 0000 4156     		pushq	%r14
 2078              		.cfi_def_cfa_offset 16
 2079              		.cfi_offset 14, -16
 2080 0002 4155     		pushq	%r13
 2081              		.cfi_def_cfa_offset 24
 2082              		.cfi_offset 13, -24
 803:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master;
 804:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 805:fltk-1.3.4-1/jpeg/jcmaster.c ****   master = (my_master_ptr)
 2083              		.loc 1 805 0
 2084 0004 BA300000 		movl	$48, %edx
 2084      00
 802:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master;
 2085              		.loc 1 802 0
 2086 0009 4154     		pushq	%r12
 2087              		.cfi_def_cfa_offset 32
 2088              		.cfi_offset 12, -32
 2089 000b 55       		pushq	%rbp
 2090              		.cfi_def_cfa_offset 40
 2091              		.cfi_offset 6, -40
 2092 000c 89F5     		movl	%esi, %ebp
 2093 000e 53       		pushq	%rbx
 2094              		.cfi_def_cfa_offset 48
 2095              		.cfi_offset 3, -48
 806:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2096              		.loc 1 806 0
 2097 000f 488B4708 		movq	8(%rdi), %rax
 802:fltk-1.3.4-1/jpeg/jcmaster.c ****   my_master_ptr master;
 2098              		.loc 1 802 0
 2099 0013 4989FC   		movq	%rdi, %r12
 805:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2100              		.loc 1 805 0
 2101 0016 BE010000 		movl	$1, %esi
 2101      00
 2102              	.LVL243:
 2103 001b FF10     		call	*(%rax)
 2104              	.LVL244:
 2105              	.LBB13:
 2106              	.LBB14:
 226:fltk-1.3.4-1/jpeg/jcmaster.c ****     jpeg_calc_trans_dimensions(cinfo);
 2107              		.loc 1 226 0
 2108 001d 85ED     		testl	%ebp, %ebp
 2109              	.LBE14:
 2110              	.LBE13:
 807:fltk-1.3.4-1/jpeg/jcmaster.c **** 				  SIZEOF(my_comp_master));
 808:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->master = &master->pub;
 2111              		.loc 1 808 0
 2112 001f 49898424 		movq	%rax, 496(%r12)
 2112      F0010000 
 805:fltk-1.3.4-1/jpeg/jcmaster.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2113              		.loc 1 805 0
 2114 0027 4889C3   		movq	%rax, %rbx
 2115              	.LVL245:
 809:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pub.prepare_for_pass = prepare_for_pass;
 2116              		.loc 1 809 0
 2117 002a 48C70000 		movq	$prepare_for_pass, (%rax)
 2117      000000
 810:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pub.pass_startup = pass_startup;
 2118              		.loc 1 810 0
 2119 0031 48C74008 		movq	$pass_startup, 8(%rax)
 2119      00000000 
 811:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pub.finish_pass = finish_pass_master;
 2120              		.loc 1 811 0
 2121 0039 48C74010 		movq	$finish_pass_master, 16(%rax)
 2121      00000000 
 812:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pub.is_last_pass = FALSE;
 2122              		.loc 1 812 0
 2123 0041 C7401C00 		movl	$0, 28(%rax)
 2123      000000
 2124              	.LVL246:
 2125              	.LBB24:
 2126              	.LBB19:
 226:fltk-1.3.4-1/jpeg/jcmaster.c ****     jpeg_calc_trans_dimensions(cinfo);
 2127              		.loc 1 226 0
 2128 0048 746E     		je	.L223
 2129              	.LVL247:
 2130              	.LBB15:
 2131              	.LBB16:
 211:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE,
 2132              		.loc 1 211 0
 2133 004a 418B8424 		movl	364(%r12), %eax
 2133      6C010000 
 2134              	.LVL248:
 2135 0052 41398424 		cmpl	%eax, 360(%r12)
 2135      68010000 
 2136 005a 743A     		je	.L224
 212:fltk-1.3.4-1/jpeg/jcmaster.c **** 	     cinfo->min_DCT_h_scaled_size, cinfo->min_DCT_v_scaled_size);
 2137              		.loc 1 212 0
 2138 005c 498B0424 		movq	(%r12), %rax
 2139 0060 4C89E7   		movq	%r12, %rdi
 2140 0063 C7402807 		movl	$7, 40(%rax)
 2140      000000
 2141 006a 498B0424 		movq	(%r12), %rax
 2142 006e 418B9424 		movl	360(%r12), %edx
 2142      68010000 
 2143 0076 89502C   		movl	%edx, 44(%rax)
 2144 0079 498B0424 		movq	(%r12), %rax
 2145 007d 418B9424 		movl	364(%r12), %edx
 2145      6C010000 
 2146 0085 895030   		movl	%edx, 48(%rax)
 2147 0088 498B0424 		movq	(%r12), %rax
 2148 008c FF10     		call	*(%rax)
 2149              	.LVL249:
 2150 008e 418B8424 		movl	360(%r12), %eax
 2150      68010000 
 2151              	.L224:
 2152              	.LBE16:
 2153              	.LBE15:
 232:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE, cinfo->block_size, cinfo->block_size);
 2154              		.loc 1 232 0
 2155 0096 8D50FF   		leal	-1(%rax), %edx
 2156              	.LBB18:
 2157              	.LBB17:
 215:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 2158              		.loc 1 215 0
 2159 0099 41898424 		movl	%eax, 476(%r12)
 2159      DC010000 
 2160              	.LBE17:
 2161              	.LBE18:
 232:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE, cinfo->block_size, cinfo->block_size);
 2162              		.loc 1 232 0
 2163 00a1 83FA0F   		cmpl	$15, %edx
 2164 00a4 772A     		ja	.L284
 2165              	.LVL250:
 2166              	.L226:
 236:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 2: cinfo->natural_order = jpeg_natural_order2; break;
 2167              		.loc 1 236 0
 2168 00a6 83F807   		cmpl	$7, %eax
 2169 00a9 0F872504 		ja	.L227
 2169      0000
 2170 00af 89C2     		movl	%eax, %edx
 2171 00b1 FF24D500 		jmp	*.L229(,%rdx,8)
 2171      000000
 2172              		.section	.rodata.jinit_c_master_control,"a",@progbits
 2173              		.align 8
 2174              		.align 4
 2175              	.L229:
 2176 0000 00000000 		.quad	.L227
 2176      00000000 
 2177 0008 00000000 		.quad	.L227
 2177      00000000 
 2178 0010 00000000 		.quad	.L228
 2178      00000000 
 2179 0018 00000000 		.quad	.L230
 2179      00000000 
 2180 0020 00000000 		.quad	.L231
 2180      00000000 
 2181 0028 00000000 		.quad	.L232
 2181      00000000 
 2182 0030 00000000 		.quad	.L233
 2182      00000000 
 2183 0038 00000000 		.quad	.L234
 2183      00000000 
 2184              		.section	.text.jinit_c_master_control
 2185              	.LVL251:
 2186              	.L223:
 229:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2187              		.loc 1 229 0
 2188 00b8 4C89E7   		movq	%r12, %rdi
 2189 00bb E8000000 		call	jpeg_calc_jpeg_dimensions
 2189      00
 2190              	.LVL252:
 2191 00c0 418B8424 		movl	476(%r12), %eax
 2191      DC010000 
 232:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_BAD_DCTSIZE, cinfo->block_size, cinfo->block_size);
 2192              		.loc 1 232 0
 2193 00c8 8D50FF   		leal	-1(%rax), %edx
 2194 00cb 83FA0F   		cmpl	$15, %edx
 2195 00ce 76D6     		jbe	.L226
 2196              	.L284:
 233:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2197              		.loc 1 233 0
 2198 00d0 498B0424 		movq	(%r12), %rax
 2199 00d4 4C89E7   		movq	%r12, %rdi
 2200 00d7 C7402807 		movl	$7, 40(%rax)
 2200      000000
 2201 00de 498B0424 		movq	(%r12), %rax
 2202 00e2 418B9424 		movl	476(%r12), %edx
 2202      DC010000 
 2203 00ea 89502C   		movl	%edx, 44(%rax)
 2204 00ed 498B0424 		movq	(%r12), %rax
 2205 00f1 418B9424 		movl	476(%r12), %edx
 2205      DC010000 
 2206 00f9 895030   		movl	%edx, 48(%rax)
 2207 00fc 498B0424 		movq	(%r12), %rax
 2208 0100 FF10     		call	*(%rax)
 2209              	.LVL253:
 2210 0102 418B8424 		movl	476(%r12), %eax
 2210      DC010000 
 2211 010a EB9A     		jmp	.L226
 2212              	.L234:
 242:fltk-1.3.4-1/jpeg/jcmaster.c ****   default: cinfo->natural_order = jpeg_natural_order; break;
 2213              		.loc 1 242 0
 2214 010c 49C78424 		movq	$jpeg_natural_order7, 480(%r12)
 2214      E0010000 
 2214      00000000 
 2215              	.L235:
 248:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2216              		.loc 1 248 0
 2217 0118 0FAFC0   		imull	%eax, %eax
 2218 011b 83E801   		subl	$1, %eax
 2219              	.L269:
 247:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->block_size * cinfo->block_size - 1 : DCTSIZE2-1;
 2220              		.loc 1 247 0
 2221 011e 41898424 		movl	%eax, 488(%r12)
 2221      E8010000 
 251:fltk-1.3.4-1/jpeg/jcmaster.c ****       cinfo->num_components <= 0)
 2222              		.loc 1 251 0
 2223 0126 418B4424 		movl	84(%r12), %eax
 2223      54
 2224 012b 85C0     		testl	%eax, %eax
 2225 012d 0F84DA03 		je	.L236
 2225      0000
 2226 0133 458B4C24 		movl	80(%r12), %r9d
 2226      50
 2227 0138 4585C9   		testl	%r9d, %r9d
 2228 013b 0F84CC03 		je	.L236
 2228      0000
 2229 0141 458B4424 		movl	92(%r12), %r8d
 2229      5C
 2230 0146 4585C0   		testl	%r8d, %r8d
 2231 0149 0F8EBE03 		jle	.L236
 2231      0000
 2232              	.L237:
 256:fltk-1.3.4-1/jpeg/jcmaster.c ****       (long) cinfo->jpeg_width > (long) JPEG_MAX_DIMENSION)
 2233              		.loc 1 256 0
 2234 014f 3DDCFF00 		cmpl	$65500, %eax
 2234      00
 2235 0154 770B     		ja	.L238
 2236 0156 41817C24 		cmpl	$65500, 80(%r12)
 2236      50DCFF00 
 2236      00
 2237 015f 761F     		jbe	.L239
 2238              	.L238:
 258:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2239              		.loc 1 258 0
 2240 0161 498B0424 		movq	(%r12), %rax
 2241 0165 4C89E7   		movq	%r12, %rdi
 2242 0168 C740282A 		movl	$42, 40(%rax)
 2242      000000
 2243 016f 498B0424 		movq	(%r12), %rax
 2244 0173 C7402CDC 		movl	$65500, 44(%rax)
 2244      FF0000
 2245 017a 498B0424 		movq	(%r12), %rax
 2246 017e FF10     		call	*(%rax)
 2247              	.LVL254:
 2248              	.L239:
 261:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 2249              		.loc 1 261 0
 2250 0180 418B4424 		movl	88(%r12), %eax
 2250      58
 2251 0185 83E808   		subl	$8, %eax
 2252 0188 83F804   		cmpl	$4, %eax
 2253 018b 0F875604 		ja	.L285
 2253      0000
 2254              	.L240:
 265:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 2255              		.loc 1 265 0
 2256 0191 418B4C24 		movl	92(%r12), %ecx
 2256      5C
 2257 0196 83F90A   		cmpl	$10, %ecx
 2258 0199 0F8F1304 		jg	.L286
 2258      0000
 2259              	.L241:
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2260              		.loc 1 272 0
 2261 019f 85C9     		testl	%ecx, %ecx
 270:fltk-1.3.4-1/jpeg/jcmaster.c ****   cinfo->max_v_samp_factor = 1;
 2262              		.loc 1 270 0
 2263 01a1 41C78424 		movl	$1, 352(%r12)
 2263      60010000 
 2263      01000000 
 271:fltk-1.3.4-1/jpeg/jcmaster.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 2264              		.loc 1 271 0
 2265 01ad 41C78424 		movl	$1, 356(%r12)
 2265      64010000 
 2265      01000000 
 2266              	.LVL255:
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2267              		.loc 1 272 0
 2268 01b9 4D8B6C24 		movq	104(%r12), %r13
 2268      68
 2269              	.LVL256:
 2270 01be 0F8EDF04 		jle	.L274
 2270      0000
 2271 01c4 4531F6   		xorl	%r14d, %r14d
 2272              	.LVL257:
 2273 01c7 660F1F84 		.p2align 4,,10
 2273      00000000 
 2273      00
 2274              		.p2align 3
 2275              	.L245:
 274:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 2276              		.loc 1 274 0
 2277 01d0 418B4508 		movl	8(%r13), %eax
 2278 01d4 8D50FF   		leal	-1(%rax), %edx
 2279 01d7 83FA03   		cmpl	$3, %edx
 2280 01da 770C     		ja	.L243
 275:fltk-1.3.4-1/jpeg/jcmaster.c ****       ERREXIT(cinfo, JERR_BAD_SAMPLING);
 2281              		.loc 1 275 0
 2282 01dc 418B550C 		movl	12(%r13), %edx
 2283 01e0 83EA01   		subl	$1, %edx
 2284 01e3 83FA03   		cmpl	$3, %edx
 2285 01e6 761D     		jbe	.L244
 2286              	.L243:
 276:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 2287              		.loc 1 276 0
 2288 01e8 498B0424 		movq	(%r12), %rax
 2289 01ec 4C89E7   		movq	%r12, %rdi
 2290 01ef C7402813 		movl	$19, 40(%rax)
 2290      000000
 2291 01f6 498B0424 		movq	(%r12), %rax
 2292 01fa FF10     		call	*(%rax)
 2293              	.LVL258:
 2294 01fc 418B4508 		movl	8(%r13), %eax
 2295 0200 418B4C24 		movl	92(%r12), %ecx
 2295      5C
 2296              	.L244:
 277:fltk-1.3.4-1/jpeg/jcmaster.c **** 				   compptr->h_samp_factor);
 2297              		.loc 1 277 0
 2298 0205 41398424 		cmpl	%eax, 352(%r12)
 2298      60010000 
 2299 020d 410F4D84 		cmovge	352(%r12), %eax
 2299      24600100 
 2299      00
 2300 0216 41898424 		movl	%eax, 352(%r12)
 2300      60010000 
 279:fltk-1.3.4-1/jpeg/jcmaster.c **** 				   compptr->v_samp_factor);
 2301              		.loc 1 279 0
 2302 021e 418B8424 		movl	356(%r12), %eax
 2302      64010000 
 2303 0226 4139450C 		cmpl	%eax, 12(%r13)
 2304 022a 410F4D45 		cmovge	12(%r13), %eax
 2304      0C
 273:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 2305              		.loc 1 273 0
 2306 022f 4183C601 		addl	$1, %r14d
 2307              	.LVL259:
 2308 0233 4983C560 		addq	$96, %r13
 2309              	.LVL260:
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2310              		.loc 1 272 0
 2311 0237 4139CE   		cmpl	%ecx, %r14d
 279:fltk-1.3.4-1/jpeg/jcmaster.c **** 				   compptr->v_samp_factor);
 2312              		.loc 1 279 0
 2313 023a 41898424 		movl	%eax, 356(%r12)
 2313      64010000 
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2314              		.loc 1 272 0
 2315 0242 7C8C     		jl	.L245
 2316              	.LVL261:
 284:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2317              		.loc 1 284 0
 2318 0244 85C9     		testl	%ecx, %ecx
 2319 0246 4D8B6C24 		movq	104(%r12), %r13
 2319      68
 2320              	.LVL262:
 2321 024b 0F8E8D01 		jle	.L242
 2321      0000
 2322 0251 4531F6   		xorl	%r14d, %r14d
 2323              	.LVL263:
 2324              		.p2align 4,,10
 2325 0254 0F1F4000 		.p2align 3
 2326              	.L254:
 287:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* In selecting the actual DCT scaling for each component, we try to
 2327              		.loc 1 287 0
 2328 0258 45897504 		movl	%r14d, 4(%r13)
 2329              	.LVL264:
 2330 025c 4183BC24 		cmpl	$1, 304(%r12)
 2330      30010000 
 2330      01
 293:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 2331              		.loc 1 293 0
 2332 0265 BE010000 		movl	$1, %esi
 2332      00
 2333 026a 458B9424 		movl	360(%r12), %r10d
 2333      68010000 
 2334 0272 4D634D08 		movslq	8(%r13), %r9
 2335 0276 19FF     		sbbl	%edi, %edi
 2336 0278 83E7FC   		andl	$-4, %edi
 2337 027b 83C708   		addl	$8, %edi
 2338 027e EB19     		jmp	.L246
 2339              	.LVL265:
 2340              		.p2align 4,,10
 2341              		.p2align 3
 2342              	.L287:
 296:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->max_h_samp_factor % (compptr->h_samp_factor * ssize * 2)) == 0) {
 2343              		.loc 1 296 0
 2344 0280 89F1     		movl	%esi, %ecx
 2345 0282 418B8424 		movl	352(%r12), %eax
 2345      60010000 
 2346 028a 410FAFC9 		imull	%r9d, %ecx
 2347 028e 99       		cltd
 2348 028f 01C9     		addl	%ecx, %ecx
 2349 0291 F7F9     		idivl	%ecx
 2350 0293 85D2     		testl	%edx, %edx
 2351 0295 750E     		jne	.L247
 298:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 2352              		.loc 1 298 0
 2353 0297 01F6     		addl	%esi, %esi
 2354              	.LVL266:
 2355              	.L246:
 295:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->do_fancy_downsampling ? DCTSIZE : DCTSIZE / 2) &&
 2356              		.loc 1 295 0
 2357 0299 4189F0   		movl	%esi, %r8d
 2358 029c 450FAFC2 		imull	%r10d, %r8d
 2359 02a0 4139F8   		cmpl	%edi, %r8d
 2360 02a3 7EDB     		jle	.L287
 2361              	.L247:
 301:fltk-1.3.4-1/jpeg/jcmaster.c ****     ssize = 1;
 2362              		.loc 1 301 0
 2363 02a5 45894524 		movl	%r8d, 36(%r13)
 2364              	.LVL267:
 2365 02a9 4183BC24 		cmpl	$1, 304(%r12)
 2365      30010000 
 2365      01
 302:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef DCT_SCALING_SUPPORTED
 2366              		.loc 1 302 0
 2367 02b2 BE010000 		movl	$1, %esi
 2367      00
 2368 02b7 458B9C24 		movl	364(%r12), %r11d
 2368      6C010000 
 2369 02bf 4519D2   		sbbl	%r10d, %r10d
 2370 02c2 4183E2FC 		andl	$-4, %r10d
 2371 02c6 4183C208 		addl	$8, %r10d
 2372 02ca EB1E     		jmp	.L249
 2373              	.LVL268:
 2374 02cc 0F1F4000 		.p2align 4,,10
 2375              		.p2align 3
 2376              	.L288:
 305:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->max_v_samp_factor % (compptr->v_samp_factor * ssize * 2)) == 0) {
 2377              		.loc 1 305 0
 2378 02d0 418B4D0C 		movl	12(%r13), %ecx
 2379 02d4 418B8424 		movl	356(%r12), %eax
 2379      64010000 
 2380 02dc 0FAFCE   		imull	%esi, %ecx
 2381 02df 99       		cltd
 2382 02e0 01C9     		addl	%ecx, %ecx
 2383 02e2 F7F9     		idivl	%ecx
 2384 02e4 85D2     		testl	%edx, %edx
 2385 02e6 750D     		jne	.L250
 307:fltk-1.3.4-1/jpeg/jcmaster.c ****     }
 2386              		.loc 1 307 0
 2387 02e8 01F6     		addl	%esi, %esi
 2388              	.LVL269:
 2389              	.L249:
 304:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->do_fancy_downsampling ? DCTSIZE : DCTSIZE / 2) &&
 2390              		.loc 1 304 0
 2391 02ea 89F7     		movl	%esi, %edi
 2392 02ec 410FAFFB 		imull	%r11d, %edi
 2393 02f0 4439D7   		cmpl	%r10d, %edi
 2394 02f3 7EDB     		jle	.L288
 2395              	.L250:
 313:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->DCT_h_scaled_size = compptr->DCT_v_scaled_size * 2;
 2396              		.loc 1 313 0
 2397 02f5 8D043F   		leal	(%rdi,%rdi), %eax
 310:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2398              		.loc 1 310 0
 2399 02f8 41897D28 		movl	%edi, 40(%r13)
 313:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->DCT_h_scaled_size = compptr->DCT_v_scaled_size * 2;
 2400              		.loc 1 313 0
 2401 02fc 4139C0   		cmpl	%eax, %r8d
 2402 02ff 0F8EF301 		jle	.L252
 2402      0000
 314:fltk-1.3.4-1/jpeg/jcmaster.c ****     else if (compptr->DCT_v_scaled_size > compptr->DCT_h_scaled_size * 2)
 2403              		.loc 1 314 0
 2404 0305 41894524 		movl	%eax, 36(%r13)
 2405              	.L253:
 320:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 2406              		.loc 1 320 0
 2407 0309 418B7C24 		movl	80(%r12), %edi
 2407      50
 2408 030e 418BB424 		movl	352(%r12), %esi
 2408      60010000 
 2409              	.LVL270:
 285:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Fill in the correct component_index value; don't rely on application */
 2410              		.loc 1 285 0
 2411 0316 4183C601 		addl	$1, %r14d
 2412              	.LVL271:
 320:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 2413              		.loc 1 320 0
 2414 031a 410FAFB4 		imull	476(%r12), %esi
 2414      24DC0100 
 2414      00
 285:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* Fill in the correct component_index value; don't rely on application */
 2415              		.loc 1 285 0
 2416 0323 4983C560 		addq	$96, %r13
 2417              	.LVL272:
 320:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 2418              		.loc 1 320 0
 2419 0327 490FAFF9 		imulq	%r9, %rdi
 2420 032b 4863F6   		movslq	%esi, %rsi
 2421 032e E8000000 		call	jdiv_round_up
 2421      00
 2422              	.LVL273:
 319:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width * (long) compptr->h_samp_factor,
 2423              		.loc 1 319 0
 2424 0333 418945BC 		movl	%eax, -68(%r13)
 323:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 2425              		.loc 1 323 0
 2426 0337 496345AC 		movslq	-84(%r13), %rax
 2427 033b 418B7C24 		movl	84(%r12), %edi
 2427      54
 2428 0340 418BB424 		movl	356(%r12), %esi
 2428      64010000 
 2429 0348 410FAFB4 		imull	476(%r12), %esi
 2429      24DC0100 
 2429      00
 2430 0351 480FAFF8 		imulq	%rax, %rdi
 2431 0355 4863F6   		movslq	%esi, %rsi
 2432 0358 E8000000 		call	jdiv_round_up
 2432      00
 2433              	.LVL274:
 322:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height * (long) compptr->v_samp_factor,
 2434              		.loc 1 322 0
 2435 035d 418945C0 		movl	%eax, -64(%r13)
 327:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (compptr->h_samp_factor * compptr->DCT_h_scaled_size),
 2436              		.loc 1 327 0
 2437 0361 418B45A8 		movl	-88(%r13), %eax
 2438 0365 410FAF45 		imull	-60(%r13), %eax
 2438      C4
 2439 036a 418B7C24 		movl	80(%r12), %edi
 2439      50
 2440 036f 418BB424 		movl	352(%r12), %esi
 2440      60010000 
 2441 0377 410FAFB4 		imull	476(%r12), %esi
 2441      24DC0100 
 2441      00
 2442 0380 4898     		cltq
 2443 0382 480FAFF8 		imulq	%rax, %rdi
 2444 0386 4863F6   		movslq	%esi, %rsi
 2445 0389 E8000000 		call	jdiv_round_up
 2445      00
 2446              	.LVL275:
 326:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_width *
 2447              		.loc 1 326 0
 2448 038e 418945CC 		movl	%eax, -52(%r13)
 331:fltk-1.3.4-1/jpeg/jcmaster.c **** 		    (long) (compptr->v_samp_factor * compptr->DCT_v_scaled_size),
 2449              		.loc 1 331 0
 2450 0392 418B45AC 		movl	-84(%r13), %eax
 2451 0396 410FAF45 		imull	-56(%r13), %eax
 2451      C8
 2452 039b 418B7C24 		movl	84(%r12), %edi
 2452      54
 2453 03a0 418BB424 		movl	356(%r12), %esi
 2453      64010000 
 2454 03a8 410FAFB4 		imull	476(%r12), %esi
 2454      24DC0100 
 2454      00
 2455 03b1 4898     		cltq
 2456 03b3 480FAFF8 		imulq	%rax, %rdi
 2457 03b7 4863F6   		movslq	%esi, %rsi
 2458 03ba E8000000 		call	jdiv_round_up
 2458      00
 2459              	.LVL276:
 337:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 2460              		.loc 1 337 0
 2461 03bf 41C745D4 		movl	$0, -44(%r13)
 2461      00000000 
 330:fltk-1.3.4-1/jpeg/jcmaster.c ****       jdiv_round_up((long) cinfo->jpeg_height *
 2462              		.loc 1 330 0
 2463 03c7 418945D0 		movl	%eax, -48(%r13)
 2464              	.LVL277:
 284:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2465              		.loc 1 284 0
 2466 03cb 453B7424 		cmpl	92(%r12), %r14d
 2466      5C
 2467 03d0 0F8C82FE 		jl	.L254
 2467      FFFF
 2468 03d6 418B8424 		movl	356(%r12), %eax
 2468      64010000 
 2469              	.LVL278:
 2470              	.L242:
 344:fltk-1.3.4-1/jpeg/jcmaster.c **** 		  (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 2471              		.loc 1 344 0
 2472 03de 410FAF84 		imull	476(%r12), %eax
 2472      24DC0100 
 2472      00
 2473 03e7 418B7C24 		movl	84(%r12), %edi
 2473      54
 2474 03ec 4863F0   		movslq	%eax, %rsi
 2475 03ef E8000000 		call	jdiv_round_up
 2475      00
 2476              	.LVL279:
 2477              	.LBE19:
 2478              	.LBE24:
 813:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 814:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Validate parameters, determine derived values */
 815:fltk-1.3.4-1/jpeg/jcmaster.c ****   initial_setup(cinfo, transcode_only);
 816:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 817:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->scan_info != NULL) {
 2479              		.loc 1 817 0
 2480 03f4 4983BC24 		cmpq	$0, 280(%r12)
 2480      18010000 
 2480      00
 2481              	.LBB25:
 2482              	.LBB20:
 343:fltk-1.3.4-1/jpeg/jcmaster.c ****     jdiv_round_up((long) cinfo->jpeg_height,
 2483              		.loc 1 343 0
 2484 03fd 41898424 		movl	%eax, 368(%r12)
 2484      70010000 
 2485              	.LVL280:
 2486              	.LBE20:
 2487              	.LBE25:
 2488              		.loc 1 817 0
 2489 0405 0F848A01 		je	.L255
 2489      0000
 818:fltk-1.3.4-1/jpeg/jcmaster.c **** #ifdef C_MULTISCAN_FILES_SUPPORTED
 819:fltk-1.3.4-1/jpeg/jcmaster.c ****     validate_script(cinfo);
 2490              		.loc 1 819 0
 2491 040b 4C89E7   		movq	%r12, %rdi
 2492 040e E8000000 		call	validate_script
 2492      00
 2493              	.LVL281:
 820:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->block_size < DCTSIZE)
 2494              		.loc 1 820 0
 2495 0413 4183BC24 		cmpl	$7, 476(%r12)
 2495      DC010000 
 2495      07
 2496 041c 0F8EEA01 		jle	.L289
 2496      0000
 2497              	.L256:
 821:fltk-1.3.4-1/jpeg/jcmaster.c ****       reduce_script(cinfo);
 822:fltk-1.3.4-1/jpeg/jcmaster.c **** #else
 823:fltk-1.3.4-1/jpeg/jcmaster.c ****     ERREXIT(cinfo, JERR_NOT_COMPILED);
 824:fltk-1.3.4-1/jpeg/jcmaster.c **** #endif
 825:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 826:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->progressive_mode = FALSE;
 827:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->num_scans = 1;
 828:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 829:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 830:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->optimize_coding)
 2498              		.loc 1 830 0
 2499 0422 418BB424 		movl	296(%r12), %esi
 2499      28010000 
 2500 042a 85F6     		testl	%esi, %esi
 2501 042c 0F84F900 		je	.L263
 2501      0000
 831:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->arith_code = FALSE; /* disable arithmetic coding */
 832:fltk-1.3.4-1/jpeg/jcmaster.c ****   else if (! cinfo->arith_code &&
 833:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->progressive_mode ||
 834:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    (cinfo->block_size > 1 && cinfo->block_size < DCTSIZE)))
 835:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* TEMPORARY HACK ??? */
 836:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* assume default tables no good for progressive or reduced AC mode */
 837:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->optimize_coding = TRUE; /* force Huffman optimization */
 838:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 839:fltk-1.3.4-1/jpeg/jcmaster.c ****   /* Initialize my private state */
 840:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (transcode_only) {
 2502              		.loc 1 840 0
 2503 0432 85ED     		testl	%ebp, %ebp
 831:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->arith_code = FALSE; /* disable arithmetic coding */
 2504              		.loc 1 831 0
 2505 0434 41C78424 		movl	$0, 292(%r12)
 2505      24010000 
 2505      00000000 
 2506              		.loc 1 840 0
 2507 0440 0F852101 		jne	.L290
 2507      0000
 2508              	.L272:
 841:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* no main pass in transcoding */
 842:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (cinfo->optimize_coding)
 843:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pass_type = huff_opt_pass;
 844:fltk-1.3.4-1/jpeg/jcmaster.c ****     else
 845:fltk-1.3.4-1/jpeg/jcmaster.c ****       master->pass_type = output_pass;
 846:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 847:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* for normal compression, first pass is always this type: */
 848:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->pass_type = main_pass;
 2509              		.loc 1 848 0
 2510 0446 C7432000 		movl	$0, 32(%rbx)
 2510      000000
 2511              	.L270:
 849:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 850:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->scan_number = 0;
 2512              		.loc 1 850 0
 2513 044d C7432C00 		movl	$0, 44(%rbx)
 2513      000000
 851:fltk-1.3.4-1/jpeg/jcmaster.c ****   master->pass_number = 0;
 2514              		.loc 1 851 0
 2515 0454 C7432400 		movl	$0, 36(%rbx)
 2515      000000
 852:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->optimize_coding)
 2516              		.loc 1 852 0
 2517 045b 418B8424 		movl	296(%r12), %eax
 2517      28010000 
 2518 0463 85C0     		testl	%eax, %eax
 853:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->total_passes = cinfo->num_scans * 2;
 2519              		.loc 1 853 0
 2520 0465 418B8424 		movl	272(%r12), %eax
 2520      10010000 
 852:fltk-1.3.4-1/jpeg/jcmaster.c ****   if (cinfo->optimize_coding)
 2521              		.loc 1 852 0
 2522 046d 0F850001 		jne	.L291
 2522      0000
 854:fltk-1.3.4-1/jpeg/jcmaster.c ****   else
 855:fltk-1.3.4-1/jpeg/jcmaster.c ****     master->total_passes = cinfo->num_scans;
 2523              		.loc 1 855 0
 2524 0473 894328   		movl	%eax, 40(%rbx)
 856:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 2525              		.loc 1 856 0
 2526 0476 5B       		popq	%rbx
 2527              		.cfi_remember_state
 2528              		.cfi_def_cfa_offset 40
 2529              	.LVL282:
 2530 0477 5D       		popq	%rbp
 2531              		.cfi_def_cfa_offset 32
 2532              	.LVL283:
 2533 0478 415C     		popq	%r12
 2534              		.cfi_def_cfa_offset 24
 2535              	.LVL284:
 2536 047a 415D     		popq	%r13
 2537              		.cfi_def_cfa_offset 16
 2538 047c 415E     		popq	%r14
 2539              		.cfi_def_cfa_offset 8
 2540 047e C3       		ret
 2541              	.LVL285:
 2542              	.L228:
 2543              		.cfi_restore_state
 2544              	.LBB26:
 2545              	.LBB21:
 237:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 3: cinfo->natural_order = jpeg_natural_order3; break;
 2546              		.loc 1 237 0
 2547 047f 49C78424 		movq	$jpeg_natural_order2, 480(%r12)
 2547      E0010000 
 2547      00000000 
 2548 048b E988FCFF 		jmp	.L235
 2548      FF
 2549              	.L230:
 238:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 4: cinfo->natural_order = jpeg_natural_order4; break;
 2550              		.loc 1 238 0
 2551 0490 49C78424 		movq	$jpeg_natural_order3, 480(%r12)
 2551      E0010000 
 2551      00000000 
 2552 049c E977FCFF 		jmp	.L235
 2552      FF
 2553              	.L231:
 239:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 5: cinfo->natural_order = jpeg_natural_order5; break;
 2554              		.loc 1 239 0
 2555 04a1 49C78424 		movq	$jpeg_natural_order4, 480(%r12)
 2555      E0010000 
 2555      00000000 
 2556 04ad E966FCFF 		jmp	.L235
 2556      FF
 2557              	.L232:
 240:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 6: cinfo->natural_order = jpeg_natural_order6; break;
 2558              		.loc 1 240 0
 2559 04b2 49C78424 		movq	$jpeg_natural_order5, 480(%r12)
 2559      E0010000 
 2559      00000000 
 2560 04be E955FCFF 		jmp	.L235
 2560      FF
 2561              	.L233:
 241:fltk-1.3.4-1/jpeg/jcmaster.c ****   case 7: cinfo->natural_order = jpeg_natural_order7; break;
 2562              		.loc 1 241 0
 2563 04c3 49C78424 		movq	$jpeg_natural_order6, 480(%r12)
 2563      E0010000 
 2563      00000000 
 2564 04cf E944FCFF 		jmp	.L235
 2564      FF
 2565              	.L227:
 248:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2566              		.loc 1 248 0
 2567 04d4 83F807   		cmpl	$7, %eax
 243:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 2568              		.loc 1 243 0
 2569 04d7 49C78424 		movq	$jpeg_natural_order, 480(%r12)
 2569      E0010000 
 2569      00000000 
 248:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2570              		.loc 1 248 0
 2571 04e3 0F8E2FFC 		jle	.L235
 2571      FFFF
 2572 04e9 B83F0000 		movl	$63, %eax
 2572      00
 2573 04ee E92BFCFF 		jmp	.L269
 2573      FF
 2574              	.LVL286:
 2575              		.p2align 4,,10
 2576 04f3 0F1F4400 		.p2align 3
 2576      00
 2577              	.L252:
 315:fltk-1.3.4-1/jpeg/jcmaster.c **** 	compptr->DCT_v_scaled_size = compptr->DCT_h_scaled_size * 2;
 2578              		.loc 1 315 0
 2579 04f8 4501C0   		addl	%r8d, %r8d
 2580 04fb 4439C7   		cmpl	%r8d, %edi
 2581 04fe 0F8E05FE 		jle	.L253
 2581      FFFF
 316:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2582              		.loc 1 316 0
 2583 0504 45894528 		movl	%r8d, 40(%r13)
 2584 0508 E9FCFDFF 		jmp	.L253
 2584      FF
 2585              	.LVL287:
 2586              	.L236:
 253:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2587              		.loc 1 253 0
 2588 050d 498B0424 		movq	(%r12), %rax
 2589 0511 4C89E7   		movq	%r12, %rdi
 2590 0514 C7402821 		movl	$33, 40(%rax)
 2590      000000
 2591 051b 498B0424 		movq	(%r12), %rax
 2592 051f FF10     		call	*(%rax)
 2593              	.LVL288:
 2594 0521 418B4424 		movl	84(%r12), %eax
 2594      54
 2595 0526 E924FCFF 		jmp	.L237
 2595      FF
 2596              	.LVL289:
 2597              	.L263:
 2598              	.LBE21:
 2599              	.LBE26:
 832:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->progressive_mode ||
 2600              		.loc 1 832 0
 2601 052b 418B8C24 		movl	292(%r12), %ecx
 2601      24010000 
 2602 0533 85C9     		testl	%ecx, %ecx
 2603 0535 754A     		jne	.L265
 832:fltk-1.3.4-1/jpeg/jcmaster.c **** 	   (cinfo->progressive_mode ||
 2604              		.loc 1 832 0 is_stmt 0 discriminator 1
 2605 0537 418B9424 		movl	348(%r12), %edx
 2605      5C010000 
 2606 053f 85D2     		testl	%edx, %edx
 2607 0541 7510     		jne	.L266
 833:fltk-1.3.4-1/jpeg/jcmaster.c **** 	    (cinfo->block_size > 1 && cinfo->block_size < DCTSIZE)))
 2608              		.loc 1 833 0 is_stmt 1
 2609 0543 418B8424 		movl	476(%r12), %eax
 2609      DC010000 
 2610 054b 83E802   		subl	$2, %eax
 2611 054e 83F805   		cmpl	$5, %eax
 2612 0551 772E     		ja	.L265
 2613              	.L266:
 840:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* no main pass in transcoding */
 2614              		.loc 1 840 0
 2615 0553 85ED     		testl	%ebp, %ebp
 837:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2616              		.loc 1 837 0
 2617 0555 41C78424 		movl	$1, 296(%r12)
 2617      28010000 
 2617      01000000 
 840:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* no main pass in transcoding */
 2618              		.loc 1 840 0
 2619 0561 0F84DFFE 		je	.L272
 2619      FFFF
 2620              	.L290:
 843:fltk-1.3.4-1/jpeg/jcmaster.c ****     else
 2621              		.loc 1 843 0
 2622 0567 C7432001 		movl	$1, 32(%rbx)
 2622      000000
 2623 056e E9DAFEFF 		jmp	.L270
 2623      FF
 2624              	.L291:
 853:fltk-1.3.4-1/jpeg/jcmaster.c ****   else
 2625              		.loc 1 853 0
 2626 0573 01C0     		addl	%eax, %eax
 2627 0575 894328   		movl	%eax, 40(%rbx)
 2628              		.loc 1 856 0
 2629 0578 5B       		popq	%rbx
 2630              		.cfi_remember_state
 2631              		.cfi_def_cfa_offset 40
 2632              	.LVL290:
 2633 0579 5D       		popq	%rbp
 2634              		.cfi_def_cfa_offset 32
 2635              	.LVL291:
 2636 057a 415C     		popq	%r12
 2637              		.cfi_def_cfa_offset 24
 2638              	.LVL292:
 2639 057c 415D     		popq	%r13
 2640              		.cfi_def_cfa_offset 16
 2641 057e 415E     		popq	%r14
 2642              		.cfi_def_cfa_offset 8
 2643 0580 C3       		ret
 2644              	.LVL293:
 2645              	.L265:
 2646              		.cfi_restore_state
 840:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* no main pass in transcoding */
 2647              		.loc 1 840 0
 2648 0581 85ED     		testl	%ebp, %ebp
 2649 0583 0F84BDFE 		je	.L272
 2649      FFFF
 845:fltk-1.3.4-1/jpeg/jcmaster.c ****   } else {
 2650              		.loc 1 845 0
 2651 0589 C7432002 		movl	$2, 32(%rbx)
 2651      000000
 2652 0590 E9B8FEFF 		jmp	.L270
 2652      FF
 2653              	.L255:
 826:fltk-1.3.4-1/jpeg/jcmaster.c ****     cinfo->num_scans = 1;
 2654              		.loc 1 826 0
 2655 0595 41C78424 		movl	$0, 348(%r12)
 2655      5C010000 
 2655      00000000 
 827:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 2656              		.loc 1 827 0
 2657 05a1 41C78424 		movl	$1, 272(%r12)
 2657      10010000 
 2657      01000000 
 2658 05ad E970FEFF 		jmp	.L256
 2658      FF
 2659              	.LVL294:
 2660              	.L286:
 2661              	.LBB27:
 2662              	.LBB22:
 266:fltk-1.3.4-1/jpeg/jcmaster.c **** 	     MAX_COMPONENTS);
 2663              		.loc 1 266 0
 2664 05b2 498B0424 		movq	(%r12), %rax
 2665 05b6 4C89E7   		movq	%r12, %rdi
 2666 05b9 C740281B 		movl	$27, 40(%rax)
 2666      000000
 2667 05c0 498B0424 		movq	(%r12), %rax
 2668 05c4 418B5424 		movl	92(%r12), %edx
 2668      5C
 2669 05c9 89502C   		movl	%edx, 44(%rax)
 2670 05cc 498B0424 		movq	(%r12), %rax
 2671 05d0 C740300A 		movl	$10, 48(%rax)
 2671      000000
 2672 05d7 498B0424 		movq	(%r12), %rax
 2673 05db FF10     		call	*(%rax)
 2674              	.LVL295:
 2675 05dd 418B4C24 		movl	92(%r12), %ecx
 2675      5C
 2676 05e2 E9B8FBFF 		jmp	.L241
 2676      FF
 2677              	.L285:
 262:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2678              		.loc 1 262 0
 2679 05e7 498B0424 		movq	(%r12), %rax
 2680 05eb 4C89E7   		movq	%r12, %rdi
 2681 05ee C7402810 		movl	$16, 40(%rax)
 2681      000000
 2682 05f5 498B0424 		movq	(%r12), %rax
 2683 05f9 418B5424 		movl	88(%r12), %edx
 2683      58
 2684 05fe 89502C   		movl	%edx, 44(%rax)
 2685 0601 498B0424 		movq	(%r12), %rax
 2686 0605 FF10     		call	*(%rax)
 2687              	.LVL296:
 2688 0607 E985FBFF 		jmp	.L240
 2688      FF
 2689              	.LVL297:
 2690              	.L289:
 2691              	.LBE22:
 2692              	.LBE27:
 2693              	.LBB28:
 2694              	.LBB29:
 499:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* After skipping, idxout becomes smaller than idxin */
 2695              		.loc 1 499 0
 2696 060c 418BBC24 		movl	272(%r12), %edi
 2696      10010000 
 496:fltk-1.3.4-1/jpeg/jcmaster.c ****   idxout = 0;
 2697              		.loc 1 496 0
 2698 0614 4D8B8424 		movq	280(%r12), %r8
 2698      18010000 
 2699              	.LVL298:
 499:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* After skipping, idxout becomes smaller than idxin */
 2700              		.loc 1 499 0
 2701 061c 85FF     		testl	%edi, %edi
 2702 061e 0F8E8900 		jle	.L275
 2702      0000
 2703 0624 498D4024 		leaq	36(%r8), %rax
 2704 0628 31F6     		xorl	%esi, %esi
 2705 062a 31FF     		xorl	%edi, %edi
 2706 062c 31D2     		xorl	%edx, %edx
 2707 062e EB39     		jmp	.L258
 2708              	.LVL299:
 2709              		.p2align 4,,10
 2710              		.p2align 3
 2711              	.L262:
 501:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Copy rest of data;
 2712              		.loc 1 501 0
 2713 0630 39FE     		cmpl	%edi, %esi
 2714 0632 4863D7   		movslq	%edi, %rdx
 2715 0635 742E     		je	.L259
 505:fltk-1.3.4-1/jpeg/jcmaster.c ****     if (scanptr[idxout].Ss > cinfo->lim_Se)
 2716              		.loc 1 505 0
 2717 0637 488D0CD2 		leaq	(%rdx,%rdx,8), %rcx
 2718 063b 4C8B08   		movq	(%rax), %r9
 2719 063e 498D0C88 		leaq	(%r8,%rcx,4), %rcx
 2720 0642 4C8909   		movq	%r9, (%rcx)
 2721 0645 4C8B4808 		movq	8(%rax), %r9
 2722 0649 4C894908 		movq	%r9, 8(%rcx)
 2723 064d 4C8B4810 		movq	16(%rax), %r9
 2724 0651 4C894910 		movq	%r9, 16(%rcx)
 2725 0655 4C8B4818 		movq	24(%rax), %r9
 2726 0659 4C894918 		movq	%r9, 24(%rcx)
 2727 065d 448B4820 		movl	32(%rax), %r9d
 2728 0661 44894920 		movl	%r9d, 32(%rcx)
 2729              	.L259:
 2730 0665 4883C024 		addq	$36, %rax
 2731              	.LVL300:
 2732              	.L258:
 506:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Entire scan out of range - skip this entry */
 2733              		.loc 1 506 0
 2734 0669 488D14D2 		leaq	(%rdx,%rdx,8), %rdx
 2735 066d 418B8C24 		movl	488(%r12), %ecx
 2735      E8010000 
 2736 0675 498D1490 		leaq	(%r8,%rdx,4), %rdx
 2737 0679 394A14   		cmpl	%ecx, 20(%rdx)
 2738 067c 7F0B     		jg	.L260
 509:fltk-1.3.4-1/jpeg/jcmaster.c ****       /* Limit scan to end of block */
 2739              		.loc 1 509 0
 2740 067e 3B4A18   		cmpl	24(%rdx), %ecx
 2741 0681 7D03     		jge	.L261
 511:fltk-1.3.4-1/jpeg/jcmaster.c ****     idxout++;
 2742              		.loc 1 511 0
 2743 0683 894A18   		movl	%ecx, 24(%rdx)
 2744              	.L261:
 512:fltk-1.3.4-1/jpeg/jcmaster.c ****   }
 2745              		.loc 1 512 0
 2746 0686 83C701   		addl	$1, %edi
 2747              	.LVL301:
 2748              	.L260:
 499:fltk-1.3.4-1/jpeg/jcmaster.c ****     /* After skipping, idxout becomes smaller than idxin */
 2749              		.loc 1 499 0
 2750 0689 83C601   		addl	$1, %esi
 2751              	.LVL302:
 2752 068c 413BB424 		cmpl	272(%r12), %esi
 2752      10010000 
 2753 0694 7C9A     		jl	.L262
 2754              	.LVL303:
 2755              	.L257:
 515:fltk-1.3.4-1/jpeg/jcmaster.c **** }
 2756              		.loc 1 515 0
 2757 0696 4189BC24 		movl	%edi, 272(%r12)
 2757      10010000 
 2758 069e E97FFDFF 		jmp	.L256
 2758      FF
 2759              	.LVL304:
 2760              	.L274:
 2761              	.LBE29:
 2762              	.LBE28:
 2763              	.LBB31:
 2764              	.LBB23:
 272:fltk-1.3.4-1/jpeg/jcmaster.c ****        ci++, compptr++) {
 2765              		.loc 1 272 0
 2766 06a3 B8010000 		movl	$1, %eax
 2766      00
 2767 06a8 E931FDFF 		jmp	.L242
 2767      FF
 2768              	.LVL305:
 2769              	.L275:
 2770              	.LBE23:
 2771              	.LBE31:
 2772              	.LBB32:
 2773              	.LBB30:
 497:fltk-1.3.4-1/jpeg/jcmaster.c **** 
 2774              		.loc 1 497 0
 2775 06ad 31FF     		xorl	%edi, %edi
 2776 06af EBE5     		jmp	.L257
 2777              	.LBE30:
 2778              	.LBE32:
 2779              		.cfi_endproc
 2780              	.LFE71:
 2782              		.section	.text.unlikely.jinit_c_master_control
 2783              	.LCOLDE7:
 2784              		.section	.text.jinit_c_master_control
 2785              	.LHOTE7:
 2786              		.text
 2787              	.Letext0:
 2788              		.section	.text.unlikely.validate_script
 2789              	.Letext_cold0:
 2790              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 2791              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2792              		.file 4 "/usr/include/libio.h"
 2793              		.file 5 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 2794              		.file 6 "fltk-1.3.4-1/jpeg/jpeglib.h"
 2795              		.file 7 "fltk-1.3.4-1/jpeg/jpegint.h"
 2796              		.file 8 "fltk-1.3.4-1/jpeg/jerror.h"
 2797              		.file 9 "/usr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jcmaster.c
     /tmp/cca8PWJq.s:13     .text.validate_script:0000000000000000 validate_script
     /tmp/cca8PWJq.s:644    .text.select_scan_parameters:0000000000000000 select_scan_parameters
     /tmp/cca8PWJq.s:809    .text.pass_startup:0000000000000000 pass_startup
     /tmp/cca8PWJq.s:851    .text.finish_pass_master:0000000000000000 finish_pass_master
     /tmp/cca8PWJq.s:946    .text.per_scan_setup:0000000000000000 per_scan_setup
     /tmp/cca8PWJq.s:1216   .text.prepare_for_pass:0000000000000000 prepare_for_pass
     /tmp/cca8PWJq.s:1459   .text.jpeg_calc_jpeg_dimensions:0000000000000000 jpeg_calc_jpeg_dimensions
     /tmp/cca8PWJq.s:2072   .text.jinit_c_master_control:0000000000000000 jinit_c_master_control
                           .group:0000000000000000 wm4.0.cf9695abff4f49bdfe00dc4091904acd
                           .group:0000000000000000 wm4.stdcpredef.h.19.bf2bf6c5fb087dfb5ef2d2297c2795de
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.24da27e0a4d0d521fd057013d982b8b5
                           .group:0000000000000000 wm4.cdefs.h.19.56613e71f285ebad825b69b151170a81
                           .group:0000000000000000 wm4.wordsize.h.4.256e8fdbd37801980286acdbc40d0280
                           .group:0000000000000000 wm4.cdefs.h.432.619afd0aac7c4b439843706c1b28ddea
                           .group:0000000000000000 wm4.stubs64.h.10.918ceb5fa58268542bf143e4c1efbcf3
                           .group:0000000000000000 wm4.stdlib.h.27.59e2586c75bdbcb991b248ad7257b993
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.waitflags.h.25.e401b8bcfee800b540b27abd7cc78de9
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.endian.h.19.ff00c9c0f5e9f9a9719c5de76ace57b4
                           .group:0000000000000000 wm4.endian.h.41.24cced64aef71195a51d4daa8e4f4a95
                           .group:0000000000000000 wm4.types.h.89.468e2451361e3b92f048f6cad51690ff
                           .group:0000000000000000 wm4.typesizes.h.24.40eb69a6270178f15d1bf3d7b6635a8b
                           .group:0000000000000000 wm4.byteswap.h.38.11ee5fdc0f6cc53a16c505b9233cecef
                           .group:0000000000000000 wm4.endian.h.63.97272d7c64d5db8020003b32e9289502
                           .group:0000000000000000 wm4.waitstatus.h.99.408b6270fa6eb71377201a241ef15f79
                           .group:0000000000000000 wm4.stdlib.h.50.84aeca2ac6f37d40e1e9b3cef757ba2d
                           .group:0000000000000000 wm4.types.h.23.f6dcbaa72f8f71361acef09804d45a5e
                           .group:0000000000000000 wm4.time.h.53.beb46e650cd406cb917b6b96b45e640a
                           .group:0000000000000000 wm4.stddef.h.238.847b6907dabda77be90a9ab7ad789e2e
                           .group:0000000000000000 wm4.types.h.187.bd5a05039b505b3620e6973f1b2ffeb1
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.sigset.h.20.f36413b6d2364ad847d3db53fb03e683
                           .group:0000000000000000 wm4.select.h.36.f76c3b9e55c871743863013cc4cc14c9
                           .group:0000000000000000 wm4.time.h.66.e70ce69790c975f0efb369340c432e0b
                           .group:0000000000000000 wm4.time.h.25.ae5284cdff565e87a9198d819340325d
                           .group:0000000000000000 wm4.select.h.49.e9d2041e5035cc68ebd1a20f7dbc8514
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.sysmacros.h.20.8a0c33ff175cd9b434a86c0aaa36f0a2
                           .group:0000000000000000 wm4.types.h.229.67b3f66bd74b06b451caec392a72a945
                           .group:0000000000000000 wm4.pthreadtypes.h.25.6892b1493314fcf446bbc76e7362acba
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.26.4719156f1aea2bb9662fd6c582dc9a4c
                           .group:0000000000000000 wm4.stddef.h.238.04cc7214bceba497b20d15c10fd97511
                           .group:0000000000000000 wm4.stdio.h.36.2dd12c1fd035242ad5cfd0152a01be5a
                           .group:0000000000000000 wm4._G_config.h.5.b0f37d9e474454cf6e459063458db32f
                           .group:0000000000000000 wm4.wchar.h.80.eea3eba2d2a17aace9470a8e0d8218dc
                           .group:0000000000000000 wm4._G_config.h.46.5187c97b14fd664662cb32e6b94fc49e
                           .group:0000000000000000 wm4.libio.h.33.a775b9ecae273f33bc59931e9891e4ca
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.libio.h.51.dab170798ec1df48c625aea7c30e1b63
                           .group:0000000000000000 wm4.stdio.h.80.17b7dd1ca72d8a61987532cb1d80194a
                           .group:0000000000000000 wm4.stdio_lim.h.23.557290a6cddeba0587f574f29e3a5fb9
                           .group:0000000000000000 wm4.stdio.h.172.df21df34a7396d7da2e08f9b617d582f
                           .group:0000000000000000 wm4.stdio.h.26.cae64f7ada9bb8327a89dba6a5e93655
                           .group:0000000000000000 wm4.string.h.23.8394011d5995a16f15d67d04e84a1d69
                           .group:0000000000000000 wm4.string.h.24.1b0dc67418e7128d207285861439c2f8
                           .group:0000000000000000 wm4.string2.h.45.00535b99420fc3014c2da41d6645330d
                           .group:0000000000000000 wm4.string3.h.31.0c4b9301b754a2db05eaafef869657d2
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
__stack_chk_fail
jdiv_round_up
jpeg_natural_order7
jpeg_natural_order2
jpeg_natural_order3
jpeg_natural_order4
jpeg_natural_order5
jpeg_natural_order6
jpeg_natural_order
