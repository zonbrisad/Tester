   1              		.file	"jfdctfst.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.jpeg_fdct_ifast,"ax",@progbits
   5              		.p2align 4
   6              		.globl	jpeg_fdct_ifast
   8              	jpeg_fdct_ifast:
   9              	.LVL0:
  10              	.LFB51:
  11              		.file 1 "fltk-1.3.4-1/jpeg/jfdctfst.c"
   1:fltk-1.3.4-1/jpeg/jfdctfst.c **** /*
   2:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * jfdctfst.c
   3:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
   4:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * Copyright (C) 1994-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * Modified 2003-2009 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
   9:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * This file contains a fast, not so accurate integer implementation of the
  10:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * forward DCT (Discrete Cosine Transform).
  11:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
  12:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT
  13:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * on each column.  Direct algorithms are also available, but they are
  14:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * much more complex and seem not to be any faster when reduced to code.
  15:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
  16:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * This implementation is based on Arai, Agui, and Nakajima's algorithm for
  17:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * scaled DCT.  Their original paper (Trans. IEICE E-71(11):1095) is in
  18:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * Japanese, but the algorithm is described in the Pennebaker & Mitchell
  19:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * JPEG textbook (see REFERENCES section in file README).  The following code
  20:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * is based directly on figure 4-8 in P&M.
  21:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * While an 8-point DCT cannot be done in less than 11 multiplies, it is
  22:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * possible to arrange the computation so that many of the multiplies are
  23:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * simple scalings of the final outputs.  These multiplies can then be
  24:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * folded into the multiplications or divisions by the JPEG quantization
  25:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
  26:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * to be done in the DCT itself.
  27:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * The primary disadvantage of this method is that with fixed-point math,
  28:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * accuracy is lost due to imprecise representation of the scaled
  29:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * quantization values.  The smaller the quantization table entry, the less
  30:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * precise the scaled value, so this implementation does worse with high-
  31:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * quality-setting files than with low-quality ones.
  32:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
  33:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  34:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define JPEG_INTERNALS
  35:fltk-1.3.4-1/jpeg/jfdctfst.c **** #include "jinclude.h"
  36:fltk-1.3.4-1/jpeg/jfdctfst.c **** #include "jpeglib.h"
  37:fltk-1.3.4-1/jpeg/jfdctfst.c **** #include "jdct.h"		/* Private declarations for DCT subsystem */
  38:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  39:fltk-1.3.4-1/jpeg/jfdctfst.c **** #ifdef DCT_IFAST_SUPPORTED
  40:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  41:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  42:fltk-1.3.4-1/jpeg/jfdctfst.c **** /*
  43:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * This module is specialized to the case DCTSIZE = 8.
  44:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
  45:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  46:fltk-1.3.4-1/jpeg/jfdctfst.c **** #if DCTSIZE != 8
  47:fltk-1.3.4-1/jpeg/jfdctfst.c ****   Sorry, this code only copes with 8x8 DCTs. /* deliberate syntax err */
  48:fltk-1.3.4-1/jpeg/jfdctfst.c **** #endif
  49:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  50:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  51:fltk-1.3.4-1/jpeg/jfdctfst.c **** /* Scaling decisions are generally the same as in the LL&M algorithm;
  52:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * see jfdctint.c for more details.  However, we choose to descale
  53:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * (right shift) multiplication products as soon as they are formed,
  54:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * rather than carrying additional fractional bits into subsequent additions.
  55:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * This compromises accuracy slightly, but it lets us save a few shifts.
  56:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * More importantly, 16-bit arithmetic is then adequate (for 8-bit samples)
  57:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * everywhere except in the multiplications proper; this saves a good deal
  58:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * of work on 16-bit-int machines.
  59:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
  60:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * Again to save a few shifts, the intermediate results between pass 1 and
  61:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * pass 2 are not upscaled, but are represented only to integral precision.
  62:fltk-1.3.4-1/jpeg/jfdctfst.c ****  *
  63:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * A final compromise is to represent the multiplicative constants to only
  64:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * 8 fractional bits, rather than 13.  This saves some shifting work on some
  65:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * machines, and may also reduce the cost of multiplication (since there
  66:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * are fewer one-bits in the constants).
  67:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
  68:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  69:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define CONST_BITS  8
  70:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  71:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  72:fltk-1.3.4-1/jpeg/jfdctfst.c **** /* Some C compilers fail to reduce "FIX(constant)" at compile time, thus
  73:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * causing a lot of useless floating-point operations at run time.
  74:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * To get around this we use the following pre-calculated constants.
  75:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * If you change CONST_BITS you may want to add appropriate values.
  76:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * (With a reasonable C compiler, you can just rely on the FIX() macro...)
  77:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
  78:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  79:fltk-1.3.4-1/jpeg/jfdctfst.c **** #if CONST_BITS == 8
  80:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_382683433  ((INT32)   98)		/* FIX(0.382683433) */
  81:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_541196100  ((INT32)  139)		/* FIX(0.541196100) */
  82:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_707106781  ((INT32)  181)		/* FIX(0.707106781) */
  83:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_1_306562965  ((INT32)  334)		/* FIX(1.306562965) */
  84:fltk-1.3.4-1/jpeg/jfdctfst.c **** #else
  85:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_382683433  FIX(0.382683433)
  86:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_541196100  FIX(0.541196100)
  87:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_0_707106781  FIX(0.707106781)
  88:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define FIX_1_306562965  FIX(1.306562965)
  89:fltk-1.3.4-1/jpeg/jfdctfst.c **** #endif
  90:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  91:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  92:fltk-1.3.4-1/jpeg/jfdctfst.c **** /* We can gain a little more speed, with a further compromise in accuracy,
  93:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * by omitting the addition in a descaling shift.  This yields an incorrectly
  94:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * rounded result half the time...
  95:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
  96:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
  97:fltk-1.3.4-1/jpeg/jfdctfst.c **** #ifndef USE_ACCURATE_ROUNDING
  98:fltk-1.3.4-1/jpeg/jfdctfst.c **** #undef DESCALE
  99:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define DESCALE(x,n)  RIGHT_SHIFT(x, n)
 100:fltk-1.3.4-1/jpeg/jfdctfst.c **** #endif
 101:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 102:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 103:fltk-1.3.4-1/jpeg/jfdctfst.c **** /* Multiply a DCTELEM variable by an INT32 constant, and immediately
 104:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * descale to yield a DCTELEM result.
 105:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
 106:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 107:fltk-1.3.4-1/jpeg/jfdctfst.c **** #define MULTIPLY(var,const)  ((DCTELEM) DESCALE((var) * (const), CONST_BITS))
 108:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 109:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 110:fltk-1.3.4-1/jpeg/jfdctfst.c **** /*
 111:fltk-1.3.4-1/jpeg/jfdctfst.c ****  * Perform the forward DCT on one block of samples.
 112:fltk-1.3.4-1/jpeg/jfdctfst.c ****  */
 113:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 114:fltk-1.3.4-1/jpeg/jfdctfst.c **** GLOBAL(void)
 115:fltk-1.3.4-1/jpeg/jfdctfst.c **** jpeg_fdct_ifast (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 116:fltk-1.3.4-1/jpeg/jfdctfst.c **** {
  12              		.loc 1 116 1 view -0
  13              		.cfi_startproc
  14              		.loc 1 116 1 is_stmt 0 view .LVU1
  15 0000 F30F1EFA 		endbr64
 117:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  16              		.loc 1 117 3 is_stmt 1 view .LVU2
 118:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM tmp10, tmp11, tmp12, tmp13;
  17              		.loc 1 118 3 view .LVU3
 119:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM z1, z2, z3, z4, z5, z11, z13;
  18              		.loc 1 119 3 view .LVU4
 120:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM *dataptr;
  19              		.loc 1 120 3 view .LVU5
 121:fltk-1.3.4-1/jpeg/jfdctfst.c ****   JSAMPROW elemptr;
  20              		.loc 1 121 3 view .LVU6
 122:fltk-1.3.4-1/jpeg/jfdctfst.c ****   int ctr;
  21              		.loc 1 122 3 view .LVU7
 123:fltk-1.3.4-1/jpeg/jfdctfst.c ****   SHIFT_TEMPS
 124:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 125:fltk-1.3.4-1/jpeg/jfdctfst.c ****   /* Pass 1: process rows. */
 126:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 127:fltk-1.3.4-1/jpeg/jfdctfst.c ****   dataptr = data;
  22              		.loc 1 127 3 view .LVU8
  23              	.LVL1:
 128:fltk-1.3.4-1/jpeg/jfdctfst.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
  24              		.loc 1 128 3 view .LVU9
  25              		.loc 1 128 17 view .LVU10
 116:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  26              		.loc 1 116 1 is_stmt 0 view .LVU11
  27 0004 4157     		pushq	%r15
  28              		.cfi_def_cfa_offset 16
  29              		.cfi_offset 15, -16
 127:fltk-1.3.4-1/jpeg/jfdctfst.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
  30              		.loc 1 127 11 view .LVU12
  31 0006 4989FA   		movq	%rdi, %r10
  32 0009 4189D7   		movl	%edx, %r15d
 116:fltk-1.3.4-1/jpeg/jfdctfst.c ****   DCTELEM tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
  33              		.loc 1 116 1 view .LVU13
  34 000c 4156     		pushq	%r14
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 14, -24
  37 000e 4C8DB700 		leaq	256(%rdi), %r14
  37      010000
  38 0015 4155     		pushq	%r13
  39              		.cfi_def_cfa_offset 32
  40              		.cfi_offset 13, -32
  41 0017 4154     		pushq	%r12
  42              		.cfi_def_cfa_offset 40
  43              		.cfi_offset 12, -40
  44 0019 55       		pushq	%rbp
  45              		.cfi_def_cfa_offset 48
  46              		.cfi_offset 6, -48
  47 001a 53       		pushq	%rbx
  48              		.cfi_def_cfa_offset 56
  49              		.cfi_offset 3, -56
 127:fltk-1.3.4-1/jpeg/jfdctfst.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
  50              		.loc 1 127 11 view .LVU14
  51 001b 48897C24 		movq	%rdi, -8(%rsp)
  51      F8
  52              	.LVL2:
  53              		.p2align 4,,10
  54              		.p2align 3
  55              	.L2:
 129:fltk-1.3.4-1/jpeg/jfdctfst.c ****     elemptr = sample_data[ctr] + start_col;
  56              		.loc 1 129 5 is_stmt 1 discriminator 3 view .LVU15
  57              		.loc 1 129 13 is_stmt 0 discriminator 3 view .LVU16
  58 0020 4C8B1E   		movq	(%rsi), %r11
 130:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 131:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Load data into workspace */
 132:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[7]);
 133:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
 134:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 135:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
 136:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 137:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 138:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 139:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 140:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 141:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Even part */
 142:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 143:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp10 = tmp0 + tmp3;	/* phase 2 */
 144:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 145:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 146:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 147:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 148:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Apply unsigned->signed conversion */
 149:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[0] = tmp10 + tmp11 - 8 * CENTERJSAMPLE; /* phase 3 */
 150:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[4] = tmp10 - tmp11;
 151:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_707106781); /* c4 */
 153:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 154:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[6] = tmp13 - z1;
 155:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 156:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Odd part */
 157:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 158:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp10 = tmp4 + tmp5;	/* phase 2 */
 159:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 160:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 161:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 162:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* The rotator is modified from fig 4-8 to avoid extra negations. */
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z5 = MULTIPLY(tmp10 - tmp12, FIX_0_382683433); /* c6 */
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 166:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 167:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 168:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z11 = tmp7 + z3;		/* phase 5 */
 169:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 170:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 171:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[5] = z13 + z2;	/* phase 6 */
 172:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[3] = z13 - z2;
 173:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[1] = z11 + z4;
 174:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[7] = z11 - z4;
 175:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 176:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
  59              		.loc 1 176 13 discriminator 3 view .LVU17
  60 0023 4983C220 		addq	$32, %r10
  61              	.LVL3:
  62              		.loc 1 176 13 discriminator 3 view .LVU18
  63 0027 4883C608 		addq	$8, %rsi
 129:fltk-1.3.4-1/jpeg/jfdctfst.c ****     elemptr = sample_data[ctr] + start_col;
  64              		.loc 1 129 13 discriminator 3 view .LVU19
  65 002b 4D01FB   		addq	%r15, %r11
  66              	.LVL4:
 132:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
  67              		.loc 1 132 5 is_stmt 1 discriminator 3 view .LVU20
 132:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
  68              		.loc 1 132 37 is_stmt 0 discriminator 3 view .LVU21
  69 002e 410FB643 		movzbl	7(%r11), %eax
  69      07
 132:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
  70              		.loc 1 132 12 discriminator 3 view .LVU22
  71 0033 410FB63B 		movzbl	(%r11), %edi
 134:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  72              		.loc 1 134 12 discriminator 3 view .LVU23
  73 0037 410FB653 		movzbl	1(%r11), %edx
  73      01
 136:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  74              		.loc 1 136 12 discriminator 3 view .LVU24
  75 003c 450FB64B 		movzbl	2(%r11), %r9d
  75      02
 132:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
  76              		.loc 1 132 10 discriminator 3 view .LVU25
  77 0041 448D0407 		leal	(%rdi,%rax), %r8d
  78              	.LVL5:
 133:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
  79              		.loc 1 133 5 is_stmt 1 discriminator 3 view .LVU26
 133:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
  80              		.loc 1 133 10 is_stmt 0 discriminator 3 view .LVU27
  81 0045 29C7     		subl	%eax, %edi
  82              	.LVL6:
 134:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  83              		.loc 1 134 5 is_stmt 1 discriminator 3 view .LVU28
 134:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  84              		.loc 1 134 37 is_stmt 0 discriminator 3 view .LVU29
  85 0047 410FB643 		movzbl	6(%r11), %eax
  85      06
 138:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
  86              		.loc 1 138 37 discriminator 3 view .LVU30
  87 004c 410FB65B 		movzbl	4(%r11), %ebx
  87      04
 134:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  88              		.loc 1 134 10 discriminator 3 view .LVU31
  89 0051 8D0C02   		leal	(%rdx,%rax), %ecx
  90              	.LVL7:
 135:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
  91              		.loc 1 135 5 is_stmt 1 discriminator 3 view .LVU32
 135:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
  92              		.loc 1 135 10 is_stmt 0 discriminator 3 view .LVU33
  93 0054 29C2     		subl	%eax, %edx
  94              	.LVL8:
 136:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  95              		.loc 1 136 5 is_stmt 1 discriminator 3 view .LVU34
 136:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  96              		.loc 1 136 37 is_stmt 0 discriminator 3 view .LVU35
  97 0056 410FB643 		movzbl	5(%r11), %eax
  97      05
 136:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  98              		.loc 1 136 10 discriminator 3 view .LVU36
  99 005b 418D2C01 		leal	(%r9,%rax), %ebp
 100              	.LVL9:
 137:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 101              		.loc 1 137 5 is_stmt 1 discriminator 3 view .LVU37
 137:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 102              		.loc 1 137 10 is_stmt 0 discriminator 3 view .LVU38
 103 005f 4129C1   		subl	%eax, %r9d
 104              	.LVL10:
 138:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 105              		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU39
 138:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 106              		.loc 1 138 12 is_stmt 0 discriminator 3 view .LVU40
 107 0062 410FB643 		movzbl	3(%r11), %eax
 107      03
 138:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 108              		.loc 1 138 10 discriminator 3 view .LVU41
 109 0067 448D2418 		leal	(%rax,%rbx), %r12d
 110              	.LVL11:
 139:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 111              		.loc 1 139 5 is_stmt 1 discriminator 3 view .LVU42
 143:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 112              		.loc 1 143 5 discriminator 3 view .LVU43
 139:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 113              		.loc 1 139 10 is_stmt 0 discriminator 3 view .LVU44
 114 006b 29D8     		subl	%ebx, %eax
 115              	.LVL12:
 143:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 116              		.loc 1 143 11 discriminator 3 view .LVU45
 117 006d 478D1C20 		leal	(%r8,%r12), %r11d
 118              	.LVL13:
 144:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 119              		.loc 1 144 5 is_stmt 1 discriminator 3 view .LVU46
 144:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 120              		.loc 1 144 11 is_stmt 0 discriminator 3 view .LVU47
 121 0071 4529E0   		subl	%r12d, %r8d
 122              	.LVL14:
 145:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 123              		.loc 1 145 5 is_stmt 1 discriminator 3 view .LVU48
 145:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 124              		.loc 1 145 11 is_stmt 0 discriminator 3 view .LVU49
 125 0074 448D2429 		leal	(%rcx,%rbp), %r12d
 126              	.LVL15:
 146:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 127              		.loc 1 146 5 is_stmt 1 discriminator 3 view .LVU50
 149:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[4] = tmp10 - tmp11;
 128              		.loc 1 149 5 discriminator 3 view .LVU51
 146:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 129              		.loc 1 146 11 is_stmt 0 discriminator 3 view .LVU52
 130 0078 29E9     		subl	%ebp, %ecx
 131              	.LVL16:
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 132              		.loc 1 152 10 discriminator 3 view .LVU53
 133 007a 4401C1   		addl	%r8d, %ecx
 134              	.LVL17:
 149:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[4] = tmp10 - tmp11;
 135              		.loc 1 149 32 discriminator 3 view .LVU54
 136 007d 478DAC23 		leal	-1024(%r11,%r12), %r13d
 136      00FCFFFF 
 150:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 137              		.loc 1 150 24 discriminator 3 view .LVU55
 138 0085 4529E3   		subl	%r12d, %r11d
 139              	.LVL18:
 158:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 140              		.loc 1 158 11 discriminator 3 view .LVU56
 141 0088 4401C8   		addl	%r9d, %eax
 142              	.LVL19:
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 143              		.loc 1 152 10 discriminator 3 view .LVU57
 144 008b 4863C9   		movslq	%ecx, %rcx
 150:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 145              		.loc 1 150 24 discriminator 3 view .LVU58
 146 008e 45895AF0 		movl	%r11d, -16(%r10)
 147              	.LVL20:
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 148              		.loc 1 152 10 discriminator 3 view .LVU59
 149 0092 4869C9B5 		imulq	$181, %rcx, %rcx
 149      000000
 149:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[4] = tmp10 - tmp11;
 150              		.loc 1 149 32 discriminator 3 view .LVU60
 151 0099 45896AE0 		movl	%r13d, -32(%r10)
 150:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 152              		.loc 1 150 5 is_stmt 1 discriminator 3 view .LVU61
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 153              		.loc 1 152 5 discriminator 3 view .LVU62
 152:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[2] = tmp13 + z1;	/* phase 5 */
 154              		.loc 1 152 10 is_stmt 0 discriminator 3 view .LVU63
 155 009d 48C1F908 		sarq	$8, %rcx
 156              	.LVL21:
 153:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[6] = tmp13 - z1;
 157              		.loc 1 153 5 is_stmt 1 discriminator 3 view .LVU64
 153:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[6] = tmp13 - z1;
 158              		.loc 1 153 24 is_stmt 0 discriminator 3 view .LVU65
 159 00a1 458D1C08 		leal	(%r8,%rcx), %r11d
 154:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 160              		.loc 1 154 24 discriminator 3 view .LVU66
 161 00a5 4129C8   		subl	%ecx, %r8d
 162              	.LVL22:
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 163              		.loc 1 163 10 discriminator 3 view .LVU67
 164 00a8 89C1     		movl	%eax, %ecx
 165              	.LVL23:
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 166              		.loc 1 164 10 discriminator 3 view .LVU68
 167 00aa 4898     		cltq
 154:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 168              		.loc 1 154 24 discriminator 3 view .LVU69
 169 00ac 458942F8 		movl	%r8d, -8(%r10)
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 170              		.loc 1 164 10 discriminator 3 view .LVU70
 171 00b0 4869C08B 		imulq	$139, %rax, %rax
 171      000000
 160:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 172              		.loc 1 160 11 discriminator 3 view .LVU71
 173 00b7 448D0417 		leal	(%rdi,%rdx), %r8d
 159:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 174              		.loc 1 159 11 discriminator 3 view .LVU72
 175 00bb 4401CA   		addl	%r9d, %edx
 176              	.LVL24:
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 177              		.loc 1 163 10 discriminator 3 view .LVU73
 178 00be 4429C1   		subl	%r8d, %ecx
 153:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[6] = tmp13 - z1;
 179              		.loc 1 153 24 discriminator 3 view .LVU74
 180 00c1 45895AE8 		movl	%r11d, -24(%r10)
 154:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 181              		.loc 1 154 5 is_stmt 1 discriminator 3 view .LVU75
 158:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 182              		.loc 1 158 5 discriminator 3 view .LVU76
 159:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 183              		.loc 1 159 5 discriminator 3 view .LVU77
 184              	.LVL25:
 160:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 185              		.loc 1 160 5 discriminator 3 view .LVU78
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 186              		.loc 1 163 5 discriminator 3 view .LVU79
 166:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 187              		.loc 1 166 10 is_stmt 0 discriminator 3 view .LVU80
 188 00c5 4863D2   		movslq	%edx, %rdx
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 189              		.loc 1 163 10 discriminator 3 view .LVU81
 190 00c8 4863C9   		movslq	%ecx, %rcx
 166:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 191              		.loc 1 166 10 discriminator 3 view .LVU82
 192 00cb 4869D2B5 		imulq	$181, %rdx, %rdx
 192      000000
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 193              		.loc 1 163 10 discriminator 3 view .LVU83
 194 00d2 486BC962 		imulq	$98, %rcx, %rcx
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 195              		.loc 1 164 10 discriminator 3 view .LVU84
 196 00d6 48C1F808 		sarq	$8, %rax
 166:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 197              		.loc 1 166 10 discriminator 3 view .LVU85
 198 00da 48C1FA08 		sarq	$8, %rdx
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 199              		.loc 1 163 10 discriminator 3 view .LVU86
 200 00de 48C1F908 		sarq	$8, %rcx
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 201              		.loc 1 164 8 discriminator 3 view .LVU87
 202 00e2 01C8     		addl	%ecx, %eax
 163:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 203              		.loc 1 163 10 discriminator 3 view .LVU88
 204 00e4 4989CB   		movq	%rcx, %r11
 205              	.LVL26:
 164:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 206              		.loc 1 164 5 is_stmt 1 discriminator 3 view .LVU89
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 207              		.loc 1 165 5 discriminator 3 view .LVU90
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 208              		.loc 1 165 10 is_stmt 0 discriminator 3 view .LVU91
 209 00e7 4963C8   		movslq	%r8d, %rcx
 210              	.LVL27:
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 211              		.loc 1 165 10 discriminator 3 view .LVU92
 212 00ea 4869C94E 		imulq	$334, %rcx, %rcx
 212      010000
 168:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 213              		.loc 1 168 9 discriminator 3 view .LVU93
 214 00f1 448D0417 		leal	(%rdi,%rdx), %r8d
 215              	.LVL28:
 169:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 216              		.loc 1 169 9 discriminator 3 view .LVU94
 217 00f5 29D7     		subl	%edx, %edi
 218              	.LVL29:
 171:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[3] = z13 - z2;
 219              		.loc 1 171 22 discriminator 3 view .LVU95
 220 00f7 8D1438   		leal	(%rax,%rdi), %edx
 172:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[1] = z11 + z4;
 221              		.loc 1 172 22 discriminator 3 view .LVU96
 222 00fa 29C7     		subl	%eax, %edi
 171:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[3] = z13 - z2;
 223              		.loc 1 171 22 discriminator 3 view .LVU97
 224 00fc 418952F4 		movl	%edx, -12(%r10)
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 225              		.loc 1 165 10 discriminator 3 view .LVU98
 226 0100 48C1F908 		sarq	$8, %rcx
 172:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[1] = z11 + z4;
 227              		.loc 1 172 22 discriminator 3 view .LVU99
 228 0104 41897AEC 		movl	%edi, -20(%r10)
 165:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 229              		.loc 1 165 8 discriminator 3 view .LVU100
 230 0108 4401D9   		addl	%r11d, %ecx
 231              	.LVL30:
 166:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 232              		.loc 1 166 5 is_stmt 1 discriminator 3 view .LVU101
 168:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 233              		.loc 1 168 5 discriminator 3 view .LVU102
 169:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 234              		.loc 1 169 5 discriminator 3 view .LVU103
 171:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[3] = z13 - z2;
 235              		.loc 1 171 5 discriminator 3 view .LVU104
 172:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[1] = z11 + z4;
 236              		.loc 1 172 5 discriminator 3 view .LVU105
 173:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[7] = z11 - z4;
 237              		.loc 1 173 5 discriminator 3 view .LVU106
 173:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[7] = z11 - z4;
 238              		.loc 1 173 22 is_stmt 0 discriminator 3 view .LVU107
 239 010b 428D0401 		leal	(%rcx,%r8), %eax
 240              	.LVL31:
 174:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 241              		.loc 1 174 22 discriminator 3 view .LVU108
 242 010f 4129C8   		subl	%ecx, %r8d
 243              	.LVL32:
 173:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[7] = z11 - z4;
 244              		.loc 1 173 22 discriminator 3 view .LVU109
 245 0112 418942E4 		movl	%eax, -28(%r10)
 174:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 246              		.loc 1 174 5 is_stmt 1 discriminator 3 view .LVU110
 174:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 247              		.loc 1 174 22 is_stmt 0 discriminator 3 view .LVU111
 248 0116 458942FC 		movl	%r8d, -4(%r10)
 249              		.loc 1 176 5 is_stmt 1 discriminator 3 view .LVU112
 250              	.LVL33:
 128:fltk-1.3.4-1/jpeg/jfdctfst.c ****     elemptr = sample_data[ctr] + start_col;
 251              		.loc 1 128 32 discriminator 3 view .LVU113
 128:fltk-1.3.4-1/jpeg/jfdctfst.c ****     elemptr = sample_data[ctr] + start_col;
 252              		.loc 1 128 17 discriminator 3 view .LVU114
 128:fltk-1.3.4-1/jpeg/jfdctfst.c ****     elemptr = sample_data[ctr] + start_col;
 253              		.loc 1 128 3 is_stmt 0 discriminator 3 view .LVU115
 254 011a 4D39F2   		cmpq	%r14, %r10
 255 011d 0F85FDFE 		jne	.L2
 255      FFFF
 256 0123 488B7C24 		movq	-8(%rsp), %rdi
 256      F8
 257 0128 4C8D4F20 		leaq	32(%rdi), %r9
 258              	.LVL34:
 259 012c 0F1F4000 		.p2align 4,,10
 260              		.p2align 3
 261              	.L3:
 177:fltk-1.3.4-1/jpeg/jfdctfst.c ****   }
 178:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 179:fltk-1.3.4-1/jpeg/jfdctfst.c ****   /* Pass 2: process columns. */
 180:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 181:fltk-1.3.4-1/jpeg/jfdctfst.c ****   dataptr = data;
 182:fltk-1.3.4-1/jpeg/jfdctfst.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 183:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 262              		.loc 1 183 5 is_stmt 1 discriminator 3 view .LVU116
 263              		.loc 1 183 40 is_stmt 0 discriminator 3 view .LVU117
 264 0130 8B87E000 		movl	224(%rdi), %eax
 264      0000
 265              		.loc 1 183 19 discriminator 3 view .LVU118
 266 0136 8B37     		movl	(%rdi), %esi
 184:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*7];
 185:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 186:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 187:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 188:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 189:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 190:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 191:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 192:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Even part */
 193:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 194:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp10 = tmp0 + tmp3;	/* phase 2 */
 195:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 196:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 197:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 198:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 199:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*0] = tmp10 + tmp11; /* phase 3 */
 200:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*4] = tmp10 - tmp11;
 201:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_707106781); /* c4 */
 203:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 204:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*6] = tmp13 - z1;
 205:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 206:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* Odd part */
 207:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 208:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp10 = tmp4 + tmp5;	/* phase 2 */
 209:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 210:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 211:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 212:fltk-1.3.4-1/jpeg/jfdctfst.c ****     /* The rotator is modified from fig 4-8 to avoid extra negations. */
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z5 = MULTIPLY(tmp10 - tmp12, FIX_0_382683433); /* c6 */
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 216:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 217:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 218:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z11 = tmp7 + z3;		/* phase 5 */
 219:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 220:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 221:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*5] = z13 + z2; /* phase 6 */
 222:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*3] = z13 - z2;
 223:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*1] = z11 + z4;
 224:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*7] = z11 - z4;
 225:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 226:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr++;			/* advance pointer to next column */
 267              		.loc 1 226 12 discriminator 3 view .LVU119
 268 0138 4883C704 		addq	$4, %rdi
 269              	.LVL35:
 185:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 270              		.loc 1 185 19 discriminator 3 view .LVU120
 271 013c 8B571C   		movl	28(%rdi), %edx
 187:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 272              		.loc 1 187 19 discriminator 3 view .LVU121
 273 013f 448B473C 		movl	60(%rdi), %r8d
 183:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp7 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*7];
 274              		.loc 1 183 10 discriminator 3 view .LVU122
 275 0143 448D1406 		leal	(%rsi,%rax), %r10d
 276              	.LVL36:
 184:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 277              		.loc 1 184 5 is_stmt 1 discriminator 3 view .LVU123
 184:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 278              		.loc 1 184 10 is_stmt 0 discriminator 3 view .LVU124
 279 0147 29C6     		subl	%eax, %esi
 280              	.LVL37:
 185:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 281              		.loc 1 185 5 is_stmt 1 discriminator 3 view .LVU125
 185:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 282              		.loc 1 185 40 is_stmt 0 discriminator 3 view .LVU126
 283 0149 8B87BC00 		movl	188(%rdi), %eax
 283      0000
 189:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 284              		.loc 1 189 40 discriminator 3 view .LVU127
 285 014f 448B5F7C 		movl	124(%rdi), %r11d
 185:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp6 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 286              		.loc 1 185 10 discriminator 3 view .LVU128
 287 0153 8D0C02   		leal	(%rdx,%rax), %ecx
 288              	.LVL38:
 186:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 289              		.loc 1 186 5 is_stmt 1 discriminator 3 view .LVU129
 186:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 290              		.loc 1 186 10 is_stmt 0 discriminator 3 view .LVU130
 291 0156 29C2     		subl	%eax, %edx
 292              	.LVL39:
 187:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 293              		.loc 1 187 5 is_stmt 1 discriminator 3 view .LVU131
 187:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 294              		.loc 1 187 40 is_stmt 0 discriminator 3 view .LVU132
 295 0158 8B879C00 		movl	156(%rdi), %eax
 295      0000
 187:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp5 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 296              		.loc 1 187 10 discriminator 3 view .LVU133
 297 015e 418D2C00 		leal	(%r8,%rax), %ebp
 298              	.LVL40:
 188:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 299              		.loc 1 188 5 is_stmt 1 discriminator 3 view .LVU134
 188:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 300              		.loc 1 188 10 is_stmt 0 discriminator 3 view .LVU135
 301 0162 4129C0   		subl	%eax, %r8d
 302              	.LVL41:
 189:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 303              		.loc 1 189 5 is_stmt 1 discriminator 3 view .LVU136
 189:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 304              		.loc 1 189 19 is_stmt 0 discriminator 3 view .LVU137
 305 0165 8B475C   		movl	92(%rdi), %eax
 189:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp4 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 306              		.loc 1 189 10 discriminator 3 view .LVU138
 307 0168 468D2418 		leal	(%rax,%r11), %r12d
 308              	.LVL42:
 190:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 309              		.loc 1 190 5 is_stmt 1 discriminator 3 view .LVU139
 194:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 310              		.loc 1 194 5 discriminator 3 view .LVU140
 190:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 311              		.loc 1 190 10 is_stmt 0 discriminator 3 view .LVU141
 312 016c 4429D8   		subl	%r11d, %eax
 313              	.LVL43:
 194:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp13 = tmp0 - tmp3;
 314              		.loc 1 194 11 discriminator 3 view .LVU142
 315 016f 438D1C22 		leal	(%r10,%r12), %ebx
 316              	.LVL44:
 195:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 317              		.loc 1 195 5 is_stmt 1 discriminator 3 view .LVU143
 195:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp1 + tmp2;
 318              		.loc 1 195 11 is_stmt 0 discriminator 3 view .LVU144
 319 0173 4529E2   		subl	%r12d, %r10d
 320              	.LVL45:
 196:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 321              		.loc 1 196 5 is_stmt 1 discriminator 3 view .LVU145
 196:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp1 - tmp2;
 322              		.loc 1 196 11 is_stmt 0 discriminator 3 view .LVU146
 323 0176 448D2429 		leal	(%rcx,%rbp), %r12d
 324              	.LVL46:
 197:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 325              		.loc 1 197 5 is_stmt 1 discriminator 3 view .LVU147
 199:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*4] = tmp10 - tmp11;
 326              		.loc 1 199 5 discriminator 3 view .LVU148
 197:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 327              		.loc 1 197 11 is_stmt 0 discriminator 3 view .LVU149
 328 017a 29E9     		subl	%ebp, %ecx
 329              	.LVL47:
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 330              		.loc 1 202 10 discriminator 3 view .LVU150
 331 017c 4401D1   		addl	%r10d, %ecx
 332              	.LVL48:
 199:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*4] = tmp10 - tmp11;
 333              		.loc 1 199 32 discriminator 3 view .LVU151
 334 017f 468D2C23 		leal	(%rbx,%r12), %r13d
 200:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 335              		.loc 1 200 32 discriminator 3 view .LVU152
 336 0183 4429E3   		subl	%r12d, %ebx
 337              	.LVL49:
 208:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 338              		.loc 1 208 11 discriminator 3 view .LVU153
 339 0186 4401C0   		addl	%r8d, %eax
 340              	.LVL50:
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 341              		.loc 1 202 10 discriminator 3 view .LVU154
 342 0189 4863C9   		movslq	%ecx, %rcx
 200:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 343              		.loc 1 200 32 discriminator 3 view .LVU155
 344 018c 895F7C   		movl	%ebx, 124(%rdi)
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 345              		.loc 1 202 10 discriminator 3 view .LVU156
 346 018f 4869C9B5 		imulq	$181, %rcx, %rcx
 346      000000
 199:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*4] = tmp10 - tmp11;
 347              		.loc 1 199 32 discriminator 3 view .LVU157
 348 0196 44896FFC 		movl	%r13d, -4(%rdi)
 349              	.LVL51:
 200:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 350              		.loc 1 200 5 is_stmt 1 discriminator 3 view .LVU158
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 351              		.loc 1 202 5 discriminator 3 view .LVU159
 202:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*2] = tmp13 + z1; /* phase 5 */
 352              		.loc 1 202 10 is_stmt 0 discriminator 3 view .LVU160
 353 019a 48C1F908 		sarq	$8, %rcx
 354              	.LVL52:
 203:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*6] = tmp13 - z1;
 355              		.loc 1 203 5 is_stmt 1 discriminator 3 view .LVU161
 203:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*6] = tmp13 - z1;
 356              		.loc 1 203 32 is_stmt 0 discriminator 3 view .LVU162
 357 019e 418D1C0A 		leal	(%r10,%rcx), %ebx
 204:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 358              		.loc 1 204 32 discriminator 3 view .LVU163
 359 01a2 4129CA   		subl	%ecx, %r10d
 360              	.LVL53:
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 361              		.loc 1 213 10 discriminator 3 view .LVU164
 362 01a5 89C1     		movl	%eax, %ecx
 363              	.LVL54:
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 364              		.loc 1 214 10 discriminator 3 view .LVU165
 365 01a7 4898     		cltq
 204:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 366              		.loc 1 204 32 discriminator 3 view .LVU166
 367 01a9 448997BC 		movl	%r10d, 188(%rdi)
 367      000000
 368              	.LVL55:
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 369              		.loc 1 214 10 discriminator 3 view .LVU167
 370 01b0 4869C08B 		imulq	$139, %rax, %rax
 370      000000
 210:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 371              		.loc 1 210 11 discriminator 3 view .LVU168
 372 01b7 448D1416 		leal	(%rsi,%rdx), %r10d
 209:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 373              		.loc 1 209 11 discriminator 3 view .LVU169
 374 01bb 4401C2   		addl	%r8d, %edx
 375              	.LVL56:
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 376              		.loc 1 213 10 discriminator 3 view .LVU170
 377 01be 4429D1   		subl	%r10d, %ecx
 216:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 378              		.loc 1 216 10 discriminator 3 view .LVU171
 379 01c1 4863D2   		movslq	%edx, %rdx
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 380              		.loc 1 215 10 discriminator 3 view .LVU172
 381 01c4 4D63D2   		movslq	%r10d, %r10
 203:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*6] = tmp13 - z1;
 382              		.loc 1 203 32 discriminator 3 view .LVU173
 383 01c7 895F3C   		movl	%ebx, 60(%rdi)
 204:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 384              		.loc 1 204 5 is_stmt 1 discriminator 3 view .LVU174
 208:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp11 = tmp5 + tmp6;
 385              		.loc 1 208 5 discriminator 3 view .LVU175
 209:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp12 = tmp6 + tmp7;
 386              		.loc 1 209 5 discriminator 3 view .LVU176
 387              	.LVL57:
 210:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 388              		.loc 1 210 5 discriminator 3 view .LVU177
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 389              		.loc 1 213 5 discriminator 3 view .LVU178
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 390              		.loc 1 213 10 is_stmt 0 discriminator 3 view .LVU179
 391 01ca 4863C9   		movslq	%ecx, %rcx
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 392              		.loc 1 215 10 discriminator 3 view .LVU180
 393 01cd 4D69D24E 		imulq	$334, %r10, %r10
 393      010000
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 394              		.loc 1 213 10 discriminator 3 view .LVU181
 395 01d4 486BC962 		imulq	$98, %rcx, %rcx
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 396              		.loc 1 214 10 discriminator 3 view .LVU182
 397 01d8 48C1F808 		sarq	$8, %rax
 216:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 398              		.loc 1 216 10 discriminator 3 view .LVU183
 399 01dc 4869D2B5 		imulq	$181, %rdx, %rdx
 399      000000
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 400              		.loc 1 215 10 discriminator 3 view .LVU184
 401 01e3 49C1FA08 		sarq	$8, %r10
 213:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z2 = MULTIPLY(tmp10, FIX_0_541196100) + z5; /* c2-c6 */
 402              		.loc 1 213 10 discriminator 3 view .LVU185
 403 01e7 48C1F908 		sarq	$8, %rcx
 404              	.LVL58:
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 405              		.loc 1 214 5 is_stmt 1 discriminator 3 view .LVU186
 216:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 406              		.loc 1 216 10 is_stmt 0 discriminator 3 view .LVU187
 407 01eb 48C1FA08 		sarq	$8, %rdx
 214:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z4 = MULTIPLY(tmp12, FIX_1_306562965) + z5; /* c2+c6 */
 408              		.loc 1 214 8 discriminator 3 view .LVU188
 409 01ef 01C8     		addl	%ecx, %eax
 410              	.LVL59:
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 411              		.loc 1 215 5 is_stmt 1 discriminator 3 view .LVU189
 215:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z3 = MULTIPLY(tmp11, FIX_0_707106781); /* c4 */
 412              		.loc 1 215 8 is_stmt 0 discriminator 3 view .LVU190
 413 01f1 4401D1   		addl	%r10d, %ecx
 414              	.LVL60:
 216:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 415              		.loc 1 216 5 is_stmt 1 discriminator 3 view .LVU191
 218:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 416              		.loc 1 218 5 discriminator 3 view .LVU192
 218:fltk-1.3.4-1/jpeg/jfdctfst.c ****     z13 = tmp7 - z3;
 417              		.loc 1 218 9 is_stmt 0 discriminator 3 view .LVU193
 418 01f4 448D0416 		leal	(%rsi,%rdx), %r8d
 419              	.LVL61:
 219:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 420              		.loc 1 219 5 is_stmt 1 discriminator 3 view .LVU194
 219:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 421              		.loc 1 219 9 is_stmt 0 discriminator 3 view .LVU195
 422 01f8 29D6     		subl	%edx, %esi
 423              	.LVL62:
 221:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*3] = z13 - z2;
 424              		.loc 1 221 5 is_stmt 1 discriminator 3 view .LVU196
 221:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*3] = z13 - z2;
 425              		.loc 1 221 30 is_stmt 0 discriminator 3 view .LVU197
 426 01fa 8D1430   		leal	(%rax,%rsi), %edx
 427              	.LVL63:
 222:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*1] = z11 + z4;
 428              		.loc 1 222 30 discriminator 3 view .LVU198
 429 01fd 29C6     		subl	%eax, %esi
 430              	.LVL64:
 223:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*7] = z11 - z4;
 431              		.loc 1 223 30 discriminator 3 view .LVU199
 432 01ff 428D0401 		leal	(%rcx,%r8), %eax
 433              	.LVL65:
 224:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 434              		.loc 1 224 30 discriminator 3 view .LVU200
 435 0203 4129C8   		subl	%ecx, %r8d
 436              	.LVL66:
 221:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*3] = z13 - z2;
 437              		.loc 1 221 30 discriminator 3 view .LVU201
 438 0206 89979C00 		movl	%edx, 156(%rdi)
 438      0000
 222:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*1] = z11 + z4;
 439              		.loc 1 222 5 is_stmt 1 discriminator 3 view .LVU202
 222:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*1] = z11 + z4;
 440              		.loc 1 222 30 is_stmt 0 discriminator 3 view .LVU203
 441 020c 89775C   		movl	%esi, 92(%rdi)
 442              	.LVL67:
 223:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*7] = z11 - z4;
 443              		.loc 1 223 5 is_stmt 1 discriminator 3 view .LVU204
 223:fltk-1.3.4-1/jpeg/jfdctfst.c ****     dataptr[DCTSIZE*7] = z11 - z4;
 444              		.loc 1 223 30 is_stmt 0 discriminator 3 view .LVU205
 445 020f 89471C   		movl	%eax, 28(%rdi)
 224:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 446              		.loc 1 224 5 is_stmt 1 discriminator 3 view .LVU206
 224:fltk-1.3.4-1/jpeg/jfdctfst.c **** 
 447              		.loc 1 224 30 is_stmt 0 discriminator 3 view .LVU207
 448 0212 448987DC 		movl	%r8d, 220(%rdi)
 448      000000
 449              		.loc 1 226 5 is_stmt 1 discriminator 3 view .LVU208
 450              	.LVL68:
 182:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 451              		.loc 1 182 35 discriminator 3 view .LVU209
 182:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 452              		.loc 1 182 25 discriminator 3 view .LVU210
 182:fltk-1.3.4-1/jpeg/jfdctfst.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 453              		.loc 1 182 3 is_stmt 0 discriminator 3 view .LVU211
 454 0219 4C39CF   		cmpq	%r9, %rdi
 455 021c 0F850EFF 		jne	.L3
 455      FFFF
 227:fltk-1.3.4-1/jpeg/jfdctfst.c ****   }
 228:fltk-1.3.4-1/jpeg/jfdctfst.c **** }
 456              		.loc 1 228 1 view .LVU212
 457 0222 5B       		popq	%rbx
 458              		.cfi_def_cfa_offset 48
 459 0223 5D       		popq	%rbp
 460              		.cfi_def_cfa_offset 40
 461              	.LVL69:
 462              		.loc 1 228 1 view .LVU213
 463 0224 415C     		popq	%r12
 464              		.cfi_def_cfa_offset 32
 465 0226 415D     		popq	%r13
 466              		.cfi_def_cfa_offset 24
 467 0228 415E     		popq	%r14
 468              		.cfi_def_cfa_offset 16
 469 022a 415F     		popq	%r15
 470              		.cfi_def_cfa_offset 8
 471              	.LVL70:
 472              		.loc 1 228 1 view .LVU214
 473 022c C3       		ret
 474              		.cfi_endproc
 475              	.LFE51:
 477              		.text
 478              	.Letext0:
 479              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 480              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 481              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 482              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 483              		.file 6 "/usr/include/stdio.h"
 484              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 485              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 486              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 487              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 488              		.file 11 "fltk-1.3.4-1/jpeg/jdct.h"
 8347              		.section	.note.gnu.property,"a"
 8348              		.align 8
 8349 0000 04000000 		.long	 1f - 0f
 8350 0004 10000000 		.long	 4f - 1f
 8351 0008 05000000 		.long	 5
 8352              	0:
 8353 000c 474E5500 		.string	 "GNU"
 8354              	1:
 8355              		.align 8
 8356 0010 020000C0 		.long	 0xc0000002
 8357 0014 04000000 		.long	 3f - 2f
 8358              	2:
 8359 0018 03000000 		.long	 0x3
 8360              	3:
 8361 001c 00000000 		.align 8
 8362              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jfdctfst.c
     /tmp/ccIaxPr1.s:8      .text.jpeg_fdct_ifast:0000000000000000 jpeg_fdct_ifast
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2
                           .group:0000000000000000 wm4.jdct.h.68.77a1fce97df2af4ec80ad9c80171cb02

NO UNDEFINED SYMBOLS
