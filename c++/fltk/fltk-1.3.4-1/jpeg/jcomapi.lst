   1              		.file	"jcomapi.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.jpeg_abort,"ax",@progbits
   5              		.p2align 4
   6              		.globl	jpeg_abort
   8              	jpeg_abort:
   9              	.LVL0:
  10              	.LFB51:
  11              		.file 1 "fltk-1.3.4-1/jpeg/jcomapi.c"
   1:fltk-1.3.4-1/jpeg/jcomapi.c **** /*
   2:fltk-1.3.4-1/jpeg/jcomapi.c ****  * jcomapi.c
   3:fltk-1.3.4-1/jpeg/jcomapi.c ****  *
   4:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Copyright (C) 1994-1997, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jcomapi.c ****  * This file is part of the Independent JPEG Group's software.
   6:fltk-1.3.4-1/jpeg/jcomapi.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:fltk-1.3.4-1/jpeg/jcomapi.c ****  *
   8:fltk-1.3.4-1/jpeg/jcomapi.c ****  * This file contains application interface routines that are used for both
   9:fltk-1.3.4-1/jpeg/jcomapi.c ****  * compression and decompression.
  10:fltk-1.3.4-1/jpeg/jcomapi.c ****  */
  11:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  12:fltk-1.3.4-1/jpeg/jcomapi.c **** #define JPEG_INTERNALS
  13:fltk-1.3.4-1/jpeg/jcomapi.c **** #include "jinclude.h"
  14:fltk-1.3.4-1/jpeg/jcomapi.c **** #include "jpeglib.h"
  15:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  16:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  17:fltk-1.3.4-1/jpeg/jcomapi.c **** /*
  18:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Abort processing of a JPEG compression or decompression operation,
  19:fltk-1.3.4-1/jpeg/jcomapi.c ****  * but don't destroy the object itself.
  20:fltk-1.3.4-1/jpeg/jcomapi.c ****  *
  21:fltk-1.3.4-1/jpeg/jcomapi.c ****  * For this, we merely clean up all the nonpermanent memory pools.
  22:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Note that temp files (virtual arrays) are not allowed to belong to
  23:fltk-1.3.4-1/jpeg/jcomapi.c ****  * the permanent pool, so we will be able to close all temp files here.
  24:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Closing a data source or destination, if necessary, is the application's
  25:fltk-1.3.4-1/jpeg/jcomapi.c ****  * responsibility.
  26:fltk-1.3.4-1/jpeg/jcomapi.c ****  */
  27:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  28:fltk-1.3.4-1/jpeg/jcomapi.c **** GLOBAL(void)
  29:fltk-1.3.4-1/jpeg/jcomapi.c **** jpeg_abort (j_common_ptr cinfo)
  30:fltk-1.3.4-1/jpeg/jcomapi.c **** {
  12              		.loc 1 30 1 view -0
  13              		.cfi_startproc
  14              		.loc 1 30 1 is_stmt 0 view .LVU1
  15 0000 F30F1EFA 		endbr64
  31:fltk-1.3.4-1/jpeg/jcomapi.c ****   int pool;
  16              		.loc 1 31 3 is_stmt 1 view .LVU2
  32:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  33:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* Do nothing if called on a not-initialized or destroyed JPEG object. */
  34:fltk-1.3.4-1/jpeg/jcomapi.c ****   if (cinfo->mem == NULL)
  17              		.loc 1 34 3 view .LVU3
  18              		.loc 1 34 12 is_stmt 0 view .LVU4
  19 0004 488B4708 		movq	8(%rdi), %rax
  20              		.loc 1 34 6 view .LVU5
  21 0008 4885C0   		testq	%rax, %rax
  22 000b 7503     		jne	.L12
  23 000d C3       		ret
  24 000e 6690     		.p2align 4,,10
  25              		.p2align 3
  26              	.L12:
  30:fltk-1.3.4-1/jpeg/jcomapi.c ****   int pool;
  27              		.loc 1 30 1 discriminator 1 view .LVU6
  28 0010 53       		pushq	%rbx
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 3, -16
  31 0011 4889FB   		movq	%rdi, %rbx
  32              	.LVL1:
  35:fltk-1.3.4-1/jpeg/jcomapi.c ****     return;
  36:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  37:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* Releasing pools in reverse order might help avoid fragmentation
  38:fltk-1.3.4-1/jpeg/jcomapi.c ****    * with some (brain-damaged) malloc libraries.
  39:fltk-1.3.4-1/jpeg/jcomapi.c ****    */
  40:fltk-1.3.4-1/jpeg/jcomapi.c ****   for (pool = JPOOL_NUMPOOLS-1; pool > JPOOL_PERMANENT; pool--) {
  33              		.loc 1 40 33 is_stmt 1 discriminator 1 view .LVU7
  41:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->free_pool) (cinfo, pool);
  34              		.loc 1 41 5 discriminator 1 view .LVU8
  35              		.loc 1 41 6 is_stmt 0 discriminator 1 view .LVU9
  36 0014 BE010000 		movl	$1, %esi
  36      00
  37 0019 FF5048   		call	*72(%rax)
  38              	.LVL2:
  40:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->free_pool) (cinfo, pool);
  39              		.loc 1 40 57 is_stmt 1 discriminator 1 view .LVU10
  40:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->free_pool) (cinfo, pool);
  40              		.loc 1 40 33 discriminator 1 view .LVU11
  42:fltk-1.3.4-1/jpeg/jcomapi.c ****   }
  43:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  44:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* Reset overall state for possible reuse of object */
  45:fltk-1.3.4-1/jpeg/jcomapi.c ****   if (cinfo->is_decompressor) {
  41              		.loc 1 45 3 discriminator 1 view .LVU12
  42              		.loc 1 45 6 is_stmt 0 discriminator 1 view .LVU13
  43 001c 8B4320   		movl	32(%rbx), %eax
  44 001f 85C0     		testl	%eax, %eax
  45 0021 741D     		je	.L3
  46:fltk-1.3.4-1/jpeg/jcomapi.c ****     cinfo->global_state = DSTATE_START;
  46              		.loc 1 46 5 is_stmt 1 view .LVU14
  47              		.loc 1 46 25 is_stmt 0 view .LVU15
  48 0023 C74324C8 		movl	$200, 36(%rbx)
  48      000000
  47:fltk-1.3.4-1/jpeg/jcomapi.c ****     /* Try to keep application from accessing now-deleted marker list.
  48:fltk-1.3.4-1/jpeg/jcomapi.c ****      * A bit kludgy to do it here, but this is the most central place.
  49:fltk-1.3.4-1/jpeg/jcomapi.c ****      */
  50:fltk-1.3.4-1/jpeg/jcomapi.c ****     ((j_decompress_ptr) cinfo)->marker_list = NULL;
  49              		.loc 1 50 5 is_stmt 1 view .LVU16
  50              		.loc 1 50 45 is_stmt 0 view .LVU17
  51 002a 48C78398 		movq	$0, 408(%rbx)
  51      01000000 
  51      000000
  51:fltk-1.3.4-1/jpeg/jcomapi.c ****   } else {
  52:fltk-1.3.4-1/jpeg/jcomapi.c ****     cinfo->global_state = CSTATE_START;
  53:fltk-1.3.4-1/jpeg/jcomapi.c ****   }
  54:fltk-1.3.4-1/jpeg/jcomapi.c **** }
  52              		.loc 1 54 1 view .LVU18
  53 0035 5B       		popq	%rbx
  54              		.cfi_remember_state
  55              		.cfi_def_cfa_offset 8
  56              	.LVL3:
  57              		.loc 1 54 1 view .LVU19
  58 0036 C3       		ret
  59              	.LVL4:
  60 0037 660F1F84 		.p2align 4,,10
  60      00000000 
  60      00
  61              		.p2align 3
  62              	.L3:
  63              		.cfi_restore_state
  52:fltk-1.3.4-1/jpeg/jcomapi.c ****   }
  64              		.loc 1 52 5 is_stmt 1 view .LVU20
  52:fltk-1.3.4-1/jpeg/jcomapi.c ****   }
  65              		.loc 1 52 25 is_stmt 0 view .LVU21
  66 0040 C7432464 		movl	$100, 36(%rbx)
  66      000000
  67              		.loc 1 54 1 view .LVU22
  68 0047 5B       		popq	%rbx
  69              		.cfi_def_cfa_offset 8
  70              	.LVL5:
  71              		.loc 1 54 1 view .LVU23
  72 0048 C3       		ret
  73              		.cfi_endproc
  74              	.LFE51:
  76              		.section	.text.jpeg_destroy,"ax",@progbits
  77              		.p2align 4
  78              		.globl	jpeg_destroy
  80              	jpeg_destroy:
  81              	.LVL6:
  82              	.LFB52:
  55:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  56:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  57:fltk-1.3.4-1/jpeg/jcomapi.c **** /*
  58:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Destruction of a JPEG object.
  59:fltk-1.3.4-1/jpeg/jcomapi.c ****  *
  60:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Everything gets deallocated except the master jpeg_compress_struct itself
  61:fltk-1.3.4-1/jpeg/jcomapi.c ****  * and the error manager struct.  Both of these are supplied by the application
  62:fltk-1.3.4-1/jpeg/jcomapi.c ****  * and must be freed, if necessary, by the application.  (Often they are on
  63:fltk-1.3.4-1/jpeg/jcomapi.c ****  * the stack and so don't need to be freed anyway.)
  64:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Closing a data source or destination, if necessary, is the application's
  65:fltk-1.3.4-1/jpeg/jcomapi.c ****  * responsibility.
  66:fltk-1.3.4-1/jpeg/jcomapi.c ****  */
  67:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  68:fltk-1.3.4-1/jpeg/jcomapi.c **** GLOBAL(void)
  69:fltk-1.3.4-1/jpeg/jcomapi.c **** jpeg_destroy (j_common_ptr cinfo)
  70:fltk-1.3.4-1/jpeg/jcomapi.c **** {
  83              		.loc 1 70 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		.loc 1 70 1 is_stmt 0 view .LVU25
  86 0000 F30F1EFA 		endbr64
  71:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* We need only tell the memory manager to release everything. */
  72:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* NB: mem pointer is NULL if memory mgr failed to initialize. */
  73:fltk-1.3.4-1/jpeg/jcomapi.c ****   if (cinfo->mem != NULL)
  87              		.loc 1 73 3 is_stmt 1 view .LVU26
  88              		.loc 1 73 12 is_stmt 0 view .LVU27
  89 0004 488B4708 		movq	8(%rdi), %rax
  70:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* We need only tell the memory manager to release everything. */
  90              		.loc 1 70 1 view .LVU28
  91 0008 53       		pushq	%rbx
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 3, -16
  70:fltk-1.3.4-1/jpeg/jcomapi.c ****   /* We need only tell the memory manager to release everything. */
  94              		.loc 1 70 1 view .LVU29
  95 0009 4889FB   		movq	%rdi, %rbx
  96              		.loc 1 73 6 view .LVU30
  97 000c 4885C0   		testq	%rax, %rax
  98 000f 7403     		je	.L14
  74:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->self_destruct) (cinfo);
  99              		.loc 1 74 5 is_stmt 1 view .LVU31
 100              		.loc 1 74 6 is_stmt 0 view .LVU32
 101 0011 FF5050   		call	*80(%rax)
 102              	.LVL7:
 103              	.L14:
  75:fltk-1.3.4-1/jpeg/jcomapi.c ****   cinfo->mem = NULL;		/* be safe if jpeg_destroy is called twice */
 104              		.loc 1 75 3 is_stmt 1 view .LVU33
 105              		.loc 1 75 14 is_stmt 0 view .LVU34
 106 0014 48C74308 		movq	$0, 8(%rbx)
 106      00000000 
  76:fltk-1.3.4-1/jpeg/jcomapi.c ****   cinfo->global_state = 0;	/* mark it destroyed */
 107              		.loc 1 76 3 is_stmt 1 view .LVU35
 108              		.loc 1 76 23 is_stmt 0 view .LVU36
 109 001c C7432400 		movl	$0, 36(%rbx)
 109      000000
  77:fltk-1.3.4-1/jpeg/jcomapi.c **** }
 110              		.loc 1 77 1 view .LVU37
 111 0023 5B       		popq	%rbx
 112              		.cfi_def_cfa_offset 8
 113              	.LVL8:
 114              		.loc 1 77 1 view .LVU38
 115 0024 C3       		ret
 116              		.cfi_endproc
 117              	.LFE52:
 119              		.section	.text.jpeg_alloc_quant_table,"ax",@progbits
 120              		.p2align 4
 121              		.globl	jpeg_alloc_quant_table
 123              	jpeg_alloc_quant_table:
 124              	.LVL9:
 125              	.LFB53:
  78:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  79:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  80:fltk-1.3.4-1/jpeg/jcomapi.c **** /*
  81:fltk-1.3.4-1/jpeg/jcomapi.c ****  * Convenience routines for allocating quantization and Huffman tables.
  82:fltk-1.3.4-1/jpeg/jcomapi.c ****  * (Would jutils.c be a more reasonable place to put these?)
  83:fltk-1.3.4-1/jpeg/jcomapi.c ****  */
  84:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  85:fltk-1.3.4-1/jpeg/jcomapi.c **** GLOBAL(JQUANT_TBL *)
  86:fltk-1.3.4-1/jpeg/jcomapi.c **** jpeg_alloc_quant_table (j_common_ptr cinfo)
  87:fltk-1.3.4-1/jpeg/jcomapi.c **** {
 126              		.loc 1 87 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		.loc 1 87 1 is_stmt 0 view .LVU40
 129 0000 F30F1EFA 		endbr64
  88:fltk-1.3.4-1/jpeg/jcomapi.c ****   JQUANT_TBL *tbl;
 130              		.loc 1 88 3 is_stmt 1 view .LVU41
  89:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  90:fltk-1.3.4-1/jpeg/jcomapi.c ****   tbl = (JQUANT_TBL *)
 131              		.loc 1 90 3 view .LVU42
  87:fltk-1.3.4-1/jpeg/jcomapi.c ****   JQUANT_TBL *tbl;
 132              		.loc 1 87 1 is_stmt 0 view .LVU43
 133 0004 4883EC08 		subq	$8, %rsp
 134              		.cfi_def_cfa_offset 16
  91:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->alloc_small) (cinfo, JPOOL_PERMANENT, SIZEOF(JQUANT_TBL));
 135              		.loc 1 91 6 view .LVU44
 136 0008 488B4708 		movq	8(%rdi), %rax
 137 000c BA840000 		movl	$132, %edx
 137      00
 138 0011 31F6     		xorl	%esi, %esi
 139 0013 FF10     		call	*(%rax)
 140              	.LVL10:
  92:fltk-1.3.4-1/jpeg/jcomapi.c ****   tbl->sent_table = FALSE;	/* make sure this is false in any new table */
 141              		.loc 1 92 3 is_stmt 1 view .LVU45
 142              		.loc 1 92 19 is_stmt 0 view .LVU46
 143 0015 C7808000 		movl	$0, 128(%rax)
 143      00000000 
 143      0000
  93:fltk-1.3.4-1/jpeg/jcomapi.c ****   return tbl;
 144              		.loc 1 93 3 is_stmt 1 view .LVU47
  94:fltk-1.3.4-1/jpeg/jcomapi.c **** }
 145              		.loc 1 94 1 is_stmt 0 view .LVU48
 146 001f 4883C408 		addq	$8, %rsp
 147              		.cfi_def_cfa_offset 8
 148 0023 C3       		ret
 149              		.cfi_endproc
 150              	.LFE53:
 152              		.section	.text.jpeg_alloc_huff_table,"ax",@progbits
 153              		.p2align 4
 154              		.globl	jpeg_alloc_huff_table
 156              	jpeg_alloc_huff_table:
 157              	.LVL11:
 158              	.LFB54:
  95:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  96:fltk-1.3.4-1/jpeg/jcomapi.c **** 
  97:fltk-1.3.4-1/jpeg/jcomapi.c **** GLOBAL(JHUFF_TBL *)
  98:fltk-1.3.4-1/jpeg/jcomapi.c **** jpeg_alloc_huff_table (j_common_ptr cinfo)
  99:fltk-1.3.4-1/jpeg/jcomapi.c **** {
 159              		.loc 1 99 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		.loc 1 99 1 is_stmt 0 view .LVU50
 162 0000 F30F1EFA 		endbr64
 100:fltk-1.3.4-1/jpeg/jcomapi.c ****   JHUFF_TBL *tbl;
 163              		.loc 1 100 3 is_stmt 1 view .LVU51
 101:fltk-1.3.4-1/jpeg/jcomapi.c **** 
 102:fltk-1.3.4-1/jpeg/jcomapi.c ****   tbl = (JHUFF_TBL *)
 164              		.loc 1 102 3 view .LVU52
  99:fltk-1.3.4-1/jpeg/jcomapi.c ****   JHUFF_TBL *tbl;
 165              		.loc 1 99 1 is_stmt 0 view .LVU53
 166 0004 4883EC08 		subq	$8, %rsp
 167              		.cfi_def_cfa_offset 16
 103:fltk-1.3.4-1/jpeg/jcomapi.c ****     (*cinfo->mem->alloc_small) (cinfo, JPOOL_PERMANENT, SIZEOF(JHUFF_TBL));
 168              		.loc 1 103 6 view .LVU54
 169 0008 488B4708 		movq	8(%rdi), %rax
 170 000c BA180100 		movl	$280, %edx
 170      00
 171 0011 31F6     		xorl	%esi, %esi
 172 0013 FF10     		call	*(%rax)
 173              	.LVL12:
 104:fltk-1.3.4-1/jpeg/jcomapi.c ****   tbl->sent_table = FALSE;	/* make sure this is false in any new table */
 174              		.loc 1 104 3 is_stmt 1 view .LVU55
 175              		.loc 1 104 19 is_stmt 0 view .LVU56
 176 0015 C7801401 		movl	$0, 276(%rax)
 176      00000000 
 176      0000
 105:fltk-1.3.4-1/jpeg/jcomapi.c ****   return tbl;
 177              		.loc 1 105 3 is_stmt 1 view .LVU57
 106:fltk-1.3.4-1/jpeg/jcomapi.c **** }
 178              		.loc 1 106 1 is_stmt 0 view .LVU58
 179 001f 4883C408 		addq	$8, %rsp
 180              		.cfi_def_cfa_offset 8
 181 0023 C3       		ret
 182              		.cfi_endproc
 183              	.LFE54:
 185              		.text
 186              	.Letext0:
 187              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 188              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 189              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 190              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 191              		.file 6 "/usr/include/stdio.h"
 192              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 193              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 194              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 195              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 10540              		.section	.note.gnu.property,"a"
 10541              		.align 8
 10542 0000 04000000 		.long	 1f - 0f
 10543 0004 10000000 		.long	 4f - 1f
 10544 0008 05000000 		.long	 5
 10545              	0:
 10546 000c 474E5500 		.string	 "GNU"
 10547              	1:
 10548              		.align 8
 10549 0010 020000C0 		.long	 0xc0000002
 10550 0014 04000000 		.long	 3f - 2f
 10551              	2:
 10552 0018 03000000 		.long	 0x3
 10553              	3:
 10554 001c 00000000 		.align 8
 10555              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jcomapi.c
     /tmp/cccrEpBS.s:8      .text.jpeg_abort:0000000000000000 jpeg_abort
     /tmp/cccrEpBS.s:80     .text.jpeg_destroy:0000000000000000 jpeg_destroy
     /tmp/cccrEpBS.s:123    .text.jpeg_alloc_quant_table:0000000000000000 jpeg_alloc_quant_table
     /tmp/cccrEpBS.s:156    .text.jpeg_alloc_huff_table:0000000000000000 jpeg_alloc_huff_table
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

NO UNDEFINED SYMBOLS
